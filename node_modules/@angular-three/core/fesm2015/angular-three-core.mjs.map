{"version":3,"file":"angular-three-core.mjs","sources":["../../../../packages/core/src/lib/di/canvas.ts","../../../../packages/core/src/lib/di/performance.ts","../../../../packages/core/src/lib/di/resize.ts","../../../../packages/core/src/lib/services/resize.service.ts","../../../../packages/core/src/lib/utils/apply-props.ts","../../../../packages/core/src/lib/utils/calculate-dpr.ts","../../../../packages/core/src/lib/utils/is-orthographic.ts","../../../../packages/core/src/lib/stores/enhanced-rx-state.ts","../../../../packages/core/src/lib/stores/store.ts","../../../../packages/core/src/lib/utils/make-id.ts","../../../../packages/core/src/lib/stores/animation-frame.store.ts","../../../../packages/core/src/lib/services/loop.service.ts","../../../../packages/core/src/lib/utils/events.ts","../../../../packages/core/src/lib/stores/events.store.ts","../../../../packages/core/src/lib/stores/performance.store.ts","../../../../packages/core/src/lib/canvas.component.ts","../../../../packages/core/src/lib/core.module.ts","../../../../packages/core/src/lib/services/destroyed.service.ts","../../../../packages/core/src/lib/controllers/controller.ts","../../../../packages/core/src/lib/controllers/animation-subscriber.controller.ts","../../../../packages/core/src/lib/utils/make.ts","../../../../packages/core/src/lib/controllers/object-3d-inputs.controller.ts","../../../../packages/core/src/lib/controllers/object-3d.controller.ts","../../../../packages/core/src/lib/three/extender.ts","../../../../packages/core/src/lib/di/object3d.ts","../../../../packages/core/src/lib/pipes/vector.pipe.ts","../../../../packages/core/src/lib/pipes/color.pipe.ts","../../../../packages/core/src/lib/pipes/math.pipe.ts","../../../../packages/core/src/lib/pipes/fog.pipe.ts","../../../../packages/core/src/lib/pipes/side.pipe.ts","../../../../packages/core/src/lib/directives/repeat.directive.ts","../../../../packages/core/src/lib/directives/cursor.directive.ts","../../../../packages/core/src/lib/controllers/content-geometry.controller.ts","../../../../packages/core/src/lib/controllers/content-material.controller.ts","../../../../packages/core/src/lib/controllers/material-geometry.controller.ts","../../../../packages/core/src/lib/controllers/audio.controller.ts","../../../../packages/core/src/lib/three/audio.ts","../../../../packages/core/src/lib/three/line.ts","../../../../packages/core/src/lib/three/texture.ts","../../../../packages/core/src/lib/three/geometry.ts","../../../../packages/core/src/lib/three/light.ts","../../../../packages/core/src/lib/three/attribute.ts","../../../../packages/core/src/lib/three/curve.ts","../../../../packages/core/src/lib/three/helper.ts","../../../../packages/core/src/lib/three/material.ts","../../../../packages/core/src/lib/three/mesh.ts","../../../../packages/core/src/lib/three/sprite.ts","../../../../packages/core/src/lib/three/camera.ts","../../../../packages/core/src/lib/three/object-helper.ts","../../../../packages/core/src/lib/utils/build-graph.ts","../../../../packages/core/src/lib/services/loader.service.ts","../../../../packages/core/src/lib/utils/is-webgl-available.ts","../../../../packages/core/src/angular-three-core.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { NgtCanvasOptions } from '../types';\n\nconst DEFAULT_NGT_CANVAS_OPTIONS: NgtCanvasOptions = {\n  projectContent: false,\n};\n\nexport const NGT_CANVAS_OPTIONS = new InjectionToken<NgtCanvasOptions>(\n  'Canvas Options',\n  {\n    providedIn: 'root',\n    factory: () => DEFAULT_NGT_CANVAS_OPTIONS,\n  }\n);\n\nexport function provideCanvasOptions(options: Partial<NgtCanvasOptions>) {\n  return {\n    ...DEFAULT_NGT_CANVAS_OPTIONS,\n    ...(options || {}),\n  };\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgtPerformance } from '../types';\n\nexport const NGT_PERFORMANCE_OPTIONS = new InjectionToken<NgtPerformance>(\n  'NgtPerformance options',\n  {\n    providedIn: 'root',\n    factory: () => ({\n      current: 1,\n      min: 0.5,\n      max: 1,\n      debounce: 200,\n    }),\n  }\n);\n","import { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken } from '@angular/core';\n\nexport interface NgtResizeOptions {\n  box: ResizeObserverBoxOptions;\n  debounce: number | { scroll: number; resize: number };\n  scroll: boolean;\n  offsetSize: boolean;\n}\n\nexport const NGT_RESIZE_BOX_DEFAULT = 'content-box';\nexport const NGT_RESIZE_DEBOUNCE_DEFAULT = 200;\nexport const NGT_RESIZE_OPTIONS = new InjectionToken<NgtResizeOptions>(\n  'ngtResizeObserver Options',\n  {\n    providedIn: 'root',\n    factory: () => ({\n      box: NGT_RESIZE_BOX_DEFAULT,\n      scroll: false,\n      offsetSize: false,\n      debounce: NGT_RESIZE_DEBOUNCE_DEFAULT,\n    }),\n  }\n);\nexport const NGT_RESIZE_OBSERVER_SUPPORT = new InjectionToken<boolean>(\n  'Resize Observer API support',\n  {\n    providedIn: 'root',\n    factory: () => {\n      const document = inject(DOCUMENT);\n      return (\n        !!document.defaultView &&\n        'ResizeObserver' in document.defaultView &&\n        (document.defaultView as unknown as Record<string, unknown>)[\n          'ResizeObserver'\n        ] != null\n      );\n    },\n  }\n);\n","import { DOCUMENT } from '@angular/common';\nimport { ElementRef, Inject, Injectable, NgZone } from '@angular/core';\nimport {\n  debounceTime,\n  fromEvent,\n  MonoTypeOperatorFunction,\n  Observable,\n  pipe,\n  ReplaySubject,\n  share,\n  Subject,\n  takeUntil,\n} from 'rxjs';\nimport {\n  NGT_RESIZE_OBSERVER_SUPPORT,\n  NGT_RESIZE_OPTIONS,\n  NgtResizeOptions,\n} from '../di/resize';\n\nexport interface NgtResizeResult {\n  readonly entries: ReadonlyArray<ResizeObserverEntry>;\n  readonly x: number;\n  readonly y: number;\n  readonly width: number;\n  readonly height: number;\n  readonly top: number;\n  readonly right: number;\n  readonly bottom: number;\n  readonly left: number;\n  readonly dpr: number;\n}\n\n@Injectable()\nexport class NgtResize extends Observable<NgtResizeResult> {\n  constructor(\n    @Inject(ElementRef) { nativeElement }: ElementRef<Element>,\n    @Inject(NgZone) ngZone: NgZone,\n    @Inject(DOCUMENT) document: Document,\n    @Inject(NGT_RESIZE_OBSERVER_SUPPORT) isSupport: boolean,\n    @Inject(NGT_RESIZE_OPTIONS)\n    { box, offsetSize, scroll, debounce }: NgtResizeOptions\n  ) {\n    let observer: ResizeObserver;\n    let lastBounds: Omit<NgtResizeResult, 'entries' | 'dpr'>;\n    let lastEntries: ResizeObserverEntry[] = [];\n\n    const torndown$ = new Subject<void>();\n    const scrollContainers: HTMLOrSVGElement[] | null = findScrollContainers(\n      nativeElement as HTMLElement\n    );\n\n    // set actual debounce values early, so effects know if they should react accordingly\n    const scrollDebounce = debounce\n      ? typeof debounce === 'number'\n        ? debounce\n        : debounce.scroll\n      : null;\n\n    const resizeDebounce = debounce\n      ? typeof debounce === 'number'\n        ? debounce\n        : debounce.resize\n      : null;\n\n    const debounceAndDestroy = <T>(\n      debounce: number | null\n    ): MonoTypeOperatorFunction<T> => {\n      return pipe(debounceTime(debounce ?? 0), takeUntil(torndown$));\n    };\n\n    super((subscriber) => {\n      if (!isSupport) {\n        subscriber.error(\n          'ResizeObserver is not supported in your browser. Please use a polyfill'\n        );\n        return;\n      }\n\n      ngZone.runOutsideAngular(() => {\n        const callback = (entries: ResizeObserverEntry[]) => {\n          lastEntries = entries;\n          const { left, top, width, height, bottom, right, x, y } =\n            nativeElement.getBoundingClientRect() as unknown as Omit<\n              NgtResizeResult,\n              'entries'\n            >;\n\n          const size = {\n            left,\n            top,\n            width,\n            height,\n            bottom,\n            right,\n            x,\n            y,\n          };\n\n          if (nativeElement instanceof HTMLElement && offsetSize) {\n            size.height = nativeElement.offsetHeight;\n            size.width = nativeElement.offsetWidth;\n          }\n\n          Object.freeze(size);\n          subscriber.next({\n            entries,\n            dpr: document.defaultView!.devicePixelRatio,\n            ...size,\n          });\n          if (!areBoundsEqual(lastBounds || {}, size)) {\n            lastBounds = size;\n          }\n        };\n\n        const boundEntriesCallback = () => {\n          callback(lastEntries);\n        };\n\n        observer = new ResizeObserver(callback);\n        observer.observe(nativeElement, { box });\n        if (scroll) {\n          if (scrollContainers) {\n            scrollContainers.forEach((scrollContainer) => {\n              fromEvent(scrollContainer as HTMLElement, 'scroll', {\n                capture: true,\n                passive: true,\n              })\n                .pipe(debounceAndDestroy(scrollDebounce))\n                .subscribe(boundEntriesCallback);\n            });\n          }\n\n          fromEvent(document.defaultView as Window, 'scroll', {\n            capture: true,\n            passive: true,\n          })\n            .pipe(debounceAndDestroy(scrollDebounce))\n            .subscribe(boundEntriesCallback);\n        }\n\n        fromEvent(document.defaultView as Window, 'resize')\n          .pipe(debounceAndDestroy(resizeDebounce))\n          .subscribe(boundEntriesCallback);\n      });\n\n      return () => {\n        if (observer) {\n          observer.unobserve(nativeElement);\n          observer.disconnect();\n        }\n        torndown$.next();\n        torndown$.complete();\n      };\n    });\n\n    return this.pipe(\n      debounceTime(scrollDebounce || 0),\n      share({\n        connector: () => new ReplaySubject(1),\n        resetOnRefCountZero: true,\n        resetOnComplete: true,\n      })\n    );\n  }\n}\n\n// Returns a list of scroll offsets\nfunction findScrollContainers(\n  element: HTMLOrSVGElement | null\n): HTMLOrSVGElement[] {\n  const result: HTMLOrSVGElement[] = [];\n  if (!element || element === document.body) return result;\n  const { overflow, overflowX, overflowY } = window.getComputedStyle(\n    element as HTMLElement\n  );\n  if (\n    [overflow, overflowX, overflowY].some(\n      (prop) => prop === 'auto' || prop === 'scroll'\n    )\n  )\n    result.push(element);\n  return [\n    ...result,\n    ...findScrollContainers((element as HTMLElement).parentElement),\n  ];\n}\n\n// Checks if element boundaries are equal\nconst keys: (keyof Omit<NgtResizeResult, 'entries' | 'dpr'>)[] = [\n  'x',\n  'y',\n  'top',\n  'bottom',\n  'left',\n  'right',\n  'width',\n  'height',\n];\nconst areBoundsEqual = (\n  a: Omit<NgtResizeResult, 'entries' | 'dpr'>,\n  b: Omit<NgtResizeResult, 'entries' | 'dpr'>\n): boolean => keys.every((key) => a[key] === b[key]);\n","import * as THREE from 'three';\nimport {\n  AnyConstructor,\n  NgtInstance,\n  NgtInstanceInternal,\n  UnknownRecord,\n} from '../types';\n\nfunction checkNeedsUpdate(value: unknown) {\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    'needsUpdate' in (value as UnknownRecord)\n  ) {\n    (value as UnknownRecord)['needsUpdate'] = true;\n  }\n}\n\nexport function applyProps(instance: NgtInstance, props: UnknownRecord) {\n  if (!Object.keys(props).length) return;\n\n  if ('__ngt' in props) {\n    instance['__ngt'] = props['__ngt'] as NgtInstanceInternal;\n  }\n\n  const unknownInstance = instance as unknown as UnknownRecord;\n\n  if (\n    unknownInstance['set'] != null &&\n    typeof unknownInstance['set'] === 'function'\n  ) {\n    try {\n      (unknownInstance['set'] as Function)(props);\n    } catch (e) {\n      console.info(\n        `Swallowing erroneous \"set\" invoke on ${unknownInstance.constructor.name} as non fatal: ${e}`\n      );\n    }\n  }\n\n  for (const [key, prop] of Object.entries(props)) {\n    const currentInstance = unknownInstance;\n    const targetProp = currentInstance[key] as UnknownRecord;\n\n    if (\n      targetProp &&\n      targetProp['set'] &&\n      (targetProp['copy'] || targetProp instanceof THREE.Layers)\n    ) {\n      if (Array.isArray(prop)) {\n        if (targetProp.fromArray) (targetProp.fromArray as Function)(prop);\n        else (targetProp.set as Function)(...prop);\n      } else if (\n        targetProp.copy &&\n        prop &&\n        (prop as AnyConstructor<unknown>).constructor &&\n        targetProp.constructor.name ===\n          (prop as AnyConstructor<unknown>).constructor.name\n      ) {\n        (targetProp.copy as Function)(prop);\n      } else if (prop !== undefined) {\n        const isColor = targetProp instanceof THREE.Color;\n        // Allow setting array scalars\n        if (!isColor && targetProp.setScalar)\n          (targetProp.setScalar as Function)(prop);\n        // Layers have no copy function, we must therefore copy the mask property\n        else if (\n          targetProp instanceof THREE.Layers &&\n          prop instanceof THREE.Layers\n        )\n          targetProp.mask = prop.mask;\n        // Otherwise just set ...\n        else (targetProp.set as Function)(prop);\n        // Auto-convert sRGB colors, for now ...\n        // https://github.com/pmndrs/react-three-fiber/issues/344\n        if (!currentInstance.linear && isColor)\n          (targetProp as unknown as THREE.Color).convertSRGBToLinear();\n      }\n    } else {\n      currentInstance[key] = prop;\n      // Auto-convert sRGB textures, for now ...\n      // https://github.com/pmndrs/react-three-fiber/issues/344\n      if (\n        !currentInstance.linear &&\n        currentInstance[key] instanceof THREE.Texture\n      )\n        (currentInstance[key] as THREE.Texture).encoding = THREE.sRGBEncoding;\n    }\n\n    checkNeedsUpdate(prop);\n    checkNeedsUpdate(targetProp);\n  }\n}\n","import { NgtDpr } from '../types';\n\nexport function calculateDpr(dpr: NgtDpr) {\n  return Array.isArray(dpr)\n    ? Math.min(Math.max(dpr[0], window.devicePixelRatio), dpr[1])\n    : dpr;\n}\n","import * as THREE from 'three';\n\nexport const isOrthographicCamera = (\n  def: THREE.Camera\n): def is THREE.OrthographicCamera =>\n  def && (def as THREE.OrthographicCamera).isOrthographicCamera;\n","import { Directive } from '@angular/core';\nimport { createSideEffectObservable, RxState } from '@rx-angular/state';\nimport { catchError, EMPTY, noop, Observable, Subject, tap } from 'rxjs';\n\n// From RxAngular\n\ntype SubjectMap<T> = { [K in keyof T]: Subject<T[K]> };\n\nexport type ValuesOf<O> = O[keyof O];\n// type Keys = KeysOf<{ a: string, b: number }>; // \"a\" | \"b\"\nexport type KeysOf<O> = keyof O;\n\n// class vs instance\ntype InstanceOrType<T> = T extends abstract new (...args: any) => infer R\n  ? R\n  : T;\n\n// We infer all arguments instead of just the first one as we are more flexible for later changes\ntype InferArguments<T> = T extends (...args: infer R) => any ? R : never;\n\n// It helps to infer the type of an objects key\n// We have to use it because using just U[K] directly would @TODO\ntype Select<U, K> = K extends keyof U ? U[K] : never;\n\ntype ExtractString<T extends object> = Extract<keyof T, string>;\n\n// Helper to get either the params of the transform function, or if the function is not present a fallback type\ntype FunctionParamsOrValueType<U, K, F> = InferArguments<\n  Select<U, K>\n> extends never\n  ? [F]\n  : InferArguments<Select<U, K>>;\n\nexport type Actions = {};\n\nexport type ActionTransforms<T extends {}> = Partial<{\n  [K in keyof T]: (...args: any[]) => T[K];\n}>;\n\nexport type ActionDispatchFn<O extends unknown[]> = (\n  ...value: InstanceOrType<O>\n) => void;\n\nexport type ActionDispatchers<T extends Actions, U extends {}> = {\n  [K in keyof T]: ActionDispatchFn<\n    FunctionParamsOrValueType<U, K, Select<T, K>>\n  >;\n};\n\nexport type ActionObservables<T extends Actions> = {\n  [K in ExtractString<T> as `${K}$`]: Observable<InstanceOrType<T[K]>>;\n};\n\nexport type RxActions<T extends Actions, U extends {} = T> = ActionDispatchers<\n  T,\n  U\n> &\n  ActionObservables<T>;\n\nfunction actionProxyHandler<T, U>(\n  subjects: SubjectMap<T>,\n  transforms?: U\n): ProxyHandler<RxActions<T, U>> {\n  return {\n    get(_, property: string) {\n      type KeysOfT = KeysOf<T>;\n      type ValuesOfT = ValuesOf<T>;\n\n      const prop = property as KeysOfT;\n\n      // the user wants to get a observable\n      if (prop.toString().split('').pop() === '$') {\n        const propName = prop.toString().slice(0, -1) as KeysOfT;\n        subjects[propName] = subjects[propName] || new Subject<ValuesOfT>();\n        return subjects[propName];\n      }\n\n      // the user wants to get a dispatcher function\n      return (args: ValuesOfT) => {\n        subjects[prop] = subjects[prop] || new Subject<ValuesOfT>();\n        const val =\n          transforms && (transforms as any)[prop]\n            ? (transforms as any)[prop](args)\n            : args;\n        subjects[prop].next(val);\n      };\n    },\n    set() {\n      throw new Error('No setters available. To emit call the property name.');\n    },\n  };\n}\n\n@Directive()\nexport class EnhancedRxState<\n  T extends object = {},\n  TActions extends object = {}\n> extends RxState<T> {\n  private subjects: SubjectMap<TActions> = {} as SubjectMap<TActions>;\n\n  private effect$ = createSideEffectObservable();\n  private effectSubscription = this.effect$.subscribe();\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.effectSubscription.unsubscribe();\n    this.destroy();\n  }\n\n  create<U extends ActionTransforms<TActions> = {}>(\n    transforms?: U\n  ): RxActions<TActions, U> {\n    return new Proxy(\n      {} as RxActions<TActions, U>,\n      actionProxyHandler(this.subjects, transforms)\n    ) as RxActions<TActions, U>;\n  }\n\n  destroy() {\n    for (const subjectsKey in this.subjects) {\n      this.subjects[subjectsKey].complete();\n    }\n  }\n\n  holdEffect<S>(\n    obsOrObsWithSideEffect: Observable<S>,\n    sideEffectFn: (\n      value: S,\n      firstRun: boolean\n    ) =>\n      | ((previousValue: S | undefined, isUnsubscribed: boolean) => void)\n      | void\n  ): void {\n    let cleanupFn: (\n      previousValue: S | undefined,\n      isUnsubscribed: boolean\n    ) => void = noop;\n    let firstRun = false;\n    let latestValue: S | undefined = undefined;\n\n    const sideEffect = obsOrObsWithSideEffect.pipe(catchError((_) => EMPTY));\n\n    this.effect$.nextEffectObservable(\n      sideEffect.pipe(\n        tap({\n          next: (value: S) => {\n            if (cleanupFn && firstRun) {\n              cleanupFn(latestValue, false);\n            }\n\n            const cleanUpOrVoid = sideEffectFn(value, firstRun);\n            if (cleanUpOrVoid) {\n              cleanupFn = cleanUpOrVoid;\n            }\n\n            latestValue = value;\n\n            if (!firstRun) {\n              firstRun = true;\n            }\n          },\n          unsubscribe: () => {\n            if (cleanupFn) {\n              cleanupFn(latestValue, true);\n            }\n          },\n        })\n      )\n    );\n  }\n}\n\nexport function capitalize<T extends string>(str: T): Capitalize<T> {\n  return (str.charAt(0).toUpperCase() + str.slice(1)) as Capitalize<T>;\n}\n","import { ElementRef, Inject, Injectable } from '@angular/core';\nimport { selectSlice } from '@rx-angular/state';\nimport { map, Observable } from 'rxjs';\nimport * as THREE from 'three';\nimport { NGT_PERFORMANCE_OPTIONS } from '../di/performance';\nimport { NgtResize, NgtResizeResult } from '../services/resize.service';\nimport {\n  NgtInstance,\n  NgtPerformance,\n  NgtRaycaster,\n  NgtSize,\n  NgtState,\n  NgtViewport,\n  UnknownRecord,\n} from '../types';\nimport { applyProps } from '../utils/apply-props';\nimport { calculateDpr } from '../utils/calculate-dpr';\nimport { isOrthographicCamera } from '../utils/is-orthographic';\nimport { EnhancedRxState } from './enhanced-rx-state';\n\nconst position = new THREE.Vector3();\nconst defaultTarget = new THREE.Vector3();\n\n@Injectable()\nexport class NgtStore extends EnhancedRxState<\n  NgtState,\n  { canvasElement: HTMLCanvasElement }\n> {\n  #allReady$ = this.select(\n    selectSlice(['scene', 'camera', 'renderer', 'raycaster']),\n    map(\n      ({ scene, camera, renderer, raycaster }) =>\n        !!scene && !!camera && !!renderer && !!raycaster\n    )\n  );\n\n  #dimensions$ = this.select(selectSlice(['size', 'viewport']));\n\n  actions = this.create();\n\n  constructor(\n    @Inject(NGT_PERFORMANCE_OPTIONS) performance: NgtPerformance,\n    { nativeElement: canvasHost }: ElementRef<HTMLElement>,\n    @Inject(NgtResize)\n    private resizeResult$: Observable<NgtResizeResult>\n  ) {\n    super();\n    this.set({\n      ready: false,\n      vr: false,\n      orthographic: false,\n      flat: false,\n      linear: false,\n      size: {\n        height: canvasHost.clientHeight,\n        width: canvasHost.clientWidth,\n      },\n      mouse: new THREE.Vector2(),\n      clock: new THREE.Clock(),\n      frameloop: 'always',\n      performance,\n      controls: null,\n      objects: {},\n      dpr: 1,\n      shadows: false,\n      cameraOptions: {},\n      glOptions: {},\n      raycasterOptions: {},\n      sceneOptions: {},\n      viewport: {\n        initialDpr: calculateDpr(this.get('dpr')),\n        dpr: calculateDpr(this.get('dpr')),\n        width: canvasHost.clientWidth,\n        height: canvasHost.clientHeight,\n        aspect: canvasHost.clientWidth / canvasHost.clientHeight,\n        distance: 0,\n        factor: 0,\n        getCurrentViewport: (\n          camera = this.get('camera'),\n          target = defaultTarget,\n          size = this.get('size')\n        ) => {\n          const { width, height } = size;\n          const aspect = width / height;\n          const distance = camera\n            .getWorldDirection(position)\n            .distanceTo(target);\n          if (isOrthographicCamera(camera)) {\n            return {\n              width: width / camera.zoom,\n              height: height / camera.zoom,\n              factor: 1,\n              distance,\n              aspect,\n            };\n          }\n\n          const fov = (camera.fov * Math.PI) / 180; // convert vertical fov to radians\n          const h = 2 * Math.tan(fov / 2) * distance; // height of viewport\n          const w = h * aspect; // width of viewport\n          return {\n            width: w,\n            height: h,\n            factor: width / w,\n            distance,\n            aspect,\n          };\n        },\n      },\n    });\n\n    this.connect('ready', this.#allReady$);\n    this.connect('size', this.resizeResult$, (_, { width, height }) => ({\n      width,\n      height,\n    }));\n    this.connect('viewport', this.resizeResult$, ({ viewport }, { dpr }) => ({\n      ...viewport,\n      dpr,\n    }));\n\n    this.hold(this.#dimensions$, this.#updateDimensions.bind(this));\n    this.holdEffect(this.actions.canvasElement$, this.#init.bind(this));\n  }\n\n  #init(canvasElement: HTMLCanvasElement) {\n    const { size, viewport, vr, linear, flat, orthographic } = this.get();\n    const {\n      shadows,\n      glOptions,\n      sceneOptions,\n      cameraOptions,\n      raycasterOptions,\n    } = this.get();\n\n    // Scene\n    const scene = new THREE.Scene();\n    applyProps(scene, sceneOptions as UnknownRecord);\n\n    // Camera\n    const isCamera = cameraOptions instanceof THREE.Camera;\n    const camera = isCamera\n      ? cameraOptions\n      : orthographic\n      ? new THREE.OrthographicCamera(0, 0, 0, 0, 0.1, 1000)\n      : new THREE.PerspectiveCamera(75, size.width / size.height, 0.1, 1000);\n\n    if (!isCamera) {\n      camera.position.z = 5;\n      if (cameraOptions) {\n        applyProps(camera, cameraOptions as UnknownRecord);\n        // Update projection matrix after applying props\n        camera.updateProjectionMatrix();\n      }\n      // look at center if initial rotation isn't set\n      if (!cameraOptions?.rotation) camera.lookAt(0, 0, 0);\n    }\n\n    // Raycaster\n    const raycaster = new THREE.Raycaster();\n    const { params, ...options } = raycasterOptions || {};\n    applyProps(raycaster as unknown as NgtInstance, {\n      enabled: true,\n      ...options,\n      params: { ...raycaster.params, ...params },\n    });\n\n    // Renderer\n    const customRenderer = (\n      typeof glOptions === 'function' ? glOptions(canvasElement) : glOptions\n    ) as THREE.WebGLRenderer;\n\n    // userland custom renderer, assign as-is\n    if (!!customRenderer?.render) {\n      this.set({\n        renderer: customRenderer,\n        scene,\n        camera,\n        raycaster: raycaster as NgtRaycaster,\n      });\n      return;\n    }\n\n    const renderer = new THREE.WebGLRenderer({\n      powerPreference: 'high-performance',\n      canvas: canvasElement,\n      antialias: true,\n      alpha: true,\n      ...(glOptions || {}),\n    });\n\n    if (glOptions) {\n      applyProps(\n        renderer as unknown as NgtInstance,\n        glOptions as UnknownRecord\n      );\n    }\n\n    if (shadows) {\n      renderer.shadowMap.enabled = true;\n      if (typeof shadows === 'object') {\n        Object.assign(renderer.shadowMap, shadows);\n      } else {\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n      }\n    }\n\n    if (!linear) {\n      // auto color management\n      renderer.toneMapping = THREE.ACESFilmicToneMapping;\n      renderer.outputEncoding = THREE.sRGBEncoding;\n    } else {\n      renderer.outputEncoding = THREE.LinearEncoding;\n    }\n\n    if (flat) {\n      renderer.toneMapping = THREE.NoToneMapping;\n    }\n\n    renderer.setClearAlpha(0);\n    renderer.setPixelRatio(calculateDpr(viewport.dpr));\n    renderer.setSize(size.width, size.height);\n\n    if (vr) {\n      renderer.xr.enabled = true;\n    }\n\n    this.set({\n      renderer,\n      scene,\n      camera,\n      raycaster: raycaster as NgtRaycaster,\n    });\n\n    return () => {\n      const { renderer, vr } = this.get();\n      if (renderer) {\n        renderer.renderLists.dispose();\n        renderer.forceContextLoss();\n\n        if (vr) {\n          renderer.setAnimationLoop(null);\n        }\n      }\n    };\n  }\n\n  #updateDimensions({\n    size,\n    viewport,\n  }: {\n    size: NgtSize;\n    viewport: NgtViewport;\n  }) {\n    const { camera, renderer, ready, cameraOptions } = this.get();\n\n    if (ready) {\n      // update renderer\n      renderer.setPixelRatio(viewport.dpr);\n      renderer.setSize(size.width, size.height);\n\n      // leave the userland camera alone\n      if (cameraOptions instanceof THREE.Camera) return;\n\n      if (isOrthographicCamera(camera)) {\n        camera.left = size.width / -2;\n        camera.right = size.width / 2;\n        camera.top = size.height / 2;\n        camera.bottom = size.height / -2;\n      } else {\n        camera.aspect = size.width / size.height;\n      }\n\n      camera.updateProjectionMatrix();\n      // https://github.com/pmndrs/react-three-fiber/issues/178\n      // Update matrix world since the renderer is a frame late\n      camera.updateMatrixWorld();\n    }\n  }\n}\n","import { MathUtils } from 'three';\nimport type { NgtIntersection } from '../types';\n\n/**\n * Generate a random Id or an Event's uuid\n *\n * @param {NgtIntersection} event\n *\n * @internal\n * @private\n */\nexport function makeId(event?: NgtIntersection) {\n  if (event) {\n    return (\n      (event.eventObject || event.object).uuid +\n      '/' +\n      event.index +\n      event.instanceId\n    );\n  }\n\n  return id();\n}\n\nconst cache: { [id: string]: boolean | undefined } = {};\n\n/**\n * Generates a UUID.\n */\nexport function id(): string {\n  const newId = MathUtils.generateUUID();\n\n  // ensure not already used\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n\n  return id();\n}\n","import { Injectable } from '@angular/core';\nimport { noop } from 'rxjs';\nimport { NgtAnimationFrameStoreState, NgtAnimationRecord } from '../types';\nimport { makeId } from '../utils/make-id';\nimport { EnhancedRxState } from './enhanced-rx-state';\n\n@Injectable()\nexport class NgtAnimationFrameStore extends EnhancedRxState<\n  NgtAnimationFrameStoreState,\n  {\n    animationRecord: NgtAnimationRecord & { uuid: string };\n    unsubscriberUuid: string;\n  }\n> {\n  actions = this.create();\n\n  register(animationRecord: NgtAnimationRecord) {\n    const uuid = animationRecord.obj?.uuid || makeId();\n    this.actions.animationRecord({ ...animationRecord, uuid });\n    return uuid;\n  }\n\n  constructor() {\n    super();\n    this.set({ animations: {}, subscribers: [], hasPriority: false });\n\n    this.hold(this.select('animations'), (animations) => {\n      const subscribers = Object.values(animations);\n      subscribers.sort((a, b) => (a.priority || 0) - (b.priority || 0));\n      const hasPriority = subscribers.some(({ priority }) => !!priority);\n      this.set({ hasPriority, subscribers });\n    });\n    this.hold(this.actions.animationRecord$, this.#register.bind(this));\n    this.hold(this.actions.unsubscriberUuid$, this.#unregister.bind(this));\n  }\n\n  #register(\n    { uuid, ...animationRecord }: NgtAnimationRecord & { uuid: string } = {\n      uuid: '',\n      callback: noop,\n    }\n  ) {\n    if (uuid) {\n      this.set((state) => {\n        return {\n          animations: { ...state.animations, [uuid]: animationRecord },\n        };\n      });\n    }\n\n    return (\n      prevRecord: (NgtAnimationRecord & { uuid: string }) | undefined,\n      isUnsub: boolean\n    ) => {\n      if ((prevRecord && prevRecord.uuid !== uuid) || isUnsub) {\n        this.#unregister(uuid);\n      }\n    };\n  }\n\n  #unregister(uuid: string) {\n    if (!uuid) return;\n    this.set((state) => {\n      const { [uuid]: _, ...animations } = state.animations;\n      return { animations };\n    });\n  }\n\n  ngOnDestroy() {\n    this.set({ animations: {} });\n    super.ngOnDestroy();\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { requestAnimationFrame } from '@rx-angular/cdk/zone-less';\nimport { NgtAnimationFrameStore } from '../stores/animation-frame.store';\nimport { NgtStore } from '../stores/store';\nimport { NgtAnimationFrameStoreState, NgtRender, NgtState } from '../types';\n\n@Injectable()\nexport class NgtLoopService {\n  #running = false;\n  #repeat?: number;\n  #frames = 1;\n\n  constructor(\n    private store: NgtStore,\n    private animationFrameStore: NgtAnimationFrameStore,\n    private ngZone: NgZone\n  ) {}\n\n  render(\n    timestamp: number,\n    state: NgtState,\n    animationFrameState: NgtAnimationFrameStoreState\n  ): number {\n    return this.ngZone.runOutsideAngular(() => {\n      const {\n        clock,\n        frameloop,\n        camera,\n        scene,\n        renderer,\n        mouse,\n        size,\n        viewport,\n      } = state;\n      const { subscribers, hasPriority } = animationFrameState;\n\n      if (renderer) {\n        let delta = clock.getDelta();\n        // In frameloop='never' mode, clock times are updated using the provided timestamp\n        if (frameloop === 'never' && typeof timestamp === 'number') {\n          delta = timestamp - clock.elapsedTime;\n          clock.oldTime = clock.elapsedTime;\n          clock.elapsedTime = timestamp;\n        }\n\n        const renderState = {\n          clock,\n          camera,\n          scene,\n          renderer,\n          mouse,\n          size,\n          viewport,\n          delta,\n        };\n\n        for (const subscriber of subscribers) {\n          subscriber.callback(renderState as NgtRender, subscriber.obj);\n        }\n\n        if (!hasPriority) {\n          renderer.render(scene!, camera!);\n        }\n      }\n\n      this.#frames = Math.max(0, this.#frames - 1);\n      return state.frameloop === 'always' ? 1 : this.#frames;\n    });\n  }\n\n  loop(timestamp: number): number | undefined {\n    return this.ngZone.runOutsideAngular(() => {\n      this.#running = true;\n      this.#repeat = 0;\n\n      const state = this.store.get();\n      if (state.ready && (state.frameloop === 'always' || this.#frames > 0)) {\n        this.#repeat += this.render(\n          timestamp,\n          state,\n          this.animationFrameStore.get()\n        );\n      }\n\n      if (this.#repeat > 0) return requestAnimationFrame(this.loop.bind(this));\n\n      this.#running = false;\n      return;\n    });\n  }\n\n  invalidate(state: NgtState = this.store.get()) {\n    if (state.vr) {\n      state.renderer?.setAnimationLoop((timestamp) => {\n        this.render(\n          timestamp,\n          this.store.get(),\n          this.animationFrameStore.get()\n        );\n      });\n      return;\n    }\n\n    if (!state.ready || state.frameloop === 'never') return;\n\n    // Increase frames, do not go higher than 60\n    this.#frames = Math.min(60, this.#frames + 1);\n    // If the render-loop isn't active, start it\n    if (!this.#running) {\n      this.#running = true;\n      requestAnimationFrame(this.loop.bind(this));\n    }\n  }\n}\n","/**\n * From r3f https://github.com/pmndrs/react-three-fiber/blob/master/packages/fiber/src/core/events.ts\n */\n\nimport * as THREE from 'three';\nimport type {\n  NgtCamera,\n  NgtDomEvent,\n  NgtEvent,\n  NgtEventHandlers,\n  NgtEventsStoreState,\n  NgtInstance,\n  NgtIntersection,\n  NgtPointerCaptureTarget,\n  NgtRender,\n  NgtState,\n} from '../types';\nimport { makeId } from './make-id';\n\n/** Release pointer captures.\n * This is called by releasePointerCapture in the API, and when an object is removed.\n */\nfunction releaseInternalPointerCapture(\n  capturedMap: Map<number, Map<THREE.Object3D, NgtPointerCaptureTarget>>,\n  obj: THREE.Object3D,\n  captures: Map<THREE.Object3D, NgtPointerCaptureTarget>,\n  pointerId: number\n): void {\n  const captureData: NgtPointerCaptureTarget | undefined = captures.get(obj);\n  if (captureData) {\n    captures.delete(obj);\n    // If this was the last capturing object for this pointer\n    if (captures.size === 0) {\n      capturedMap.delete(pointerId);\n      captureData.target.releasePointerCapture(pointerId);\n    }\n  }\n}\n\nexport function removeInteractivity(\n  eventsStateGetter: () => NgtEventsStoreState,\n  object: THREE.Object3D\n) {\n  const { internal } = eventsStateGetter();\n  // Removes every trace of an object from the data store\n  internal.interaction = internal.interaction.filter((o) => o !== object);\n  internal.initialHits = internal.initialHits.filter((o) => o !== object);\n  internal.hovered.forEach((value, key) => {\n    if (value.eventObject === object || value.object === object) {\n      internal.hovered.delete(key);\n    }\n  });\n  internal.capturedMap.forEach((captures, pointerId) => {\n    releaseInternalPointerCapture(\n      internal.capturedMap,\n      object,\n      captures,\n      pointerId\n    );\n  });\n}\n\nfunction getRenderState(state: NgtState): NgtRender {\n  const { mouse, camera, clock, renderer, scene, size, viewport } = state;\n  const delta = clock.getDelta();\n\n  return {\n    size,\n    mouse,\n    camera: camera as NgtCamera,\n    delta,\n    clock,\n    renderer: renderer as THREE.WebGLRenderer,\n    scene: scene as THREE.Scene,\n    viewport,\n  };\n}\n\nexport function createEvents(\n  stateGetter: () => NgtState,\n  eventsStateGetter: () => NgtEventsStoreState\n) {\n  const temp = new THREE.Vector3();\n\n  /** Sets up defaultRaycaster */\n  function prepareRay(event: NgtDomEvent) {\n    const state = stateGetter();\n    const { raycaster, mouse, camera, size } = state;\n    // https://github.com/pmndrs/react-three-fiber/pull/782\n    // Events trigger outside of canvas when moved\n    if (raycaster && camera) {\n      const { offsetX, offsetY } =\n        raycaster?.computeOffsets?.(event, getRenderState(state)) ?? event;\n\n      const { width, height } = size;\n      mouse.set((offsetX / width) * 2 - 1, -(offsetY / height) * 2 + 1);\n      raycaster.setFromCamera(mouse, camera);\n    }\n  }\n\n  /** Calculates delta */\n  function calculateDistance(event: NgtDomEvent) {\n    const { internal } = eventsStateGetter();\n    const dx = event.offsetX - internal.initialClick[0];\n    const dy = event.offsetY - internal.initialClick[1];\n    return Math.round(Math.sqrt(dx * dx + dy * dy));\n  }\n\n  /** Returns true if an instance has a valid pointer-event registered, this excludes scroll, clicks etc */\n  function filterPointerEvents(objects: THREE.Object3D[]) {\n    return objects.filter((obj) =>\n      ['move', 'over', 'enter', 'out', 'leave'].some(\n        (name) =>\n          (obj as unknown as NgtInstance).__ngt?.handlers?.[\n            ('pointer' + name) as keyof NgtEventHandlers\n          ]\n      )\n    );\n  }\n\n  function intersect(filter?: (objects: THREE.Object3D[]) => THREE.Object3D[]) {\n    const canvasState = stateGetter();\n    const { internal } = eventsStateGetter();\n\n    const { raycaster } = canvasState;\n\n    // Skip event handling when noEvents is set\n    if (!raycaster?.enabled) return [];\n\n    const seen = new Set<string>();\n    const intersections: NgtIntersection[] = [];\n\n    // Allow callers to eliminate event objects\n    const eventsObjects = filter\n      ? filter(internal.interaction)\n      : internal.interaction;\n\n    // Intersect known handler objects and filter against duplicates\n    let intersects = raycaster\n      .intersectObjects(eventsObjects, true)\n      .filter((item) => {\n        const id = makeId(item as NgtIntersection);\n        if (seen.has(id)) return false;\n        seen.add(id);\n        return true;\n      });\n\n    // https://github.com/mrdoob/three.js/issues/16031\n    // Allow custom userland intersect sort order\n    if (raycaster.filter)\n      intersects = raycaster.filter(intersects, getRenderState(canvasState));\n\n    for (const intersect of intersects) {\n      let eventObject: THREE.Object3D | null = intersect.object;\n      // Bubble event up\n      while (eventObject) {\n        if ((eventObject as unknown as NgtInstance).__ngt?.eventCount)\n          intersections.push({ ...intersect, eventObject });\n        eventObject = eventObject.parent;\n      }\n    }\n    return intersections;\n  }\n\n  /**  Creates filtered intersects and returns an array of positive hits */\n  function patchIntersects(\n    intersections: NgtIntersection[],\n    event: NgtDomEvent\n  ) {\n    const { internal } = eventsStateGetter();\n    // If the interaction is captured, make all capturing targets  part of the\n    // intersect.\n    if ('pointerId' in event && internal.capturedMap.has(event.pointerId)) {\n      for (let captureData of internal.capturedMap\n        .get(event.pointerId)!\n        .values()) {\n        intersections.push(captureData.intersection);\n      }\n    }\n    return intersections;\n  }\n\n  function cancelPointer(hits: NgtIntersection[]) {\n    const { internal } = eventsStateGetter();\n    Array.from(internal.hovered.values()).forEach((hoveredObj) => {\n      // When no objects were hit or the the hovered object wasn't found underneath the cursor\n      // we call onPointerOut and delete the object from the hovered-elements map\n      if (\n        !hits.length ||\n        !hits.find(\n          (hit) =>\n            hit.object === hoveredObj.object &&\n            hit.index === hoveredObj.index &&\n            hit.instanceId === hoveredObj.instanceId\n        )\n      ) {\n        const eventObject = hoveredObj.eventObject;\n        const instance = (eventObject as unknown as NgtInstance).__ngt;\n        const handlers = instance?.handlers;\n        internal.hovered.delete(makeId(hoveredObj));\n        if (instance?.eventCount) {\n          // Clear out intersects, they are outdated by now\n          const data = { ...hoveredObj, intersections: hits || [] };\n          handlers?.pointerout?.(data as NgtEvent<PointerEvent>);\n          handlers?.pointerleave?.(data as NgtEvent<PointerEvent>);\n        }\n      }\n    });\n  }\n\n  /**  Handles intersections by forwarding them to handlers */\n  function handleIntersects(\n    intersections: NgtIntersection[],\n    event: NgtDomEvent,\n    delta: number,\n    callback: (event: NgtEvent<NgtDomEvent>) => void\n  ) {\n    const { raycaster, mouse, camera } = stateGetter();\n    const { internal } = eventsStateGetter();\n    // If anything has been found, forward it to the event listeners\n    if (intersections.length && camera) {\n      const unprojectedPoint = temp.set(mouse.x, mouse.y, 0).unproject(camera);\n\n      const localState = { stopped: false };\n\n      for (const hit of intersections) {\n        const hasPointerCapture = (id: number) =>\n          internal.capturedMap.get(id)?.has(hit.eventObject) ?? false;\n\n        const setPointerCapture = (id: number) => {\n          const captureData = {\n            intersection: hit,\n            target: event.target as Element,\n          };\n          if (internal.capturedMap.has(id)) {\n            // if the pointerId was previously captured, we add the hit to the\n            // event capturedMap.\n            internal.capturedMap.get(id)!.set(hit.eventObject, captureData);\n          } else {\n            // if the pointerId was not previously captured, we create a map\n            // containing the hitObject, and the hit. hitObject is used for\n            // faster access.\n            internal.capturedMap.set(\n              id,\n              new Map([[hit.eventObject, captureData]])\n            );\n          }\n          // Call the original event now\n          (event.target as Element).setPointerCapture(id);\n        };\n\n        const releasePointerCapture = (id: number) => {\n          const captures = internal.capturedMap.get(id);\n          if (captures) {\n            releaseInternalPointerCapture(\n              internal.capturedMap,\n              hit.eventObject,\n              captures,\n              id\n            );\n          }\n        };\n\n        // Add native event props\n        let extractEventProps: Record<string, unknown> = {};\n        // This iterates over the event's properties including the inherited ones. Native PointerEvents have most of their props as getters which are inherited, but polyfilled PointerEvents have them all as their own properties (i.e. not inherited). We can't use Object.keys() or Object.entries() as they only return \"own\" properties; nor Object.getPrototypeOf(event) as that *doesn't* return \"own\" properties, only inherited ones.\n        for (let prop in event) {\n          let property = event[prop as keyof NgtDomEvent];\n          // Only copy over atomics, leave functions alone as these should be\n          // called as event.nativeEvent.fn()\n          if (typeof property !== 'function')\n            extractEventProps[prop] = property;\n        }\n\n        let raycastEvent: any = {\n          ...hit,\n          ...extractEventProps,\n          spaceX: mouse.x,\n          spaceY: mouse.y,\n          intersections,\n          stopped: localState.stopped,\n          delta,\n          unprojectedPoint,\n          ray: raycaster?.ray,\n          camera: camera,\n          // Hijack stopPropagation, which just sets a flag\n          stopPropagation: () => {\n            // https://github.com/pmndrs/react-three-fiber/issues/596\n            // Events are not allowed to stop propagation if the pointer has been captured\n            const capturesForPointer =\n              'pointerId' in event && internal.capturedMap.get(event.pointerId);\n\n            // We only authorize stopPropagation...\n            if (\n              // ...if this pointer hasn't been captured\n              !capturesForPointer ||\n              // ... or if the hit object is capturing the pointer\n              capturesForPointer.has(hit.eventObject)\n            ) {\n              raycastEvent.stopped = localState.stopped = true;\n              // Propagation is stopped, remove all other hover records\n              // An event handler is only allowed to flush other handlers if it is hovered itself\n              if (\n                internal.hovered.size &&\n                Array.from(internal.hovered.values()).find(\n                  (i) => i.eventObject === hit.eventObject\n                )\n              ) {\n                // Objects cannot flush out higher up objects that have already caught the event\n                const higher = intersections.slice(\n                  0,\n                  intersections.indexOf(hit)\n                );\n                cancelPointer([...higher, hit]);\n              }\n            }\n          },\n          // there should be a distinction between target and currentTarget\n          target: {\n            hasPointerCapture,\n            setPointerCapture,\n            releasePointerCapture,\n          },\n          currentTarget: {\n            hasPointerCapture,\n            setPointerCapture,\n            releasePointerCapture,\n          },\n          sourceEvent: event, // deprecated\n          nativeEvent: event,\n        };\n\n        // Call subscribers\n        callback(raycastEvent);\n        // Event bubbling may be interrupted by stopPropagation\n        if (localState.stopped) break;\n      }\n    }\n    return intersections;\n  }\n\n  const handlePointer = (name: string) => {\n    // Deal with cancelation\n    switch (name) {\n      case 'pointerleave':\n      case 'pointercancel':\n        return () => cancelPointer([]);\n      case 'lostpointercapture':\n        return (event: NgtDomEvent) => {\n          const {\n            internal: { capturedMap },\n          } = eventsStateGetter();\n          if ('pointerId' in event && !capturedMap.has(event.pointerId)) {\n            // If the object event interface had onLostPointerCapture, we'd call it here on every\n            // object that's getting removed.\n            capturedMap.delete(event.pointerId);\n            cancelPointer([]);\n          }\n        };\n    }\n\n    // Any other pointer goes here ...\n    return (event: NgtDomEvent) => {\n      const { pointerMissed, internal } = eventsStateGetter();\n\n      prepareRay(event);\n\n      // Get fresh intersects\n      const isPointerMove = name === 'pointermove';\n      const isClickEvent =\n        name === 'click' || name === 'contextmenu' || name === 'dblclick';\n      const filter = isPointerMove ? filterPointerEvents : undefined;\n      const hits = patchIntersects(intersect(filter), event);\n\n      const delta = isClickEvent ? calculateDistance(event) : 0;\n      // Save initial coordinates on pointer-down\n      if (name === 'pointerdown') {\n        internal.initialClick = [event.offsetX, event.offsetY];\n        internal.initialHits = hits.map((hit) => hit.eventObject);\n      }\n\n      // If a click yields no results, pass it back to the user as a miss\n      // Missed events have to come first in order to establish user-land side-effect clean up\n      if (isClickEvent && !hits.length) {\n        if (delta <= 2) {\n          objectPointerMissed(event, internal.interaction);\n          if (pointerMissed) pointerMissed(event);\n        }\n      }\n      // Take care of unhover\n      if (isPointerMove) cancelPointer(hits);\n\n      handleIntersects(hits, event, delta, (data: NgtEvent<NgtDomEvent>) => {\n        const eventObject = data.eventObject;\n        const instance = (eventObject as unknown as NgtInstance).__ngt;\n        const handlers = instance?.handlers;\n\n        // Check presence of handlers\n        if (!instance?.eventCount) return;\n\n        if (isPointerMove) {\n          // Move event ...\n          if (\n            handlers?.pointerover ||\n            handlers?.pointerenter ||\n            handlers?.pointerout ||\n            handlers?.pointerleave\n          ) {\n            // When enter or out is present take care of hover-state\n            const id = makeId(data);\n            const hoveredItem = internal.hovered.get(id);\n            if (!hoveredItem) {\n              // If the object wasn't previously hovered, book it and call its handler\n              internal.hovered.set(id, data);\n              handlers.pointerover?.(data as NgtEvent<PointerEvent>);\n              handlers.pointerenter?.(data as NgtEvent<PointerEvent>);\n            } else if (hoveredItem.stopped) {\n              // If the object was previously hovered and stopped, we shouldn't allow other items to proceed\n              data.stopPropagation();\n            }\n          }\n          // Call mouse move\n          handlers?.pointermove?.(data as NgtEvent<PointerEvent>);\n        } else {\n          // All other events ...\n          const handler = handlers?.[name as keyof NgtEventHandlers] as (\n            event: NgtEvent<PointerEvent>\n          ) => void;\n          if (handler) {\n            // Forward all events back to their respective handlers with the exception of click events,\n            // which must use the initial target\n            if (!isClickEvent || internal.initialHits.includes(eventObject)) {\n              // Missed events have to come first\n              objectPointerMissed(\n                event,\n                internal.interaction.filter(\n                  (object) => !internal.initialHits.includes(object)\n                )\n              );\n              // Now call the handler\n              handler(data as NgtEvent<PointerEvent>);\n            }\n          }\n        }\n      });\n    };\n  };\n\n  function objectPointerMissed(event: MouseEvent, objects: THREE.Object3D[]) {\n    objects.forEach((object: THREE.Object3D) =>\n      (object as unknown as NgtInstance).__ngt?.handlers?.pointermissed?.(event)\n    );\n  }\n\n  return { handlePointer };\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { noop } from 'rxjs';\nimport * as THREE from 'three';\nimport {\n  NgtDomEvent,\n  NgtEvent,\n  NgtEventsStoreState,\n  NgtPointerCaptureTarget,\n  UnknownRecord,\n} from '../types';\nimport { createEvents } from '../utils/events';\nimport { EnhancedRxState } from './enhanced-rx-state';\nimport { NgtStore } from './store';\n\nconst names = {\n  click: false,\n  contextmenu: false,\n  dblclick: false,\n  wheel: false, // passive wheel errors with OrbitControls\n  pointerdown: true,\n  pointerup: true,\n  pointerleave: true,\n  pointermove: true,\n  pointercancel: true,\n  lostpointercapture: true,\n} as const;\n\n@Injectable()\nexport class NgtEventsStore extends EnhancedRxState<\n  NgtEventsStoreState,\n  { element: HTMLElement }\n> {\n  actions = this.create();\n\n  constructor(private store: NgtStore, private ngZone: NgZone) {\n    super();\n    this.set({\n      pointerMissed: noop,\n      connected: false,\n      handlers: {} as NgtEventsStoreState['handlers'],\n      internal: {\n        interaction: [],\n        hovered: new Map<string, NgtEvent<NgtDomEvent>>(),\n        capturedMap: new Map<\n          number,\n          Map<THREE.Object3D, NgtPointerCaptureTarget>\n        >(),\n        initialClick: [0, 0],\n        initialHits: [],\n      },\n    });\n\n    ngZone.runOutsideAngular(() => {\n      const { handlePointer } = createEvents(\n        this.store.get.bind(this.store),\n        this.get.bind(this)\n      );\n\n      this.set({\n        handlers: Object.keys(names).reduce(\n          (handlers: UnknownRecord, supportedEventName) => {\n            handlers[supportedEventName] = handlePointer(supportedEventName);\n            return handlers;\n          },\n          {}\n        ) as NgtEventsStoreState['handlers'],\n      });\n\n      this.holdEffect(this.actions.element$, this.#connect.bind(this));\n    });\n  }\n\n  addInteraction(interaction: THREE.Object3D) {\n    this.set((state) => ({\n      ...state,\n      internal: {\n        ...state.internal,\n        interaction: [...state.internal.interaction, interaction],\n      },\n    }));\n  }\n\n  removeInteraction(uuid: string) {\n    this.set((state) => ({\n      ...state,\n      internal: {\n        ...state.internal,\n        interaction: state.internal.interaction.filter(\n          (interaction) => interaction.uuid !== uuid\n        ),\n      },\n    }));\n  }\n\n  #connect(element: HTMLElement) {\n    return this.ngZone.runOutsideAngular(() => {\n      this.set({ connected: element });\n      const handlers = this.get('handlers');\n      Object.entries(handlers ?? {}).forEach(([eventName, handler]) => {\n        const passive = names[eventName as keyof typeof names];\n        element.addEventListener(eventName, handler, { passive });\n      });\n\n      return () => {\n        const { handlers, connected } = this.get();\n        if (connected) {\n          Object.entries(handlers ?? {}).forEach(([eventName, handler]) => {\n            if (connected instanceof HTMLElement) {\n              connected.removeEventListener(eventName, handler);\n            }\n          });\n        }\n      };\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { clearTimeout, setTimeout } from '@rx-angular/cdk/zone-less';\nimport { NgtPerformance } from '../types';\nimport { EnhancedRxState } from './enhanced-rx-state';\nimport { NgtStore } from './store';\n\nlet performanceTimeout: ReturnType<typeof setTimeout> | undefined = undefined;\n\n@Injectable()\nexport class NgtPerformanceStore extends EnhancedRxState<NgtPerformance> {\n  constructor(store: NgtStore) {\n    super();\n    this.connect(store.select('performance'));\n  }\n\n  regress() {\n    const { current, min, debounce } = this.get();\n    // Clear timeout\n    if (performanceTimeout) clearTimeout(performanceTimeout);\n    // Set lower bound performance\n    if (current !== min) this.set({ min });\n    // Go back to upper bound performance after a while unless something regresses meanwhile\n    performanceTimeout = setTimeout(() => {\n      this.set({ current: this.get('max') });\n    }, debounce);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  NgZone,\n  OnInit,\n  Output,\n  Self,\n  ViewChild,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport { NGT_CANVAS_OPTIONS } from './di/canvas';\nimport { NgtLoopService } from './services/loop.service';\nimport { NgtResize } from './services/resize.service';\nimport { NgtAnimationFrameStore } from './stores/animation-frame.store';\nimport { EnhancedRxState } from './stores/enhanced-rx-state';\nimport { NgtEventsStore } from './stores/events.store';\nimport { NgtPerformanceStore } from './stores/performance.store';\nimport { NgtStore } from './stores/store';\nimport {\n  NgtCameraOptions,\n  NgtCanvasOptions,\n  NgtCreatedState,\n  NgtDpr,\n  NgtGLOptions,\n  NgtPerformance,\n  NgtRaycaster,\n  NgtSceneOptions,\n  NgtSize,\n} from './types';\n\n@Component({\n  selector: 'ngt-canvas',\n  template: `\n    <canvas #rendererCanvas></canvas>\n    <ng-container *ngIf=\"canvasOptions.projectContent\">\n      <ng-content></ng-content>\n    </ng-container>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n      }\n\n      :host canvas {\n        display: block;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NgtResize,\n    NgtStore,\n    NgtPerformanceStore,\n    NgtEventsStore,\n    NgtAnimationFrameStore,\n    NgtLoopService,\n  ],\n})\nexport class NgtCanvas extends EnhancedRxState implements OnInit {\n  @HostBinding('class.ngt-canvas') hostClass = true;\n\n  @Input() set vr(vr: boolean | '') {\n    this.store.set({ vr: vr === '' ? true : vr });\n  }\n\n  @Input() set linear(linear: boolean | '') {\n    this.store.set({ linear: linear === '' ? true : linear });\n  }\n\n  @Input() set flat(flat: boolean | '') {\n    this.store.set({ flat: flat === '' ? true : flat });\n  }\n\n  @Input() set frameloop(frameloop: 'always' | 'demand' | 'never') {\n    this.store.set({ frameloop });\n  }\n\n  @Input() set orthographic(orthographic: boolean | '') {\n    this.store.set({ orthographic: orthographic === '' ? true : orthographic });\n  }\n\n  @Input() set performance(performance: NgtPerformance) {\n    this.store.set({ performance });\n  }\n\n  @Input() set size(size: NgtSize) {\n    this.store.set({ size });\n  }\n\n  @Input() set dpr(dpr: NgtDpr) {\n    this.store.set({ dpr });\n  }\n\n  @Input() set clock(clock: THREE.Clock) {\n    this.store.set({ clock });\n  }\n\n  @Input() set raycaster(raycaster: Partial<NgtRaycaster>) {\n    this.store.set({ raycasterOptions: raycaster });\n  }\n\n  @Input() set shadows(shadows: boolean | Partial<THREE.WebGLShadowMap>) {\n    this.store.set({ shadows });\n  }\n\n  @Input() set camera(cameraOptions: NgtCameraOptions) {\n    this.store.set({ cameraOptions });\n  }\n\n  @Input() set scene(sceneOptions: NgtSceneOptions) {\n    this.store.set({ sceneOptions });\n  }\n\n  @Input() set gl(glOptions: NgtGLOptions) {\n    this.store.set({ glOptions });\n  }\n\n  @Output() created = new EventEmitter<NgtCreatedState>();\n  @Output() pointermissed = new EventEmitter<MouseEvent>();\n\n  @ViewChild('rendererCanvas')\n  set rendererCanvas(v: ElementRef<HTMLCanvasElement>) {\n    this.store.actions.canvasElement(v.nativeElement);\n  }\n\n  constructor(\n    @Self() private store: NgtStore,\n    @Self() private performanceStore: NgtPerformanceStore,\n    @Self() private eventsStore: NgtEventsStore,\n    @Self() private animationFrameStore: NgtAnimationFrameStore,\n    @Self() private loopService: NgtLoopService,\n    private ngZone: NgZone,\n    @Inject(NGT_CANVAS_OPTIONS) public canvasOptions: NgtCanvasOptions\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    // if there is handler to pointermissed on the canvas\n    // update pointermissed in events store so that\n    // events util will handle it\n    if (this.pointermissed.observed) {\n      this.eventsStore.set({\n        pointerMissed: (event) => {\n          this.pointermissed.emit(event);\n        },\n      });\n    }\n\n    this.hold(this.store.select('ready'), (ready) => {\n      if (ready) {\n        this.ngZone.runOutsideAngular(() => {\n          const state = this.store.get();\n          this.eventsStore.actions.element(state.renderer.domElement);\n          this.loopService.invalidate(state);\n          this.created.emit(state as NgtCreatedState);\n        });\n      }\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgtCanvas } from './canvas.component';\n\n@NgModule({\n  declarations: [NgtCanvas],\n  imports: [CommonModule],\n  exports: [NgtCanvas],\n})\nexport class NgtCoreModule {}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class NgtDestroyedService extends Subject<void> implements OnDestroy {\n  ngOnDestroy() {\n    this.next();\n    this.complete();\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  Optional,\n  Provider,\n  SimpleChanges,\n  Type,\n} from '@angular/core';\nimport { Observable, ReplaySubject, takeUntil } from 'rxjs';\nimport { NgtDestroyedService } from '../services/destroyed.service';\nimport { UnknownRecord } from '../types';\n\n@Directive()\nexport abstract class Controller implements OnChanges, OnInit {\n  @Input() disabled = false;\n\n  abstract get props(): string[];\n\n  abstract get controller(): Controller | undefined;\n\n  readonly change$ = new ReplaySubject<SimpleChanges>(1);\n\n  constructor(protected ngZone: NgZone) {}\n\n  #readyFn?: () => void;\n\n  set readyFn(v: (() => void) | undefined) {\n    this.#readyFn = v;\n  }\n\n  get readyFn() {\n    return this.#readyFn;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.controller) {\n      this.#assignProps();\n      this.controller.ngOnChanges(changes);\n      this.change$.next(changes);\n    } else {\n      this.change$.next(changes);\n    }\n  }\n\n  ngOnInit() {\n    if (this.controller) {\n      this.#assignProps();\n    }\n  }\n\n  #assignProps() {\n    this.ngZone.runOutsideAngular(() => {\n      this.props.forEach((prop) => {\n        const selfController = this as UnknownRecord;\n        const inputController = this.controller as unknown as UnknownRecord;\n        selfController[prop] = selfController[prop] ?? inputController[prop];\n      });\n    });\n  }\n}\n\nexport interface CreateControllerTokenFactoryOptions<\n  TController extends Controller\n> {\n  watchedControllerTokenName: string;\n  controller: Type<TController>;\n  newInstanceOnNull?: boolean;\n}\n\nexport function controllerFactory<TController extends Controller>(\n  newInstanceOnNull = false,\n  controllerType: Type<TController>\n) {\n  return (\n    controller: TController | null,\n    changeDetectorRef: ChangeDetectorRef,\n    destroyed: Observable<void>\n  ): TController | null => {\n    if (!controller) {\n      return newInstanceOnNull ? new controllerType() : null;\n    }\n\n    controller.change$.pipe(takeUntil(destroyed)).subscribe(() => {\n      changeDetectorRef.markForCheck();\n    });\n\n    return controller;\n  };\n}\n\nexport function createControllerProviderFactory<\n  TController extends Controller\n>({\n  watchedControllerTokenName,\n  controller,\n  newInstanceOnNull = false,\n}: CreateControllerTokenFactoryOptions<TController>): [\n  InjectionToken<TController>,\n  Provider[]\n] {\n  const watchedControllerToken = new InjectionToken(watchedControllerTokenName);\n\n  const controllerProvider: Provider[] = [\n    NgtDestroyedService,\n    {\n      provide: watchedControllerToken,\n      deps: [\n        [new Optional(), controller],\n        ChangeDetectorRef,\n        NgtDestroyedService,\n      ],\n      useFactory: controllerFactory(newInstanceOnNull, controller),\n    },\n  ];\n\n  return [watchedControllerToken, controllerProvider];\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  NgModule,\n  NgZone,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport { NgtAnimationFrameStore } from '../stores/animation-frame.store';\nimport { NgtRender } from '../types';\nimport { Controller, createControllerProviderFactory } from './controller';\n\n@Directive({\n  selector: '[animateReady]',\n  exportAs: 'ngtAnimationSubscriberController',\n})\nexport class NgtAnimationSubscriberController\n  extends Controller\n  implements OnDestroy\n{\n  @Input() priority = 0;\n  @Output() animateReady = new EventEmitter<NgtRender>();\n\n  #subscriber?: THREE.Object3D;\n\n  constructor(\n    private animationFrameStore: NgtAnimationFrameStore,\n    ngZone: NgZone\n  ) {\n    super(ngZone);\n  }\n\n  prepare(obj: THREE.Object3D) {\n    // only subscribe to animation frame if there's an output handler\n    if (this.animateReady.observed) {\n      this.#subscriber = obj;\n      this.animationFrameStore.register({\n        obj,\n        callback: this.animateReady.emit.bind(this.animateReady),\n        priority: this.priority,\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.#subscriber) {\n      this.animationFrameStore.actions.unsubscriberUuid(this.#subscriber.uuid);\n    }\n  }\n\n  get controller(): Controller | undefined {\n    return undefined;\n  }\n\n  get props(): string[] {\n    return [];\n  }\n}\n\n@NgModule({\n  declarations: [NgtAnimationSubscriberController],\n  exports: [NgtAnimationSubscriberController],\n})\nexport class NgtAnimationSubscriberControllerModule {}\n\nexport const [\n  NGT_ANIMATION_SUBSCRIBER_WATCHED_CONTROLLER,\n  NGT_ANIMATION_SUBSCRIBER_CONTROLLER_PROVIDER,\n] = createControllerProviderFactory({\n  watchedControllerTokenName: 'Watched AnimationSubscriberController',\n  controller: NgtAnimationSubscriberController,\n});\n","import * as THREE from 'three';\nimport {\n  AnyConstructor,\n  NgtColor,\n  NgtVector2,\n  NgtVector3,\n  NgtVector4,\n} from '../types';\n\nexport function makeVector2(input?: NgtVector2): THREE.Vector2 | undefined {\n  if (!input) return undefined;\n\n  if (input instanceof THREE.Vector2) {\n    return input;\n  }\n\n  if (Array.isArray(input)) {\n    return new THREE.Vector2(...input);\n  }\n\n  return new THREE.Vector2(input, input);\n}\n\nexport function makeVector3(input?: NgtVector3): THREE.Vector3 | undefined {\n  if (!input) return undefined;\n\n  if (input instanceof THREE.Vector3) {\n    return input;\n  }\n\n  if (Array.isArray(input)) {\n    return new THREE.Vector3(...input);\n  }\n\n  return new THREE.Vector3(input, input, input);\n}\n\nexport function makeVector4(input?: NgtVector4): THREE.Vector4 | undefined {\n  if (!input) return undefined;\n\n  if (input instanceof THREE.Vector4) {\n    return input;\n  }\n\n  if (Array.isArray(input)) {\n    return new THREE.Vector4(...input);\n  }\n\n  return new THREE.Vector4(input, input, input, input);\n}\n\nexport function makeForSet<TType extends AnyConstructor<any>>(\n  type: TType,\n  input?: InstanceType<TType> | Parameters<typeof type.prototype['set']>\n): InstanceType<TType> | undefined {\n  if (!input) return undefined;\n\n  if (input instanceof type) {\n    return input as InstanceType<TType>;\n  }\n\n  return new type(...(input as Parameters<typeof type.prototype['set']>));\n}\n\nexport function makeColor(color?: NgtColor): THREE.Color | undefined {\n  if (!color) return undefined;\n  if (color instanceof THREE.Color) {\n    return color;\n  }\n\n  if (Array.isArray(color)) {\n    return new THREE.Color(...color);\n  }\n\n  return new THREE.Color(color);\n}\n","// GENERATED\nimport {\n  Directive,\n  EventEmitter,\n  Input,\n  NgModule,\n  Output,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport {\n  NgtColor,\n  NgtEuler,\n  NgtEvent,\n  NgtObject3dProps,\n  NgtQuaternion,\n  NgtVector3,\n  UnknownRecord,\n} from '../types';\nimport { makeColor, makeForSet, makeVector3 } from '../utils/make';\nimport { Controller, createControllerProviderFactory } from './controller';\n\n@Directive({\n  selector: `\n    ngt-primitive,\n    ngt-bone,\n    ngt-group,\n    ngt-lod,\n    ngt-points,\n    ngt-mesh,\n    ngt-instanced-mesh,\n    ngt-skinned-mesh,\n    ngt-audio,\n    ngt-positional-audio,\n    ngt-line,\n    ngt-line-loop,\n    ngt-line-segments,\n    ngt-light-probe,\n    ngt-ambient-light,\n    ngt-ambient-light-probe,\n    ngt-hemisphere-light,\n    ngt-hemisphere-light-probe,\n    ngt-directional-light,\n    ngt-point-light,\n    ngt-spot-light,\n    ngt-rect-area-light,\n    ngt-arrow-helper,\n    ngt-axes-helper,\n    ngt-box3-helper,\n    ngt-grid-helper,\n    ngt-plane-helper,\n    ngt-polar-grid-helper,\n    ngt-sprite,\n    ngt-camera,\n    ngt-perspective-camera,\n    ngt-orthographic-camera,\n    ngt-array-camera,\n    ngt-stereo-camera,\n    ngt-cube-camera,\n    ngt-soba-plane,\n    ngt-soba-box,\n    ngt-soba-cylinder,\n    ngt-soba-cone,\n    ngt-soba-circle,\n    ngt-soba-sphere,\n    ngt-soba-tube,\n    ngt-soba-torus,\n    ngt-soba-tetrahedron,\n    ngt-soba-ring,\n    ngt-soba-polyhedron,\n    ngt-soba-octahedron,\n    ngt-soba-dodecahedron,\n    ngt-soba-icosahedron,\n    ngt-soba-extrude,\n    ngt-soba-lathe,\n    ngt-soba-torus-knot,\n    ngt-soba-billboard,\n    ngt-soba-detailed,\n    ngt-soba-line,\n    ngt-soba-quadratic-bezier-line,\n    ngt-soba-cubic-bezier-line,\n    ngt-soba-orthographic-camera,\n    ngt-soba-gizmo-helper,\n    ngt-soba-gizmo-viewport,\n    ngt-soba-gizmo-axis-head,\n    ngt-soba-text\n  `,\n  exportAs: 'ngtObject3dInputsController',\n})\nexport class NgtObject3dInputsController extends Controller {\n  @Input() name?: string;\n\n  @Input() set position(position: NgtVector3 | undefined) {\n    this.#position = makeVector3(position);\n  }\n\n  get position() {\n    return this.#position;\n  }\n\n  #position?: THREE.Vector3;\n\n  @Input() set rotation(rotation: NgtEuler | undefined) {\n    this.#rotation = makeForSet(THREE.Euler, rotation);\n  }\n\n  get rotation() {\n    return this.#rotation;\n  }\n\n  #rotation?: THREE.Euler;\n\n  @Input() set quaternion(quaternion: NgtQuaternion | undefined) {\n    this.#quaternion = makeForSet(THREE.Quaternion, quaternion);\n  }\n\n  get quaternion() {\n    return this.#quaternion;\n  }\n\n  #quaternion?: THREE.Quaternion;\n\n  @Input() set scale(scale: NgtVector3 | undefined) {\n    this.#scale = makeVector3(scale);\n  }\n\n  get scale() {\n    return this.#scale;\n  }\n\n  #scale?: THREE.Vector3;\n\n  @Input() set color(color: NgtColor | undefined) {\n    this.#color = makeColor(color);\n  }\n\n  get color() {\n    return this.#color;\n  }\n\n  #color?: THREE.Color;\n\n  @Input() userData?: UnknownRecord;\n  @Input() castShadow = false;\n  @Input() receiveShadow = false;\n  @Input() visible = true;\n  @Input() matrixAutoUpdate = true;\n  @Input() dispose?: (() => void) | null;\n  @Input() raycast?: THREE.Object3D['raycast'] | null;\n\n  @Input() appendMode: 'immediate' | 'root' | 'none' = 'immediate';\n  @Input() appendTo?: THREE.Object3D;\n\n  @Input() object3dInputsController?: NgtObject3dInputsController;\n\n  // events\n  @Output() click = new EventEmitter<NgtEvent<MouseEvent>>();\n  @Output() contextmenu = new EventEmitter<NgtEvent<MouseEvent>>();\n  @Output() dblclick = new EventEmitter<NgtEvent<MouseEvent>>();\n  @Output() pointerup = new EventEmitter<NgtEvent<PointerEvent>>();\n  @Output() pointerdown = new EventEmitter<NgtEvent<PointerEvent>>();\n  @Output() pointerover = new EventEmitter<NgtEvent<PointerEvent>>();\n  @Output() pointerout = new EventEmitter<NgtEvent<PointerEvent>>();\n  @Output() pointerenter = new EventEmitter<NgtEvent<PointerEvent>>();\n  @Output() pointerleave = new EventEmitter<NgtEvent<PointerEvent>>();\n  @Output() pointermove = new EventEmitter<NgtEvent<PointerEvent>>();\n  @Output() pointermissed = new EventEmitter<NgtEvent<PointerEvent>>();\n  @Output() pointercancel = new EventEmitter<NgtEvent<PointerEvent>>();\n  @Output() wheel = new EventEmitter<NgtEvent<WheelEvent>>();\n\n  get props(): string[] {\n    return [\n      'name',\n      'position',\n      'rotation',\n      'quaternion',\n      'scale',\n      'color',\n      'userData',\n      'dispose',\n      'raycast',\n      'castShadow',\n      'receiveShadow',\n      'visible',\n      'matrixAutoUpdate',\n      'appendMode',\n      'appendTo',\n      'click',\n      'contextmenu',\n      'dblclick',\n      'pointerup',\n      'pointerdown',\n      'pointerover',\n      'pointerout',\n      'pointerenter',\n      'pointerleave',\n      'pointermove',\n      'pointermissed',\n      'pointercancel',\n      'wheel',\n    ];\n  }\n\n  get controller(): Controller | undefined {\n    return this.object3dInputsController;\n  }\n\n  get object3dProps(): NgtObject3dProps {\n    return {\n      name: this.name,\n      position: this.#position?.toArray(),\n      rotation: this.#rotation?.toArray() as NgtEuler,\n      quaternion: this.#quaternion?.toArray() as NgtQuaternion,\n      scale: this.#scale?.toArray(),\n      color: this.color,\n      userData: this.userData,\n      dispose: this.dispose,\n      raycast: this.raycast,\n      castShadow: this.castShadow,\n      receiveShadow: this.receiveShadow,\n      visible: this.visible,\n      matrixAutoUpdate: this.matrixAutoUpdate,\n    };\n  }\n}\n\n@NgModule({\n  declarations: [NgtObject3dInputsController],\n  exports: [NgtObject3dInputsController],\n})\nexport class NgtObject3dInputsControllerModule {}\n\nexport const [\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n] = createControllerProviderFactory({\n  watchedControllerTokenName: 'Watched Object3dInputsController',\n  controller: NgtObject3dInputsController,\n});\n","// GENERATED\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  NgModule,\n  NgZone,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport { requestAnimationFrame } from '@rx-angular/cdk/zone-less';\nimport { defer, map, merge, Subscription, take } from 'rxjs';\nimport * as THREE from 'three';\nimport { NgtEventsStore } from '../stores/events.store';\nimport { NgtStore } from '../stores/store';\nimport {\n  NgtEvent,\n  NgtEventHandlers,\n  NgtInstanceInternal,\n  UnknownRecord,\n} from '../types';\nimport { applyProps } from '../utils/apply-props';\nimport {\n  NGT_ANIMATION_SUBSCRIBER_CONTROLLER_PROVIDER,\n  NGT_ANIMATION_SUBSCRIBER_WATCHED_CONTROLLER,\n  NgtAnimationSubscriberController,\n  NgtAnimationSubscriberControllerModule,\n} from './animation-subscriber.controller';\nimport { Controller, createControllerProviderFactory } from './controller';\nimport {\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtObject3dInputsController,\n  NgtObject3dInputsControllerModule,\n} from './object-3d-inputs.controller';\n\nconst supportedEvents = [\n  'click',\n  'contextmenu',\n  'dblclick',\n  'pointerup',\n  'pointerdown',\n  'pointerover',\n  'pointerout',\n  'pointerenter',\n  'pointerleave',\n  'pointermove',\n  'pointermissed',\n  'pointercancel',\n  'wheel',\n] as const;\n\n@Directive({\n  selector: `\n    ngt-primitive,\n    ngt-bone,\n    ngt-group,\n    ngt-lod,\n    ngt-points,\n    ngt-mesh,\n    ngt-instanced-mesh,\n    ngt-skinned-mesh,\n    ngt-audio,\n    ngt-positional-audio,\n    ngt-line,\n    ngt-line-loop,\n    ngt-line-segments,\n    ngt-light-probe,\n    ngt-ambient-light,\n    ngt-ambient-light-probe,\n    ngt-hemisphere-light,\n    ngt-hemisphere-light-probe,\n    ngt-directional-light,\n    ngt-point-light,\n    ngt-spot-light,\n    ngt-rect-area-light,\n    ngt-arrow-helper,\n    ngt-axes-helper,\n    ngt-box3-helper,\n    ngt-grid-helper,\n    ngt-plane-helper,\n    ngt-polar-grid-helper,\n    ngt-sprite,\n    ngt-camera,\n    ngt-perspective-camera,\n    ngt-orthographic-camera,\n    ngt-array-camera,\n    ngt-stereo-camera,\n    ngt-cube-camera\n  `,\n  exportAs: 'ngtObject3dController',\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_ANIMATION_SUBSCRIBER_CONTROLLER_PROVIDER,\n  ],\n})\nexport class NgtObject3dController extends Controller implements OnDestroy {\n  #object3d?: THREE.Object3D;\n  #inputChangesSubscription?: Subscription;\n\n  #initFn?: () => THREE.Object3D;\n\n  set initFn(v: () => THREE.Object3D) {\n    this.#initFn = v;\n  }\n\n  get initFn() {\n    if (!this.#initFn) {\n      this.initFn = () => this.object3d;\n    }\n    return this.#initFn as () => THREE.Object3D;\n  }\n\n  #change$ = defer(() => {\n    if (this.objectInputsController.object3dInputsController) {\n      return merge(\n        this.objectInputsController.change$.pipe(\n          map((changes) => ({\n            changes,\n            controller: this.objectInputsController,\n          }))\n        ),\n        this.objectInputsController.object3dInputsController.change$.pipe(\n          map((changes) => ({\n            changes,\n            controller: this.objectInputsController.object3dInputsController!,\n          }))\n        )\n      );\n    }\n    return this.objectInputsController.change$.pipe(\n      map((changes) => ({\n        changes,\n        controller: this.objectInputsController,\n      }))\n    );\n  }).pipe(\n    map(({ changes, controller }) => {\n      return Object.keys(changes).reduce((trueChanges, key) => {\n        trueChanges[key] = controller[key as keyof NgtObject3dInputsController];\n        return trueChanges;\n      }, {} as UnknownRecord);\n    })\n  );\n\n  constructor(\n    ngZone: NgZone,\n    private store: NgtStore,\n    private eventsStore: NgtEventsStore,\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    private objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_ANIMATION_SUBSCRIBER_WATCHED_CONTROLLER)\n    private animationSubscriberController: NgtAnimationSubscriberController,\n    @Optional() @SkipSelf() private parentObject3d: NgtObject3dController\n  ) {\n    super(ngZone);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.#inputChangesSubscription = this.#change$.subscribe((changes) => {\n      if (this.object3d) {\n        this.#applyCustomProps(changes);\n      }\n    });\n  }\n\n  init() {\n    this.ngZone.runOutsideAngular(() => {\n      this.#object3d = this.initFn();\n      if (this.object3d) {\n        this.#applyCustomProps();\n\n        if (!this.disabled) {\n          const observedEvents = supportedEvents.reduce(\n            (result, event) => {\n              const controllerEvent = this.objectInputsController[event]\n                .observed\n                ? this.objectInputsController[event]\n                : this.objectInputsController.object3dInputsController?.[event]\n                    .observed\n                ? this.objectInputsController.object3dInputsController[event]\n                : null;\n              if (controllerEvent) {\n                result.handlers[event] = this.#eventNameToHandler(\n                  controllerEvent as EventEmitter<NgtEvent<any>>\n                );\n                result.eventCount += 1;\n              }\n              return result;\n            },\n            { handlers: {}, eventCount: 0 } as {\n              handlers: NgtEventHandlers;\n              eventCount: number;\n            }\n          );\n\n          // setup __ngt instance\n          applyProps(this.object3d, {\n            __ngt: {\n              stateGetter: () => this.store.get(),\n              eventsStateGetter: () => this.eventsStore.get(),\n              handlers: observedEvents.handlers,\n              eventCount: observedEvents.eventCount,\n              linear: this.store.get('linear'),\n            } as NgtInstanceInternal,\n          });\n\n          // add as an interaction if there are events observed\n          if (observedEvents.eventCount > 0) {\n            this.eventsStore.addInteraction(this.object3d);\n          }\n\n          this.store.set((state) => ({\n            ...state,\n            objects: { ...state.objects, [this.object3d.uuid]: this.object3d },\n          }));\n\n          if (this.objectInputsController.appendMode !== 'none') {\n            this.#appendToParent();\n          }\n        }\n\n        this.#objectReady();\n      }\n    });\n  }\n\n  #objectReady() {\n    if (this.readyFn) {\n      this.readyFn();\n    }\n    if (this.animationSubscriberController) {\n      this.animationSubscriberController.prepare(this.object3d);\n    }\n  }\n\n  #appendToParent(): void {\n    // Schedule this in the next loop to allow for all appendTo's to settle\n    // TODO: find better way\n    requestAnimationFrame(() => {\n      if (this.objectInputsController.appendTo) {\n        this.objectInputsController.appendTo.add(this.object3d);\n        return;\n      }\n\n      if (this.objectInputsController.appendMode === 'root') {\n        this.#addToScene();\n        return;\n      }\n\n      if (this.objectInputsController.appendMode === 'immediate') {\n        this.#addToParent();\n      }\n    });\n  }\n\n  #addToScene() {\n    const scene = this.store.get('scene');\n    if (scene) {\n      scene.add(this.object3d);\n    }\n  }\n\n  #addToParent() {\n    if (this.parentObject3d) {\n      this.parentObject3d.object3d.add(this.object3d);\n    } else {\n      this.#addToScene();\n    }\n  }\n\n  #remove() {\n    if (this.objectInputsController.appendTo) {\n      this.objectInputsController.appendTo.remove(this.object3d);\n    } else if (\n      this.parentObject3d &&\n      this.objectInputsController.appendMode === 'immediate'\n    ) {\n      this.parentObject3d.object3d.remove(this.object3d);\n    } else {\n      const scene = this.store.get('scene');\n      if (scene) {\n        scene.remove(this.object3d);\n      }\n    }\n\n    if (this.object3d.clear) {\n      this.object3d.clear();\n    }\n  }\n\n  #eventNameToHandler(\n    controllerEvent:\n      | EventEmitter<NgtEvent<PointerEvent>>\n      | EventEmitter<NgtEvent<WheelEvent>>\n  ) {\n    return (\n      event: Parameters<\n        Exclude<NgtEventHandlers[typeof supportedEvents[number]], undefined>\n      >[0]\n    ) => {\n      this.ngZone.run(() => {\n        controllerEvent.emit(event as NgtEvent<any>);\n      });\n    };\n  }\n\n  #applyCustomProps(changes?: UnknownRecord) {\n    this.ngZone.runOutsideAngular(() => {\n      const customProps = {\n        castShadow: this.objectInputsController.castShadow,\n        receiveShadow: this.objectInputsController.receiveShadow,\n        visible: this.objectInputsController.visible,\n        matrixAutoUpdate: this.objectInputsController.matrixAutoUpdate,\n      } as UnknownRecord;\n\n      if (this.objectInputsController.name) {\n        customProps['name'] = this.objectInputsController.name;\n      }\n\n      if (this.objectInputsController.position) {\n        customProps['position'] = this.objectInputsController.position;\n      }\n\n      if (this.objectInputsController.rotation) {\n        customProps['rotation'] = this.objectInputsController.rotation;\n      } else if (this.objectInputsController.quaternion) {\n        customProps['quaternion'] = this.objectInputsController.quaternion;\n      }\n\n      if (this.objectInputsController.scale) {\n        customProps['scale'] = this.objectInputsController.scale;\n      }\n\n      if (this.objectInputsController.userData) {\n        customProps['userData'] = this.objectInputsController.userData;\n      }\n\n      if (this.objectInputsController.color) {\n        customProps['color'] = this.objectInputsController.color;\n        if (!this.store.get('linear')) {\n          (customProps['color'] as THREE.Color).convertSRGBToLinear();\n        }\n      }\n\n      if (this.objectInputsController.dispose) {\n        customProps['dispose'] = this.objectInputsController.dispose;\n      }\n\n      if (this.objectInputsController.raycast) {\n        customProps['raycast'] = this.objectInputsController.raycast;\n      }\n\n      if (changes) {\n        Object.assign(customProps, changes);\n      }\n\n      this.#change$.pipe(take(1)).subscribe((changes) => {\n        if (changes) {\n          for (const [inputName, inputChange] of Object.entries(changes)) {\n            if (\n              [\n                'name',\n                'position',\n                'rotation',\n                'quaternion',\n                'scale',\n                'userData',\n                'color',\n                'dispose',\n                'raycast',\n                'castShadow',\n                'receiveShadow',\n                'visible',\n                'matrixAutoUpdate',\n                'object3dController',\n              ].includes(inputName) // skip 14 common inputs\n            ) {\n              continue;\n            }\n            customProps[inputName] = inputChange;\n          }\n        }\n      });\n\n      applyProps(this.object3d, customProps);\n      this.object3d.updateMatrix?.();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.#inputChangesSubscription) {\n      this.#inputChangesSubscription.unsubscribe();\n    }\n\n    if (this.object3d) {\n      this.#remove();\n      this.store.set((state) => {\n        const { [this.object3d.uuid]: _, ...objects } = state.objects;\n        return { ...state, objects };\n      });\n      this.eventsStore.removeInteraction(this.object3d.uuid);\n    }\n  }\n\n  get object3d(): THREE.Object3D {\n    return this.#object3d as THREE.Object3D;\n  }\n\n  get controller(): Controller | undefined {\n    return undefined;\n  }\n\n  get props(): string[] {\n    return [];\n  }\n}\n\n@NgModule({\n  declarations: [NgtObject3dController],\n  exports: [\n    NgtObject3dController,\n    NgtObject3dInputsControllerModule,\n    NgtAnimationSubscriberControllerModule,\n  ],\n})\nexport class NgtObject3dControllerModule {}\n\nexport const [NGT_OBJECT_WATCHED_CONTROLLER, NGT_OBJECT_CONTROLLER_PROVIDER] =\n  createControllerProviderFactory({\n    watchedControllerTokenName: 'Watched Object3dController',\n    controller: NgtObject3dController,\n  });\n","import { Directive, EventEmitter, Output } from '@angular/core';\nimport { NgtRender } from '../types';\n\n@Directive()\nexport abstract class NgtSobaExtender<TEntity> {\n  @Output() ready = new EventEmitter<TEntity>();\n  @Output() animateReady = new EventEmitter<NgtRender>();\n\n  #object!: TEntity;\n\n  set object(value: TEntity) {\n    this.#object = value;\n    this.ready.emit(value);\n  }\n\n  get object(): TEntity {\n    return this.#object;\n  }\n}\n","import { InjectionToken, Optional, Provider } from '@angular/core';\nimport * as THREE from 'three';\nimport {\n  NGT_OBJECT_WATCHED_CONTROLLER,\n  NgtObject3dController,\n} from '../controllers/object-3d.controller';\nimport { NgtSobaExtender } from '../three/extender';\nimport { AnyFunction } from '../types';\n\nexport const NGT_OBJECT_3D = new InjectionToken<AnyFunction<THREE.Object3D>>(\n  'THREE_OBJECT_3D'\n);\nexport const NGT_OBJECT_3D_PROVIDER: Provider = {\n  provide: NGT_OBJECT_3D,\n  useFactory: (\n    sobaExtender: NgtSobaExtender<THREE.Object3D>,\n    objectController: NgtObject3dController\n  ) => {\n    return () => {\n      if (sobaExtender) return sobaExtender.object;\n      if (objectController) return objectController.object3d;\n      return null;\n    };\n  },\n  deps: [\n    [new Optional(), NgtSobaExtender],\n    [new Optional(), NGT_OBJECT_WATCHED_CONTROLLER],\n  ],\n};\n","import { NgModule, Pipe, PipeTransform } from '@angular/core';\nimport * as THREE from 'three';\nimport { NgtVector2, NgtVector3, NgtVector4 } from '../types';\nimport { makeVector2, makeVector3, makeVector4 } from '../utils/make';\n\n@Pipe({ name: 'vector2' })\nexport class NgtVector2Pipe implements PipeTransform {\n  transform(value: NgtVector2): THREE.Vector2 {\n    return makeVector2(value) as THREE.Vector2;\n  }\n}\n\n@Pipe({ name: 'vector3' })\nexport class NgtVector3Pipe implements PipeTransform {\n  transform(value: NgtVector3): THREE.Vector3 {\n    return makeVector3(value) as THREE.Vector3;\n  }\n}\n\n@Pipe({ name: 'vector4' })\nexport class NgtVector4Pipe implements PipeTransform {\n  transform(value: NgtVector4): THREE.Vector4 {\n    return makeVector4(value) as THREE.Vector4;\n  }\n}\n\n@NgModule({\n  declarations: [NgtVector2Pipe, NgtVector3Pipe, NgtVector4Pipe],\n  exports: [NgtVector2Pipe, NgtVector3Pipe, NgtVector4Pipe],\n})\nexport class NgtVectorPipeModule {}\n","import { NgModule, Pipe, PipeTransform } from '@angular/core';\nimport * as THREE from 'three';\nimport { NgtColor } from '../types';\nimport { makeColor } from '../utils/make';\n\n@Pipe({\n  name: 'color',\n})\nexport class NgtColorPipe implements PipeTransform {\n  /**\n   * ConstructorParameters<typeof THREE.Color> has a limitation on THREE.Color constructor overloads\n   */\n  transform(args: NgtColor): THREE.Color {\n    return makeColor(args) as THREE.Color;\n  }\n}\n\n@NgModule({\n  declarations: [NgtColorPipe],\n  exports: [NgtColorPipe],\n})\nexport class NgtColorPipeModule {}\n","import { NgModule, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'math',\n})\nexport class NgtMathPipe implements PipeTransform {\n  transform(\n    value: number | number[],\n    keyOfMath: keyof Omit<\n      Math,\n      | 'PI'\n      | 'E'\n      | 'LN2'\n      | 'LOG2E'\n      | 'LN10'\n      | 'LOG10E'\n      | 'SQRT1_2'\n      | 'SQRT2'\n      | 'random'\n    >\n  ): ReturnType<Extract<Math[typeof keyOfMath], 'string'>> {\n    const params: number[] = Array.isArray(value) ? value : [value];\n    return (Math[keyOfMath] as unknown as (...args: number[]) => number)(\n      ...params\n    ) as ReturnType<Extract<Math[typeof keyOfMath], 'string'>>;\n  }\n}\n\n@Pipe({\n  name: 'mathConst',\n})\nexport class NgtMathConstantPipe implements PipeTransform {\n  transform(\n    value: number | 0,\n    keyOfMathConst:\n      | 'PI'\n      | 'E'\n      | 'LN2'\n      | 'LOG2E'\n      | 'LN10'\n      | 'LOG10E'\n      | 'SQRT1_2'\n      | 'SQRT2'\n      | 'random'\n  ): number {\n    if (keyOfMathConst === 'random') {\n      return Math.random();\n    }\n\n    return value * Math[keyOfMathConst];\n  }\n}\n\n@NgModule({\n  declarations: [NgtMathPipe, NgtMathConstantPipe],\n  exports: [NgtMathPipe, NgtMathConstantPipe],\n})\nexport class NgtMathPipeModule {}\n","import { NgModule, Pipe, PipeTransform } from '@angular/core';\nimport * as THREE from 'three';\n\n@Pipe({\n  name: 'fog',\n})\nexport class NgtFogPipe implements PipeTransform {\n  transform(value: ConstructorParameters<typeof THREE.Fog>): THREE.Fog {\n    return new THREE.Fog(...value);\n  }\n}\n\n@Pipe({\n  name: 'fogExp2',\n})\nexport class NgtFogExp2Pipe implements PipeTransform {\n  transform(value: ConstructorParameters<typeof THREE.FogExp2>): THREE.FogExp2 {\n    return new THREE.FogExp2(...value);\n  }\n}\n\n@NgModule({\n  declarations: [NgtFogPipe, NgtFogExp2Pipe],\n  exports: [NgtFogPipe, NgtFogExp2Pipe],\n})\nexport class NgtFogPipeModule {}\n","import { NgModule, Pipe, PipeTransform } from '@angular/core';\nimport * as THREE from 'three';\n\n@Pipe({ name: 'side' })\nexport class NgtSidePipe implements PipeTransform {\n  transform(value: '', side: 'front' | 'back' | 'double'): THREE.Side {\n    switch (side) {\n      case 'front':\n        return THREE.FrontSide;\n      case 'back':\n        return THREE.BackSide;\n      case 'double':\n        return THREE.DoubleSide;\n    }\n  }\n}\n\n@NgModule({\n  declarations: [NgtSidePipe],\n  exports: [NgtSidePipe],\n})\nexport class NgtSidePipeModule {}\n","import {\n  Directive,\n  Inject,\n  Input,\n  NgModule,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\nconst MAX_VALUE = 0x10000;\n\nexport interface RepeatContext {\n  $implicit: number;\n  isOdd: boolean;\n  isEven: boolean;\n  isFirst: boolean;\n  isLast: boolean;\n}\n\n@Directive({\n  selector: '[repeat][repeatOf]',\n})\nexport class NgtRepeat {\n  @Input()\n  set repeatOf(count: number) {\n    const safeCount = Math.floor(Math.max(0, Math.min(count, MAX_VALUE)));\n    const { length } = this.viewContainer;\n\n    if (safeCount < length) {\n      this.removeContainers(length - safeCount);\n    } else {\n      this.addContainers(length, safeCount);\n    }\n  }\n\n  constructor(\n    @Inject(ViewContainerRef) private readonly viewContainer: ViewContainerRef,\n    @Inject(TemplateRef)\n    private readonly templateRef: TemplateRef<RepeatContext>\n  ) {}\n\n  private addContainers(length: number, count: number) {\n    for (let index = length; index < count; index++) {\n      this.viewContainer.createEmbeddedView<RepeatContext>(this.templateRef, {\n        $implicit: index,\n        isFirst: index === length,\n        isLast: index === count - 1,\n        isOdd: !(index % 2),\n        isEven: !!(index % 2),\n      });\n    }\n  }\n\n  private removeContainers(amount: number) {\n    for (let index = 0; index < amount; index++) {\n      this.viewContainer.remove();\n    }\n  }\n\n  static ngTemplateContextGuard(\n    dir: NgtRepeat,\n    ctx: unknown\n  ): ctx is RepeatContext {\n    return true;\n  }\n}\n\n@NgModule({\n  declarations: [NgtRepeat],\n  exports: [NgtRepeat],\n})\nexport class NgtRepeatModule {}\n","import { DOCUMENT } from '@angular/common';\nimport { Directive, Inject, NgModule, Optional, Self } from '@angular/core';\nimport { mapTo, merge, takeUntil } from 'rxjs';\nimport { NgtObject3dInputsController } from '../controllers/object-3d-inputs.controller';\nimport { NgtDestroyedService } from '../services/destroyed.service';\n\n@Directive({\n  selector: '[ngtCursor]',\n  exportAs: 'ngtCursor',\n  providers: [NgtDestroyedService],\n})\nexport class NgtCursor {\n  constructor(\n    @Optional()\n    @Self()\n    objectInputsController: NgtObject3dInputsController,\n    @Inject(DOCUMENT) document: Document,\n    destroyed: NgtDestroyedService\n  ) {\n    if (!objectInputsController) return;\n    merge(\n      objectInputsController.pointerover.pipe(mapTo(true)),\n      objectInputsController.pointerout.pipe(mapTo(false))\n    )\n      .pipe(takeUntil(destroyed))\n      .subscribe((hovered) => {\n        document.body.style.cursor = hovered ? 'pointer' : 'auto';\n      });\n  }\n}\n\n@NgModule({\n  declarations: [NgtCursor],\n  exports: [NgtCursor],\n})\nexport class NgtCursorModule {}\n","// GENERATED\nimport { Directive, Input, NgModule, NgZone } from '@angular/core';\nimport * as THREE from 'three';\nimport { Controller, createControllerProviderFactory } from './controller';\n\n@Directive({\n  selector: `\n    ngt-mesh,\n    ngt-instanced-mesh,\n    ngt-skinned-mesh,\n    ngt-line,\n    ngt-line-loop,\n    ngt-line-segments,\n    ngt-points\n  `,\n  exportAs: 'ngtContentGeometryController',\n})\nexport class NgtContentGeometryController extends Controller {\n  #geometryInput?: THREE.BufferGeometry | undefined;\n\n  @Input() set geometry(v: THREE.BufferGeometry | undefined) {\n    if (v) {\n      this.#geometryInput = v;\n      this.construct();\n    }\n  }\n\n  @Input() contentGeometryController?: NgtContentGeometryController;\n\n  get geometry() {\n    return this.#geometry;\n  }\n\n  #geometry: THREE.BufferGeometry | undefined = undefined;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  construct() {\n    this.#geometry = this.#getGeometry(this.#geometryInput);\n  }\n\n  #getGeometry(\n    input: THREE.BufferGeometry | undefined\n  ): THREE.BufferGeometry | undefined {\n    if (input instanceof THREE.BufferGeometry) {\n      return input;\n    }\n\n    return undefined;\n  }\n\n  get controller(): Controller | undefined {\n    return this.contentGeometryController;\n  }\n\n  get props(): string[] {\n    return ['geometry'];\n  }\n}\n\n@NgModule({\n  declarations: [NgtContentGeometryController],\n  exports: [NgtContentGeometryController],\n})\nexport class NgtContentGeometryControllerModule {}\n\nexport const [\n  NGT_CONTENT_GEOMETRY_WATCHED_CONTROLLER,\n  NGT_CONTENT_GEOMETRY_CONTROLLER_PROVIDER,\n] = createControllerProviderFactory({\n  controller: NgtContentGeometryController,\n  watchedControllerTokenName: 'Watched ContentGeometryController',\n});\n","// GENERATED\nimport { Directive, Input, NgModule, NgZone } from '@angular/core';\nimport * as THREE from 'three';\nimport { Controller, createControllerProviderFactory } from './controller';\n\n@Directive({\n  selector: `\n    ngt-mesh,\n    ngt-instanced-mesh,\n    ngt-skinned-mesh,\n    ngt-line,\n    ngt-line-loop,\n    ngt-line-segments,\n    ngt-soba-plane,\n    ngt-soba-box,\n    ngt-soba-cylinder,\n    ngt-soba-cone,\n    ngt-soba-circle,\n    ngt-soba-sphere,\n    ngt-soba-tube,\n    ngt-soba-torus,\n    ngt-soba-tetrahedron,\n    ngt-soba-ring,\n    ngt-soba-polyhedron,\n    ngt-soba-octahedron,\n    ngt-soba-dodecahedron,\n    ngt-soba-icosahedron,\n    ngt-soba-extrude,\n    ngt-soba-lathe,\n    ngt-soba-torus-knot,\n    ngt-soba-text,,\n    ngt-points\n  `,\n  exportAs: 'ngtContentMaterialController',\n})\nexport class NgtContentMaterialController extends Controller {\n  #materialInput?: THREE.Material | THREE.Material[] | undefined;\n\n  @Input() set material(v: THREE.Material | THREE.Material[] | undefined) {\n    if (v) {\n      if (!(Array.isArray(v) && !v.length)) {\n        this.#materialInput = v;\n      }\n      this.construct();\n    }\n  }\n\n  @Input() isMaterialArray = false;\n  @Input() contentMaterialController?: NgtContentMaterialController;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  get material() {\n    return this.#material;\n  }\n\n  #material: THREE.Material | THREE.Material[] | undefined = undefined;\n\n  construct() {\n    this.#material = this.#getMaterial(this.#materialInput);\n  }\n\n  #getMaterial(\n    input: THREE.Material | THREE.Material[] | undefined\n  ): THREE.Material | THREE.Material[] | undefined {\n    if (Array.isArray(input)) {\n      if (!input.length) return undefined;\n\n      if (input[0] instanceof THREE.Material) {\n        return input as THREE.Material[];\n      }\n    }\n\n    if (input instanceof THREE.Material) {\n      return input;\n    }\n\n    return undefined;\n  }\n\n  get controller(): Controller | undefined {\n    return this.contentMaterialController;\n  }\n\n  get props(): string[] {\n    return ['material', 'isArrayMaterial'];\n  }\n}\n\n@NgModule({\n  declarations: [NgtContentMaterialController],\n  exports: [NgtContentMaterialController],\n})\nexport class NgtContentMaterialControllerModule {}\n\nexport const [\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n] = createControllerProviderFactory({\n  controller: NgtContentMaterialController,\n  watchedControllerTokenName: 'Watched ContentMaterialController',\n});\n","// GENERATED\nimport {\n  Directive,\n  Inject,\n  InjectionToken,\n  Input,\n  NgModule,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport { AnyConstructor, AnyExtenderFunction, UnknownRecord } from '../types';\nimport {\n  NGT_CONTENT_GEOMETRY_CONTROLLER_PROVIDER,\n  NGT_CONTENT_GEOMETRY_WATCHED_CONTROLLER,\n  NgtContentGeometryController,\n  NgtContentGeometryControllerModule,\n} from './content-geometry.controller';\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtContentMaterialControllerModule,\n} from './content-material.controller';\nimport { Controller, createControllerProviderFactory } from './controller';\nimport {\n  NGT_OBJECT_CONTROLLER_PROVIDER,\n  NGT_OBJECT_WATCHED_CONTROLLER,\n  NgtObject3dController,\n  NgtObject3dControllerModule,\n} from './object-3d.controller';\n\nexport const NGT_OBJECT_TYPE = new InjectionToken('Object3d Type', {\n  providedIn: 'root',\n  factory: () => THREE.Object3D,\n});\n\nexport const NGT_OBJECT_POST_INIT = new InjectionToken('Object3d PostInit', {\n  providedIn: 'root',\n  factory: () => undefined,\n});\n\n@Directive({\n  selector: `\n    ngt-mesh,\n    ngt-instanced-mesh,\n    ngt-skinned-mesh,\n    ngt-line,\n    ngt-line-loop,\n    ngt-line-segments,\n    ngt-points\n  `,\n  exportAs: 'ngtMaterialGeometryController',\n  providers: [\n    NGT_OBJECT_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    NGT_CONTENT_GEOMETRY_CONTROLLER_PROVIDER,\n  ],\n})\nexport class NgtMaterialGeometryController\n  extends Controller\n  implements OnInit\n{\n  #meshArgs: unknown[] = [];\n  set meshArgs(v: unknown | unknown[]) {\n    this.#meshArgs = Array.isArray(v) ? v : [v];\n  }\n\n  @Input() morphTargetInfluences?: number[];\n  @Input() morphTargetDictionary?: { [key: string]: number };\n\n  constructor(\n    ngZone: NgZone,\n    @Inject(NGT_OBJECT_WATCHED_CONTROLLER)\n    public objectController: NgtObject3dController,\n    @Inject(NGT_OBJECT_TYPE)\n    public objectType: AnyConstructor<THREE.Object3D>,\n    @Inject(NGT_OBJECT_POST_INIT)\n    public objectPostInit: AnyExtenderFunction<THREE.Object3D> | undefined,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    contentMaterialController: NgtContentMaterialController,\n    @Inject(NGT_CONTENT_GEOMETRY_WATCHED_CONTROLLER)\n    contentGeometryController: NgtContentGeometryController\n  ) {\n    super(ngZone);\n\n    objectController.initFn = () => {\n      if (!contentGeometryController.geometry) {\n        contentGeometryController.construct();\n      }\n\n      if (!contentMaterialController.material) {\n        contentMaterialController.construct();\n      }\n\n      const object = new this.objectType(\n        contentGeometryController.geometry || undefined,\n        contentMaterialController.material || undefined,\n        ...this.#meshArgs\n      );\n\n      if (this.morphTargetDictionary && 'morphTargetDictionary' in object) {\n        (object as unknown as UnknownRecord).morphTargetDictionary =\n          this.morphTargetDictionary;\n      }\n\n      if (this.morphTargetInfluences && 'morphTargetInfluences' in object) {\n        (object as unknown as UnknownRecord).morphTargetInfluences =\n          this.morphTargetInfluences;\n      }\n\n      if (this.objectPostInit) {\n        this.objectPostInit(object);\n      }\n\n      return object;\n    };\n\n    objectController.readyFn = () => {\n      if (this.readyFn) {\n        this.readyFn();\n      }\n    };\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.ngZone.runOutsideAngular(() => {\n      this.objectController.init();\n    });\n  }\n\n  get controller(): Controller | undefined {\n    return undefined;\n  }\n\n  get props(): string[] {\n    return [];\n  }\n}\n\n@NgModule({\n  declarations: [NgtMaterialGeometryController],\n  exports: [\n    NgtMaterialGeometryController,\n    NgtObject3dControllerModule,\n    NgtContentMaterialControllerModule,\n    NgtContentGeometryControllerModule,\n  ],\n})\nexport class NgtMaterialGeometryControllerModule {}\n\nexport const [\n  NGT_MATERIAL_GEOMETRY_WATCHED_CONTROLLER,\n  NGT_MATERIAL_GEOMETRY_CONTROLLER_PROVIDER,\n] = createControllerProviderFactory({\n  watchedControllerTokenName: 'Watched MaterialGeometryController',\n  controller: NgtMaterialGeometryController,\n});\n","// GENERATED\nimport { Directive, Input, NgModule } from '@angular/core';\nimport { Controller, createControllerProviderFactory } from './controller';\n\n@Directive({\n  selector: `\n    ngt-audio,\n    ngt-positional-audio,\n    ngt-soba-positional-audio,\n  `,\n  exportAs: 'ngtAudioController',\n})\nexport class NgtAudioController extends Controller {\n  @Input() autoplay?: boolean;\n  @Input() buffer: null | AudioBuffer = null;\n  @Input() detune = 0;\n  @Input() loop = false;\n  @Input() loopStart = 0;\n  @Input() loopEnd = 0;\n  @Input() offset = 0;\n  @Input() duration: number | undefined = undefined;\n  @Input() playbackRate = 1;\n  @Input() isPlaying = false;\n  @Input() hasPlaybackControl = true;\n  @Input() sourceType = 'empty';\n  @Input() source: null | AudioBufferSourceNode = null;\n  @Input() filters: AudioNode[] = [];\n\n  @Input() audioController?: NgtAudioController;\n\n  get props(): string[] {\n    return [\n      'autoplay',\n      'buffer',\n      'detune',\n      'loop',\n      'loopStart',\n      'loopEnd',\n      'offset',\n      'duration',\n      'playbackRate',\n      'isPlaying',\n      'hasPlaybackControl',\n      'sourceType',\n      'source',\n      'filters',\n    ];\n  }\n\n  get controller(): Controller | undefined {\n    return this.audioController;\n  }\n}\n\n@NgModule({\n  declarations: [NgtAudioController],\n  exports: [NgtAudioController],\n})\nexport class NgtAudioControllerModule {}\n\nexport const [NGT_AUDIO_WATCHED_CONTROLLER, NGT_AUDIO_CONTROLLER_PROVIDER] =\n  createControllerProviderFactory({\n    watchedControllerTokenName: 'Watched AudioController',\n    controller: NgtAudioController,\n  });\n","import {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport {\n  NGT_OBJECT_WATCHED_CONTROLLER,\n  NgtObject3dController,\n} from '../controllers/object-3d.controller';\nimport { AnyConstructor } from '../types';\n\n@Directive()\nexport abstract class NgtCommonAudio<\n  TAudioNode extends AudioNode = GainNode,\n  TAudio extends THREE.Audio<TAudioNode> = THREE.Audio<TAudioNode>\n> implements OnInit\n{\n  @Input() listener!: THREE.AudioListener;\n  @Output() ready = new EventEmitter<TAudio>();\n\n  #audioArgs: unknown[] = [];\n  protected set audioArgs(v: unknown | unknown[]) {\n    this.#audioArgs = Array.isArray(v) ? v : [v];\n    this.ngZone.runOutsideAngular(() => {\n      this.objectController.init();\n    });\n  }\n\n  constructor(\n    @Inject(NGT_OBJECT_WATCHED_CONTROLLER)\n    protected objectController: NgtObject3dController,\n    protected ngZone: NgZone\n  ) {\n    objectController.initFn = () => {\n      if (!this.listener) {\n        throw new Error('Cannot initialize Audio without an AudioListener');\n      }\n\n      this.#audio = new this.audioType(this.listener, ...this.#audioArgs);\n      return this.#audio;\n    };\n    objectController.readyFn = () => {\n      this.ready.emit(this.audio);\n    };\n  }\n\n  abstract audioType: AnyConstructor<TAudio>;\n\n  #audio!: TAudio;\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.#audio) {\n        this.objectController.init();\n      }\n    });\n  }\n\n  get audio() {\n    return this.#audio;\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Inject,\n  Optional,\n  Output,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport {\n  NGT_MATERIAL_GEOMETRY_WATCHED_CONTROLLER,\n  NGT_OBJECT_TYPE,\n  NgtMaterialGeometryController,\n} from '../controllers/material-geometry.controller';\n\n@Directive({\n  providers: [{ provide: NGT_OBJECT_TYPE, useValue: THREE.Line }],\n})\nexport abstract class NgtCommonLine<TLine extends THREE.Line = THREE.Line> {\n  @Output() ready = new EventEmitter<TLine>();\n\n  constructor(\n    @Optional()\n    @Inject(NGT_MATERIAL_GEOMETRY_WATCHED_CONTROLLER)\n    protected materialGeometryController: NgtMaterialGeometryController\n  ) {\n    if (materialGeometryController) {\n      materialGeometryController.readyFn = () => {\n        this.ready.emit(this.line);\n      };\n    }\n  }\n\n  get line() {\n    return this.materialGeometryController?.objectController.object3d as TLine;\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport type { AnyConstructor } from '../types';\n\n@Directive()\nexport abstract class NgtTexture<TTexture extends THREE.Texture = THREE.Texture>\n  implements OnInit, OnDestroy\n{\n  @Output() ready = new EventEmitter<TTexture>();\n\n  abstract textureType: AnyConstructor<TTexture>;\n\n  constructor(protected ngZone: NgZone) {}\n\n  #textureArgs: unknown[] = [];\n\n  protected set textureArgs(v: unknown | unknown[]) {\n    this.#textureArgs = Array.isArray(v) ? v : [v];\n    this.ngZone.runOutsideAngular(() => {\n      this.#texture = new this.textureType(...this.#textureArgs);\n    });\n  }\n\n  #texture?: TTexture;\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.texture) {\n        this.#texture = new this.textureType(...this.#textureArgs);\n        this.ready.emit(this.texture);\n      }\n    });\n  }\n\n  get texture(): TTexture | undefined {\n    return this.#texture;\n  }\n\n  ngOnDestroy() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.texture) {\n        this.texture.dispose();\n      }\n    });\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Inject,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { requestAnimationFrame } from '@rx-angular/cdk/zone-less';\nimport * as THREE from 'three';\nimport { NGT_OBJECT_3D } from '../di/object3d';\nimport type { AnyConstructor, AnyFunction, UnknownRecord } from '../types';\n\n@Directive()\nexport abstract class NgtGeometry<\n  TGeometry extends THREE.BufferGeometry = THREE.BufferGeometry\n> implements OnInit, OnDestroy\n{\n  @Output() ready = new EventEmitter<TGeometry>();\n\n  constructor(\n    protected ngZone: NgZone,\n    @Inject(NGT_OBJECT_3D) protected parentObject: AnyFunction<THREE.Object3D>\n  ) {}\n\n  abstract geometryType: AnyConstructor<TGeometry>;\n\n  #geometryArgs: unknown[] = [];\n  protected set geometryArgs(v: unknown | unknown[]) {\n    this.#geometryArgs = Array.isArray(v) ? v : [v];\n    this.ngZone.runOutsideAngular(() => {\n      this.#init();\n    });\n  }\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.geometry) {\n        this.#init();\n      }\n    });\n  }\n\n  #init() {\n    // geometry has changed. reconstruct\n    if (this.geometry) {\n      // cleanup\n      if (this.parentObject) {\n        const object3d = this.parentObject as unknown as UnknownRecord;\n        if (object3d.geometry) {\n          (object3d.geometry as THREE.BufferGeometry).dispose();\n        }\n      }\n\n      // reconstruct\n      this.#construct();\n      this.#assign();\n    } else {\n      this.#construct();\n      this.#assign();\n    }\n  }\n\n  #assign() {\n    requestAnimationFrame(() => {\n      const parentObject = this.parentObject() as THREE.Mesh;\n      if (parentObject) {\n        parentObject.geometry = this.geometry;\n      }\n    });\n  }\n\n  #construct() {\n    this.#geometry = new this.geometryType(...this.#geometryArgs);\n    this.ready.emit(this.geometry);\n  }\n\n  #geometry!: TGeometry;\n  get geometry(): TGeometry {\n    return this.#geometry;\n  }\n\n  ngOnDestroy() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.geometry) {\n        this.geometry.dispose();\n      }\n    });\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport {\n  NGT_OBJECT_WATCHED_CONTROLLER,\n  NgtObject3dController,\n} from '../controllers/object-3d.controller';\nimport type { AnyConstructor, UnknownRecord } from '../types';\nimport { applyProps } from '../utils/apply-props';\n\n@Directive()\nexport abstract class NgtLight<TLight extends THREE.Light = THREE.Light>\n  implements OnInit\n{\n  @Output() ready = new EventEmitter<TLight>();\n\n  abstract lightType: AnyConstructor<TLight>;\n\n  @Input() intensity?: number;\n  @Input() shadow?: Partial<THREE.LightShadow>;\n\n  constructor(\n    @Inject(NGT_OBJECT_WATCHED_CONTROLLER)\n    protected objectController: NgtObject3dController,\n    protected ngZone: NgZone\n  ) {\n    objectController.initFn = () => {\n      this.#light = new this.lightType(...this.#lightArgs);\n      if (this.intensity) {\n        applyProps(this.light, { intensity: this.intensity });\n      }\n\n      if (this.shadow) {\n        applyProps(this.light, this.shadow as unknown as UnknownRecord);\n      }\n\n      return this.#light;\n    };\n\n    objectController.readyFn = () => {\n      this.ready.emit(this.light);\n    };\n  }\n\n  #lightArgs: unknown[] = [];\n  protected set lightArgs(v: unknown | unknown[]) {\n    this.#lightArgs = Array.isArray(v) ? v : [v];\n    this.ngZone.runOutsideAngular(() => {\n      this.objectController.init();\n    });\n  }\n\n  #light!: TLight;\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.#light) {\n        this.objectController.init();\n      }\n    });\n  }\n\n  get light() {\n    return this.#light;\n  }\n}\n","import {\n  Directive,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport type { AnyConstructor } from '../types';\nimport { NgtGeometry } from './geometry';\n\n@Directive()\nexport abstract class NgtAttribute<\n  TAttribute extends\n    | THREE.BufferAttribute\n    | THREE.InterleavedBufferAttribute = THREE.BufferAttribute\n> implements OnInit, OnChanges, OnDestroy\n{\n  @Input() attach?: THREE.BuiltinShaderAttributeName | string;\n\n  abstract attributeType: AnyConstructor<TAttribute>;\n\n  constructor(\n    protected ngZone: NgZone,\n    @Optional() protected geometryDirective: NgtGeometry\n  ) {}\n\n  #attributeArgs: unknown[] = [];\n\n  protected set attributeArgs(v: unknown | unknown[]) {\n    this.#attributeArgs = Array.isArray(v) ? v : [v];\n    this.ngZone.runOutsideAngular(() => {\n      this.init();\n    });\n  }\n\n  #attribute?: TAttribute;\n  #defaultValue?: TAttribute;\n\n  ngOnChanges() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.attribute) {\n        this.attribute.needsUpdate = true;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.attribute) {\n        this.init();\n      }\n    });\n  }\n\n  private init() {\n    if (this.geometryDirective && this.attach) {\n      this.#attribute = new this.attributeType(...this.#attributeArgs);\n      if (this.attribute) {\n        this.#defaultValue = this.geometryDirective.geometry.attributes[\n          this.attach\n        ] as TAttribute;\n        this.geometryDirective.geometry.setAttribute(\n          this.attach,\n          this.attribute\n        );\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.geometryDirective && this.attach) {\n        if (this.#defaultValue !== undefined) {\n          this.geometryDirective.geometry.setAttribute(\n            this.attach,\n            this.#defaultValue\n          );\n        } else {\n          this.geometryDirective.geometry.deleteAttribute(this.attach);\n        }\n      }\n    });\n  }\n\n  get attribute(): TAttribute | undefined {\n    return this.#attribute;\n  }\n}\n","import { Directive, Input, NgZone, OnInit, Optional } from '@angular/core';\nimport * as THREE from 'three';\nimport type { AnyConstructor } from '../types';\nimport { NgtGeometry } from './geometry';\n\n@Directive()\nexport abstract class NgtCurve<\n  TCurve extends THREE.Curve<THREE.Vector> = THREE.Curve<THREE.Vector>\n> implements OnInit\n{\n  @Input() divisions?: number;\n\n  abstract curveType: AnyConstructor<TCurve>;\n\n  #curveArgs: unknown[] = [];\n\n  protected set curveArgs(v: unknown | unknown[]) {\n    this.#curveArgs = Array.isArray(v) ? v : [v];\n    this.ngZone.runOutsideAngular(() => {\n      this.#init();\n    });\n  }\n\n  constructor(\n    protected ngZone: NgZone,\n    @Optional() protected geometryDirective: NgtGeometry | null\n  ) {}\n\n  #curve?: TCurve;\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.curve) {\n        this.#init();\n      }\n    });\n  }\n\n  #init() {\n    this.#curve = new this.curveType(...this.#curveArgs);\n    if (this.curve && this.geometryDirective) {\n      const points = this.curve.getPoints(this.divisions);\n      this.geometryDirective.geometry.setFromPoints(\n        points as unknown as THREE.Vector3[] | THREE.Vector2[]\n      );\n    }\n  }\n\n  get curve(): TCurve | undefined {\n    return this.#curve;\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Inject,\n  NgZone,\n  OnChanges,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport {\n  NGT_OBJECT_WATCHED_CONTROLLER,\n  NgtObject3dController,\n} from '../controllers/object-3d.controller';\nimport { AnyConstructor } from '../types';\n\n@Directive()\nexport abstract class NgtHelper<THelper extends THREE.Object3D>\n  implements OnInit, OnChanges\n{\n  @Output() ready = new EventEmitter<THelper>();\n\n  abstract helperType: AnyConstructor<THelper>;\n\n  #helper!: THelper;\n  #helperArgs: unknown[] = [];\n  protected set helperArgs(v: unknown | unknown[]) {\n    this.#helperArgs = Array.isArray(v) ? v : [v];\n    this.ngZone.runOutsideAngular(() => {\n      this.objectController.init();\n    });\n  }\n\n  constructor(\n    @Inject(NGT_OBJECT_WATCHED_CONTROLLER)\n    protected objectController: NgtObject3dController,\n    protected ngZone: NgZone\n  ) {\n    objectController.initFn = () => {\n      this.#helper = new this.helperType(...this.#helperArgs);\n      return this.#helper;\n    };\n\n    objectController.readyFn = () => {\n      this.ready.emit(this.helper);\n    };\n  }\n\n  ngOnChanges() {\n    this.ngZone.runOutsideAngular(() => {\n      this.objectController.init();\n    });\n  }\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.#helper) {\n        this.objectController.init();\n      }\n    });\n  }\n\n  get helper() {\n    return this.#helper;\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { requestAnimationFrame } from '@rx-angular/cdk/zone-less';\nimport * as THREE from 'three';\nimport { NgtContentMaterialController } from '../controllers/content-material.controller';\nimport { NGT_OBJECT_3D } from '../di/object3d';\nimport { NgtStore } from '../stores/store';\nimport type {\n  AnyConstructor,\n  AnyFunction,\n  NgtColor,\n  UnknownRecord,\n} from '../types';\nimport { makeColor } from '../utils/make';\n\n@Directive()\nexport abstract class NgtMaterial<\n  TMaterialParameters extends THREE.MaterialParameters = THREE.MaterialParameters,\n  TMaterial extends THREE.Material = THREE.Material\n> implements OnInit, OnDestroy\n{\n  @Output() ready = new EventEmitter<TMaterial>();\n\n  @Input() set parameters(v: TMaterialParameters | undefined) {\n    requestAnimationFrame(() => {\n      this.#parameters = v;\n      if (v && this.material) {\n        this.#convertColorToLinear(v);\n        this.material.setValues(v);\n        this.material.needsUpdate = true;\n      }\n    });\n  }\n\n  get parameters(): TMaterialParameters | undefined {\n    return this.#parameters;\n  }\n\n  #parameters?: TMaterialParameters;\n\n  constructor(\n    protected ngZone: NgZone,\n    protected store: NgtStore,\n    @Inject(NGT_OBJECT_3D) protected parentObject: AnyFunction<THREE.Object3D>,\n    @Optional()\n    protected contentMaterialController: NgtContentMaterialController\n  ) {}\n\n  abstract materialType: AnyConstructor<TMaterial>;\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.parameters) {\n        this.#convertColorToLinear(this.parameters);\n      }\n      this.#material = new this.materialType(this.parameters);\n      requestAnimationFrame(() => {\n        const parentObject = this.parentObject() as THREE.Mesh;\n        if (parentObject) {\n          if (\n            this.contentMaterialController &&\n            this.contentMaterialController.isMaterialArray\n          ) {\n            if (!Array.isArray(parentObject.material)) {\n              parentObject.material = [];\n            }\n            (parentObject.material as THREE.Material[]).push(this.material);\n          } else {\n            parentObject.material = this.material;\n          }\n        }\n        this.ready.emit(this.material);\n      });\n    });\n  }\n\n  #material!: TMaterial;\n  get material(): TMaterial {\n    return this.#material;\n  }\n\n  #convertColorToLinear(parameters: TMaterialParameters) {\n    if ('color' in parameters) {\n      const colorParams = (parameters as UnknownRecord)['color'] as NgtColor;\n      (parameters as UnknownRecord)['color'] = makeColor(colorParams);\n\n      if (!this.store.get('linear')) {\n        (\n          (parameters as UnknownRecord)['color'] as THREE.Color\n        ).convertSRGBToLinear();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.material) {\n        this.material.dispose();\n      }\n    });\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Inject,\n  NgZone,\n  Optional,\n  Output,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport {\n  NGT_MATERIAL_GEOMETRY_WATCHED_CONTROLLER,\n  NgtMaterialGeometryController,\n} from '../controllers/material-geometry.controller';\n\n@Directive()\nexport abstract class NgtCommonMesh<TMesh extends THREE.Mesh = THREE.Mesh> {\n  @Output() ready = new EventEmitter<TMesh>();\n\n  constructor(\n    @Optional()\n    @Inject(NGT_MATERIAL_GEOMETRY_WATCHED_CONTROLLER)\n    protected materialGeometryController: NgtMaterialGeometryController,\n    protected ngZone: NgZone\n  ) {\n    if (materialGeometryController) {\n      materialGeometryController.readyFn = () => {\n        this.ready.emit(this.mesh);\n      };\n    }\n  }\n\n  get mesh() {\n    return this.materialGeometryController.objectController.object3d as TMesh;\n  }\n}\n","import {\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport {\n  NGT_OBJECT_WATCHED_CONTROLLER,\n  NgtObject3dController,\n} from '../controllers/object-3d.controller';\nimport type { AnyConstructor } from '../types';\nimport { NgtMaterial } from './material';\n\n@Directive()\nexport abstract class NgtCommonSprite<\n  TSprite extends THREE.Sprite = THREE.Sprite\n> implements OnInit\n{\n  @Input() material?: THREE.SpriteMaterial;\n  @Output() ready = new EventEmitter<TSprite>();\n\n  @ContentChild(NgtMaterial) materialDirective?: NgtMaterial;\n\n  abstract spriteType: AnyConstructor<TSprite>;\n\n  #sprite!: TSprite;\n\n  constructor(\n    @Inject(NGT_OBJECT_WATCHED_CONTROLLER)\n    protected objectController: NgtObject3dController,\n    protected ngZone: NgZone\n  ) {\n    objectController.initFn = () => {\n      if (this.material) {\n        this.#sprite = new this.spriteType(this.material);\n      } else if (this.materialDirective) {\n        if (this.materialDirective.material instanceof THREE.SpriteMaterial) {\n          this.#sprite = new this.spriteType(this.materialDirective.material);\n        }\n      }\n\n      return this.#sprite;\n    };\n\n    objectController.readyFn = () => {\n      this.ready.emit(this.sprite);\n    };\n  }\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      this.objectController.init();\n    });\n  }\n\n  get sprite() {\n    return this.#sprite;\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Inject,\n  NgZone,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport {\n  NGT_OBJECT_WATCHED_CONTROLLER,\n  NgtObject3dController,\n} from '../controllers/object-3d.controller';\nimport { AnyConstructor } from '../types';\n\n@Directive()\nexport abstract class NgtCommonCamera<\n  TCamera extends THREE.Camera = THREE.Camera\n> implements OnInit\n{\n  @Output() ready = new EventEmitter<TCamera>();\n\n  abstract cameraType: AnyConstructor<TCamera>;\n\n  constructor(\n    @Inject(NGT_OBJECT_WATCHED_CONTROLLER)\n    protected objectController: NgtObject3dController,\n    protected ngZone: NgZone\n  ) {\n    objectController.initFn = () => {\n      this.#camera = new this.cameraType(...this.#cameraArgs);\n      return this.#camera;\n    };\n\n    objectController.readyFn = () => {\n      this.ready.emit(this.camera);\n    };\n  }\n\n  #cameraArgs: unknown[] = [];\n  protected set cameraArgs(v: unknown | unknown[]) {\n    this.#cameraArgs = Array.isArray(v) ? v : [v];\n    this.ngZone.runOutsideAngular(() => {\n      this.objectController.init();\n    });\n  }\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.#camera) {\n        this.objectController.init();\n      }\n    });\n  }\n\n  #camera!: TCamera;\n  get camera(): TCamera {\n    return this.#camera;\n  }\n}\n","import { Directive, Inject, NgZone, OnInit } from '@angular/core';\nimport { requestAnimationFrame } from '@rx-angular/cdk/zone-less';\nimport * as THREE from 'three';\nimport { NGT_OBJECT_3D } from '../di/object3d';\nimport { NgtAnimationFrameStore } from '../stores/animation-frame.store';\nimport { EnhancedRxState } from '../stores/enhanced-rx-state';\nimport { NgtStore } from '../stores/store';\nimport { AnyConstructor, AnyFunction } from '../types';\n\n@Directive()\nexport abstract class NgtObjectHelper<TObjectHelper extends THREE.Object3D>\n  extends EnhancedRxState<{ args: unknown[] }>\n  implements OnInit\n{\n  abstract objectHelperType: AnyConstructor<TObjectHelper>;\n\n  protected set objectHelperArgs(v: unknown | unknown[]) {\n    this.set({ args: Array.isArray(v) ? v : [v] });\n  }\n\n  #object3d?: THREE.Object3D;\n\n  constructor(\n    @Inject(NGT_OBJECT_3D)\n    protected object3dFn: AnyFunction<THREE.Object3D>,\n    protected store: NgtStore,\n    protected animationFrameStore: NgtAnimationFrameStore,\n    protected ngZone: NgZone\n  ) {\n    super();\n    this.set({ args: [] });\n  }\n\n  ngOnInit() {\n    requestAnimationFrame(() => {\n      this.#object3d = this.object3dFn();\n\n      if (!this.#object3d) {\n        console.info('Parent is not an object3d');\n        return;\n      }\n\n      this.holdEffect(this.select('args'), (args) => {\n        this.#objectHelper = new this.objectHelperType(this.#object3d, ...args);\n\n        this.store.get('scene').add(this.objectHelper!);\n        const animationUuid = this.animationFrameStore.register({\n          callback: () => {\n            if (this.objectHelper) {\n              (\n                this.objectHelper as TObjectHelper & { update: () => void }\n              ).update();\n            }\n          },\n        });\n\n        return () => {\n          if (this.objectHelper) {\n            this.store.get('scene').remove(this.objectHelper);\n            this.animationFrameStore.actions.unsubscriberUuid(animationUuid);\n          }\n        };\n      });\n    });\n  }\n\n  #objectHelper?: TObjectHelper;\n  get objectHelper() {\n    return this.#objectHelper;\n  }\n}\n","import * as THREE from 'three';\nimport { NgtObjectMap, UnknownRecord } from '../types';\n\nexport function buildGraph(object: THREE.Object3D): NgtObjectMap {\n  const data: NgtObjectMap = { nodes: {}, materials: {} };\n  if (object) {\n    object.traverse((obj) => {\n      if (obj.name) {\n        data.nodes[obj.name] = obj;\n      }\n      if (\n        (obj as unknown as UnknownRecord).material &&\n        !data.materials[\n          (\n            (obj as unknown as UnknownRecord)\n              .material as unknown as UnknownRecord\n          ).name as string\n        ]\n      ) {\n        data.materials[\n          (\n            (obj as unknown as UnknownRecord)\n              .material as unknown as UnknownRecord\n          ).name as string\n        ] = (obj as unknown as UnknownRecord).material as THREE.Material;\n      }\n    });\n  }\n  return data;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport {\n  catchError,\n  defer,\n  forkJoin,\n  map,\n  Observable,\n  of,\n  ReplaySubject,\n  share,\n  tap,\n  throwError,\n} from 'rxjs';\nimport * as THREE from 'three';\nimport type { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport type {\n  BranchingReturn,\n  LoaderExtensions,\n  NgtLoaderResult,\n  NgtObjectMap,\n} from '../types';\nimport { buildGraph } from '../utils/build-graph';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgtLoaderService implements OnDestroy {\n  private readonly cached = new Map<string, BranchingReturn>();\n\n  use<TReturnType, TUrl extends string | string[]>(\n    loaderConstructor: new () => NgtLoaderResult<TReturnType>,\n    input: TUrl,\n    extensions?: LoaderExtensions,\n    onProgress?: (event: ProgressEvent) => void\n  ): TUrl extends any[]\n    ? Observable<BranchingReturn<TReturnType, GLTF, GLTF & NgtObjectMap>[]>\n    : Observable<BranchingReturn<TReturnType, GLTF, GLTF & NgtObjectMap>> {\n    const keys = (Array.isArray(input) ? input : [input]) as string[];\n    const loader = new loaderConstructor();\n    if (extensions) {\n      extensions(loader);\n    }\n\n    const results$ = forkJoin(\n      keys.map((key) => {\n        if (this.cached.has(key)) {\n          return of(this.cached.get(key));\n        }\n\n        return defer(() => loader.loadAsync(key, onProgress)).pipe(\n          tap((data) => {\n            if (data.scene) {\n              Object.assign(data, buildGraph(data.scene as THREE.Scene));\n            }\n            this.cached.set(key, data);\n          }),\n          catchError((err) => {\n            console.error(`Error loading ${key}: ${err.message}`);\n            return throwError(err);\n          })\n        );\n      })\n    ) as Observable<BranchingReturn<TReturnType, GLTF, GLTF & NgtObjectMap>[]>;\n\n    return defer(() =>\n      Array.isArray(input)\n        ? results$\n        : results$.pipe(map((results) => results[0]))\n    ).pipe(\n      share({\n        connector: () => new ReplaySubject(),\n        resetOnRefCountZero: true,\n        resetOnError: true,\n      })\n    ) as TUrl extends any[]\n      ? Observable<BranchingReturn<TReturnType, GLTF, GLTF & NgtObjectMap>[]>\n      : Observable<BranchingReturn<TReturnType, GLTF, GLTF & NgtObjectMap>>;\n  }\n\n  ngOnDestroy() {\n    this.cached.clear();\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken } from '@angular/core';\n\nexport const NGT_IS_WEBGL_AVAILABLE = new InjectionToken<boolean>(\n  'isWebGLAvailable',\n  {\n    providedIn: 'root',\n    factory: () => {\n      const document = inject(DOCUMENT);\n      try {\n        const canvas = document.createElement('canvas');\n        return !!(\n          document.defaultView?.WebGL2RenderingContext &&\n          canvas.getContext('webgl2')\n        );\n      } catch (e) {\n        return false;\n      }\n    },\n  }\n);\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}