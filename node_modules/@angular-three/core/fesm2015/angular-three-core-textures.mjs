import { NgtTexture } from '@angular-three/core';
import * as i0 from '@angular/core';
import { Directive, Input, NgModule } from '@angular/core';
import * as THREE from 'three';

// GENERATED
class NgtCanvasTexture extends NgtTexture {
    constructor() {
        super(...arguments);
        this.textureType = THREE.CanvasTexture;
    }
    set args(v) {
        this.textureArgs = v;
    }
}
NgtCanvasTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCanvasTexture, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtCanvasTexture.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtCanvasTexture, selector: "ngt-canvas-texture", inputs: { args: "args" }, providers: [
        {
            provide: NgtTexture,
            useExisting: NgtCanvasTexture,
        },
    ], exportAs: ["ngtCanvasTexture"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCanvasTexture, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-canvas-texture',
                    exportAs: 'ngtCanvasTexture',
                    providers: [
                        {
                            provide: NgtTexture,
                            useExisting: NgtCanvasTexture,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtCanvasTextureModule {
}
NgtCanvasTextureModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCanvasTextureModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtCanvasTextureModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCanvasTextureModule, declarations: [NgtCanvasTexture], exports: [NgtCanvasTexture] });
NgtCanvasTextureModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCanvasTextureModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCanvasTextureModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtCanvasTexture],
                    exports: [NgtCanvasTexture],
                }]
        }] });

// GENERATED
class NgtCompressedTexture extends NgtTexture {
    constructor() {
        super(...arguments);
        this.textureType = THREE.CompressedTexture;
    }
    set args(v) {
        this.textureArgs = v;
    }
}
NgtCompressedTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCompressedTexture, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtCompressedTexture.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtCompressedTexture, selector: "ngt-compressed-texture", inputs: { args: "args" }, providers: [
        {
            provide: NgtTexture,
            useExisting: NgtCompressedTexture,
        },
    ], exportAs: ["ngtCompressedTexture"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCompressedTexture, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-compressed-texture',
                    exportAs: 'ngtCompressedTexture',
                    providers: [
                        {
                            provide: NgtTexture,
                            useExisting: NgtCompressedTexture,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtCompressedTextureModule {
}
NgtCompressedTextureModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCompressedTextureModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtCompressedTextureModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCompressedTextureModule, declarations: [NgtCompressedTexture], exports: [NgtCompressedTexture] });
NgtCompressedTextureModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCompressedTextureModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCompressedTextureModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtCompressedTexture],
                    exports: [NgtCompressedTexture],
                }]
        }] });

// GENERATED
class NgtCubeTexture extends NgtTexture {
    constructor() {
        super(...arguments);
        this.textureType = THREE.CubeTexture;
    }
    set args(v) {
        this.textureArgs = v;
    }
}
NgtCubeTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCubeTexture, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtCubeTexture.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtCubeTexture, selector: "ngt-cube-texture", inputs: { args: "args" }, providers: [
        {
            provide: NgtTexture,
            useExisting: NgtCubeTexture,
        },
    ], exportAs: ["ngtCubeTexture"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCubeTexture, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-cube-texture',
                    exportAs: 'ngtCubeTexture',
                    providers: [
                        {
                            provide: NgtTexture,
                            useExisting: NgtCubeTexture,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtCubeTextureModule {
}
NgtCubeTextureModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCubeTextureModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtCubeTextureModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCubeTextureModule, declarations: [NgtCubeTexture], exports: [NgtCubeTexture] });
NgtCubeTextureModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCubeTextureModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCubeTextureModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtCubeTexture],
                    exports: [NgtCubeTexture],
                }]
        }] });

// GENERATED
class NgtDataTexture extends NgtTexture {
    constructor() {
        super(...arguments);
        this.textureType = THREE.DataTexture;
    }
    set args(v) {
        this.textureArgs = v;
    }
}
NgtDataTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtDataTexture.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtDataTexture, selector: "ngt-data-texture", inputs: { args: "args" }, providers: [
        {
            provide: NgtTexture,
            useExisting: NgtDataTexture,
        },
    ], exportAs: ["ngtDataTexture"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-data-texture',
                    exportAs: 'ngtDataTexture',
                    providers: [
                        {
                            provide: NgtTexture,
                            useExisting: NgtDataTexture,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtDataTextureModule {
}
NgtDataTextureModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTextureModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtDataTextureModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTextureModule, declarations: [NgtDataTexture], exports: [NgtDataTexture] });
NgtDataTextureModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTextureModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTextureModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtDataTexture],
                    exports: [NgtDataTexture],
                }]
        }] });

// GENERATED
class NgtDataTexture2DArray extends NgtTexture {
    constructor() {
        super(...arguments);
        this.textureType = THREE.DataTexture2DArray;
    }
    set args(v) {
        this.textureArgs = v;
    }
}
NgtDataTexture2DArray.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture2DArray, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtDataTexture2DArray.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtDataTexture2DArray, selector: "ngt-data-texture2-darray", inputs: { args: "args" }, providers: [
        {
            provide: NgtTexture,
            useExisting: NgtDataTexture2DArray,
        },
    ], exportAs: ["ngtDataTexture2DArray"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture2DArray, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-data-texture2-darray',
                    exportAs: 'ngtDataTexture2DArray',
                    providers: [
                        {
                            provide: NgtTexture,
                            useExisting: NgtDataTexture2DArray,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtDataTexture2DArrayModule {
}
NgtDataTexture2DArrayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture2DArrayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtDataTexture2DArrayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture2DArrayModule, declarations: [NgtDataTexture2DArray], exports: [NgtDataTexture2DArray] });
NgtDataTexture2DArrayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture2DArrayModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture2DArrayModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtDataTexture2DArray],
                    exports: [NgtDataTexture2DArray],
                }]
        }] });

// GENERATED
class NgtDataTexture3D extends NgtTexture {
    constructor() {
        super(...arguments);
        this.textureType = THREE.DataTexture3D;
    }
    set args(v) {
        this.textureArgs = v;
    }
}
NgtDataTexture3D.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture3D, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtDataTexture3D.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtDataTexture3D, selector: "ngt-data-texture3-d", inputs: { args: "args" }, providers: [
        {
            provide: NgtTexture,
            useExisting: NgtDataTexture3D,
        },
    ], exportAs: ["ngtDataTexture3D"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture3D, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-data-texture3-d',
                    exportAs: 'ngtDataTexture3D',
                    providers: [
                        {
                            provide: NgtTexture,
                            useExisting: NgtDataTexture3D,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtDataTexture3DModule {
}
NgtDataTexture3DModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture3DModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtDataTexture3DModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture3DModule, declarations: [NgtDataTexture3D], exports: [NgtDataTexture3D] });
NgtDataTexture3DModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture3DModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDataTexture3DModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtDataTexture3D],
                    exports: [NgtDataTexture3D],
                }]
        }] });

// GENERATED
class NgtDepthTexture extends NgtTexture {
    constructor() {
        super(...arguments);
        this.textureType = THREE.DepthTexture;
    }
    set args(v) {
        this.textureArgs = v;
    }
}
NgtDepthTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDepthTexture, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtDepthTexture.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtDepthTexture, selector: "ngt-depth-texture", inputs: { args: "args" }, providers: [
        {
            provide: NgtTexture,
            useExisting: NgtDepthTexture,
        },
    ], exportAs: ["ngtDepthTexture"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDepthTexture, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-depth-texture',
                    exportAs: 'ngtDepthTexture',
                    providers: [
                        {
                            provide: NgtTexture,
                            useExisting: NgtDepthTexture,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtDepthTextureModule {
}
NgtDepthTextureModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDepthTextureModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtDepthTextureModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDepthTextureModule, declarations: [NgtDepthTexture], exports: [NgtDepthTexture] });
NgtDepthTextureModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDepthTextureModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDepthTextureModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtDepthTexture],
                    exports: [NgtDepthTexture],
                }]
        }] });

// GENERATED
class NgtVideoTexture extends NgtTexture {
    constructor() {
        super(...arguments);
        this.textureType = THREE.VideoTexture;
    }
    set args(v) {
        this.textureArgs = v;
    }
}
NgtVideoTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtVideoTexture, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtVideoTexture.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtVideoTexture, selector: "ngt-video-texture", inputs: { args: "args" }, providers: [
        {
            provide: NgtTexture,
            useExisting: NgtVideoTexture,
        },
    ], exportAs: ["ngtVideoTexture"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtVideoTexture, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-video-texture',
                    exportAs: 'ngtVideoTexture',
                    providers: [
                        {
                            provide: NgtTexture,
                            useExisting: NgtVideoTexture,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtVideoTextureModule {
}
NgtVideoTextureModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtVideoTextureModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtVideoTextureModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtVideoTextureModule, declarations: [NgtVideoTexture], exports: [NgtVideoTexture] });
NgtVideoTextureModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtVideoTextureModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtVideoTextureModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtVideoTexture],
                    exports: [NgtVideoTexture],
                }]
        }] });

// GENERATED

/**
 * Generated bundle index. Do not edit.
 */

export { NgtCanvasTexture, NgtCanvasTextureModule, NgtCompressedTexture, NgtCompressedTextureModule, NgtCubeTexture, NgtCubeTextureModule, NgtDataTexture, NgtDataTexture2DArray, NgtDataTexture2DArrayModule, NgtDataTexture3D, NgtDataTexture3DModule, NgtDataTextureModule, NgtDepthTexture, NgtDepthTextureModule, NgtVideoTexture, NgtVideoTextureModule };
//# sourceMappingURL=angular-three-core-textures.mjs.map
