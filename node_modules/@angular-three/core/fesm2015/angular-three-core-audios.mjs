import * as i1 from '@angular-three/core';
import { NgtCommonAudio, NGT_AUDIO_CONTROLLER_PROVIDER, NGT_OBJECT_CONTROLLER_PROVIDER, NgtAudioControllerModule, NgtObject3dControllerModule, EnhancedRxState, applyProps } from '@angular-three/core';
import * as i0 from '@angular/core';
import { Directive, NgModule, EventEmitter, Input, Output } from '@angular/core';
import * as THREE from 'three';
import { __classPrivateFieldGet, __classPrivateFieldSet } from 'tslib';

// GENERATED
class NgtAudio extends NgtCommonAudio {
    constructor() {
        super(...arguments);
        this.audioType = THREE.Audio;
    }
}
NgtAudio.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudio, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtAudio.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtAudio, selector: "ngt-audio", providers: [
        {
            provide: NgtCommonAudio,
            useExisting: NgtAudio,
        },
        NGT_AUDIO_CONTROLLER_PROVIDER,
        NGT_OBJECT_CONTROLLER_PROVIDER,
    ], exportAs: ["ngtAudio"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudio, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-audio',
                    exportAs: 'ngtAudio',
                    providers: [
                        {
                            provide: NgtCommonAudio,
                            useExisting: NgtAudio,
                        },
                        NGT_AUDIO_CONTROLLER_PROVIDER,
                        NGT_OBJECT_CONTROLLER_PROVIDER,
                    ],
                }]
        }] });
class NgtAudioModule {
}
NgtAudioModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtAudioModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioModule, declarations: [NgtAudio], exports: [NgtAudio, NgtAudioControllerModule, NgtObject3dControllerModule] });
NgtAudioModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioModule, imports: [NgtAudioControllerModule, NgtObject3dControllerModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtAudio],
                    exports: [NgtAudio, NgtAudioControllerModule, NgtObject3dControllerModule],
                }]
        }] });

// GENERATED
class NgtPositionalAudio extends NgtCommonAudio {
    constructor() {
        super(...arguments);
        this.audioType = THREE.PositionalAudio;
    }
}
NgtPositionalAudio.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPositionalAudio, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtPositionalAudio.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtPositionalAudio, selector: "ngt-positional-audio", providers: [
        {
            provide: NgtCommonAudio,
            useExisting: NgtPositionalAudio,
        },
        NGT_AUDIO_CONTROLLER_PROVIDER,
        NGT_OBJECT_CONTROLLER_PROVIDER,
    ], exportAs: ["ngtPositionalAudio"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPositionalAudio, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-positional-audio',
                    exportAs: 'ngtPositionalAudio',
                    providers: [
                        {
                            provide: NgtCommonAudio,
                            useExisting: NgtPositionalAudio,
                        },
                        NGT_AUDIO_CONTROLLER_PROVIDER,
                        NGT_OBJECT_CONTROLLER_PROVIDER,
                    ],
                }]
        }] });
class NgtPositionalAudioModule {
}
NgtPositionalAudioModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPositionalAudioModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtPositionalAudioModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPositionalAudioModule, declarations: [NgtPositionalAudio], exports: [NgtPositionalAudio, NgtAudioControllerModule,
        NgtObject3dControllerModule] });
NgtPositionalAudioModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPositionalAudioModule, imports: [NgtAudioControllerModule,
        NgtObject3dControllerModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPositionalAudioModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtPositionalAudio],
                    exports: [
                        NgtPositionalAudio,
                        NgtAudioControllerModule,
                        NgtObject3dControllerModule,
                    ],
                }]
        }] });

var _NgtAudioListener_listener;
class NgtAudioListener extends EnhancedRxState {
    constructor(store) {
        super();
        this.store = store;
        this.ready = new EventEmitter();
        _NgtAudioListener_listener.set(this, void 0);
    }
    get listener() {
        return __classPrivateFieldGet(this, _NgtAudioListener_listener, "f");
    }
    ngOnInit() {
        __classPrivateFieldSet(this, _NgtAudioListener_listener, new THREE.AudioListener(), "f");
        const props = {
            filter: this.filter,
            timeDelta: this.timeDelta,
        };
        applyProps(this.listener, props);
        this.holdEffect(this.store.select('ready'), (ready) => {
            const camera = this.store.get('camera');
            if (ready && camera) {
                camera.add(this.listener);
                this.ready.emit(this.listener);
            }
            return () => {
                if (ready && camera) {
                    this.listener.clear();
                    camera.remove(this.listener);
                }
            };
        });
    }
}
_NgtAudioListener_listener = new WeakMap();
NgtAudioListener.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioListener, deps: [{ token: i1.NgtStore }], target: i0.ɵɵFactoryTarget.Directive });
NgtAudioListener.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtAudioListener, selector: "ngt-audio-listener", inputs: { filter: "filter", timeDelta: "timeDelta" }, outputs: { ready: "ready" }, exportAs: ["ngtAudioListener"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioListener, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-audio-listener',
                    exportAs: 'ngtAudioListener',
                }]
        }], ctorParameters: function () { return [{ type: i1.NgtStore }]; }, propDecorators: { filter: [{
                type: Input
            }], timeDelta: [{
                type: Input
            }], ready: [{
                type: Output
            }] } });
class NgtAudioListenerModule {
}
NgtAudioListenerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioListenerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtAudioListenerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioListenerModule, declarations: [NgtAudioListener], exports: [NgtAudioListener] });
NgtAudioListenerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioListenerModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioListenerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtAudioListener],
                    exports: [NgtAudioListener],
                }]
        }] });

// GENERATED

/**
 * Generated bundle index. Do not edit.
 */

export { NgtAudio, NgtAudioListener, NgtAudioListenerModule, NgtAudioModule, NgtPositionalAudio, NgtPositionalAudioModule };
//# sourceMappingURL=angular-three-core-audios.mjs.map
