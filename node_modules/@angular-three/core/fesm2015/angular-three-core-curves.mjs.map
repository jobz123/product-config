{"version":3,"file":"angular-three-core-curves.mjs","sources":["../../../../packages/core/curves/src/lib/catmull-rom-curve3/catmull-rom-curve3.directive.ts","../../../../packages/core/curves/src/lib/cubic-bezier-curve/cubic-bezier-curve.directive.ts","../../../../packages/core/curves/src/lib/cubic-bezier-curve3/cubic-bezier-curve3.directive.ts","../../../../packages/core/curves/src/lib/ellipse-curve/ellipse-curve.directive.ts","../../../../packages/core/curves/src/lib/line-curve/line-curve.directive.ts","../../../../packages/core/curves/src/lib/line-curve3/line-curve3.directive.ts","../../../../packages/core/curves/src/lib/quadratic-bezier-curve/quadratic-bezier-curve.directive.ts","../../../../packages/core/curves/src/lib/quadratic-bezier-curve3/quadratic-bezier-curve3.directive.ts","../../../../packages/core/curves/src/lib/spline-curve/spline-curve.directive.ts","../../../../packages/core/curves/src/index.ts","../../../../packages/core/curves/src/angular-three-core-curves.ts"],"sourcesContent":["// GENERATED\nimport { NgtCurve } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-catmull-rom-curve3',\n  exportAs: 'ngtCatmullRomCurve3',\n  providers: [\n    {\n      provide: NgtCurve,\n      useExisting: NgtCatmullRomCurve3,\n    },\n  ],\n})\nexport class NgtCatmullRomCurve3 extends NgtCurve<THREE.CatmullRomCurve3> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.CatmullRomCurve3>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.CatmullRomCurve3>) {\n    this.curveArgs = v;\n  }\n\n  curveType = THREE.CatmullRomCurve3;\n}\n\n@NgModule({\n  declarations: [NgtCatmullRomCurve3],\n  exports: [NgtCatmullRomCurve3],\n})\nexport class NgtCatmullRomCurve3Module {}\n","// GENERATED\nimport { NgtCurve } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-cubic-bezier-curve',\n  exportAs: 'ngtCubicBezierCurve',\n  providers: [\n    {\n      provide: NgtCurve,\n      useExisting: NgtCubicBezierCurve,\n    },\n  ],\n})\nexport class NgtCubicBezierCurve extends NgtCurve<THREE.CubicBezierCurve> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.CubicBezierCurve>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.CubicBezierCurve>) {\n    this.curveArgs = v;\n  }\n\n  curveType = THREE.CubicBezierCurve;\n}\n\n@NgModule({\n  declarations: [NgtCubicBezierCurve],\n  exports: [NgtCubicBezierCurve],\n})\nexport class NgtCubicBezierCurveModule {}\n","// GENERATED\nimport { NgtCurve } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-cubic-bezier-curve3',\n  exportAs: 'ngtCubicBezierCurve3',\n  providers: [\n    {\n      provide: NgtCurve,\n      useExisting: NgtCubicBezierCurve3,\n    },\n  ],\n})\nexport class NgtCubicBezierCurve3 extends NgtCurve<THREE.CubicBezierCurve3> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.CubicBezierCurve3>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.CubicBezierCurve3>) {\n    this.curveArgs = v;\n  }\n\n  curveType = THREE.CubicBezierCurve3;\n}\n\n@NgModule({\n  declarations: [NgtCubicBezierCurve3],\n  exports: [NgtCubicBezierCurve3],\n})\nexport class NgtCubicBezierCurve3Module {}\n","// GENERATED\nimport { NgtCurve } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-ellipse-curve',\n  exportAs: 'ngtEllipseCurve',\n  providers: [\n    {\n      provide: NgtCurve,\n      useExisting: NgtEllipseCurve,\n    },\n  ],\n})\nexport class NgtEllipseCurve extends NgtCurve<THREE.EllipseCurve> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.EllipseCurve>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.EllipseCurve>) {\n    this.curveArgs = v;\n  }\n\n  curveType = THREE.EllipseCurve;\n}\n\n@NgModule({\n  declarations: [NgtEllipseCurve],\n  exports: [NgtEllipseCurve],\n})\nexport class NgtEllipseCurveModule {}\n","// GENERATED\nimport { NgtCurve } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-line-curve',\n  exportAs: 'ngtLineCurve',\n  providers: [\n    {\n      provide: NgtCurve,\n      useExisting: NgtLineCurve,\n    },\n  ],\n})\nexport class NgtLineCurve extends NgtCurve<THREE.LineCurve> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.LineCurve>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.LineCurve>) {\n    this.curveArgs = v;\n  }\n\n  curveType = THREE.LineCurve;\n}\n\n@NgModule({\n  declarations: [NgtLineCurve],\n  exports: [NgtLineCurve],\n})\nexport class NgtLineCurveModule {}\n","// GENERATED\nimport { NgtCurve } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-line-curve3',\n  exportAs: 'ngtLineCurve3',\n  providers: [\n    {\n      provide: NgtCurve,\n      useExisting: NgtLineCurve3,\n    },\n  ],\n})\nexport class NgtLineCurve3 extends NgtCurve<THREE.LineCurve3> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.LineCurve3>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.LineCurve3>) {\n    this.curveArgs = v;\n  }\n\n  curveType = THREE.LineCurve3;\n}\n\n@NgModule({\n  declarations: [NgtLineCurve3],\n  exports: [NgtLineCurve3],\n})\nexport class NgtLineCurve3Module {}\n","// GENERATED\nimport { NgtCurve } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-quadratic-bezier-curve',\n  exportAs: 'ngtQuadraticBezierCurve',\n  providers: [\n    {\n      provide: NgtCurve,\n      useExisting: NgtQuadraticBezierCurve,\n    },\n  ],\n})\nexport class NgtQuadraticBezierCurve extends NgtCurve<THREE.QuadraticBezierCurve> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.QuadraticBezierCurve>\n    | undefined;\n\n  @Input() set args(\n    v: ConstructorParameters<typeof THREE.QuadraticBezierCurve>\n  ) {\n    this.curveArgs = v;\n  }\n\n  curveType = THREE.QuadraticBezierCurve;\n}\n\n@NgModule({\n  declarations: [NgtQuadraticBezierCurve],\n  exports: [NgtQuadraticBezierCurve],\n})\nexport class NgtQuadraticBezierCurveModule {}\n","// GENERATED\nimport { NgtCurve } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-quadratic-bezier-curve3',\n  exportAs: 'ngtQuadraticBezierCurve3',\n  providers: [\n    {\n      provide: NgtCurve,\n      useExisting: NgtQuadraticBezierCurve3,\n    },\n  ],\n})\nexport class NgtQuadraticBezierCurve3 extends NgtCurve<THREE.QuadraticBezierCurve3> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.QuadraticBezierCurve3>\n    | undefined;\n\n  @Input() set args(\n    v: ConstructorParameters<typeof THREE.QuadraticBezierCurve3>\n  ) {\n    this.curveArgs = v;\n  }\n\n  curveType = THREE.QuadraticBezierCurve3;\n}\n\n@NgModule({\n  declarations: [NgtQuadraticBezierCurve3],\n  exports: [NgtQuadraticBezierCurve3],\n})\nexport class NgtQuadraticBezierCurve3Module {}\n","// GENERATED\nimport { NgtCurve } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-spline-curve',\n  exportAs: 'ngtSplineCurve',\n  providers: [\n    {\n      provide: NgtCurve,\n      useExisting: NgtSplineCurve,\n    },\n  ],\n})\nexport class NgtSplineCurve extends NgtCurve<THREE.SplineCurve> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.SplineCurve>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.SplineCurve>) {\n    this.curveArgs = v;\n  }\n\n  curveType = THREE.SplineCurve;\n}\n\n@NgModule({\n  declarations: [NgtSplineCurve],\n  exports: [NgtSplineCurve],\n})\nexport class NgtSplineCurveModule {}\n","// GENERATED\nexport * from './lib/catmull-rom-curve3/catmull-rom-curve3.directive';\nexport * from './lib/cubic-bezier-curve/cubic-bezier-curve.directive';\nexport * from './lib/cubic-bezier-curve3/cubic-bezier-curve3.directive';\nexport * from './lib/ellipse-curve/ellipse-curve.directive';\nexport * from './lib/line-curve/line-curve.directive';\nexport * from './lib/line-curve3/line-curve3.directive';\nexport * from './lib/quadratic-bezier-curve/quadratic-bezier-curve.directive';\nexport * from './lib/quadratic-bezier-curve3/quadratic-bezier-curve3.directive';\nexport * from './lib/spline-curve/spline-curve.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}