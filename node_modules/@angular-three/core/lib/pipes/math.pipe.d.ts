import { PipeTransform } from '@angular/core';
import * as i0 from "@angular/core";
export declare class NgtMathPipe implements PipeTransform {
    transform(value: number | number[], keyOfMath: keyof Omit<Math, 'PI' | 'E' | 'LN2' | 'LOG2E' | 'LN10' | 'LOG10E' | 'SQRT1_2' | 'SQRT2' | 'random'>): ReturnType<Extract<Math[typeof keyOfMath], 'string'>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtMathPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<NgtMathPipe, "math">;
}
export declare class NgtMathConstantPipe implements PipeTransform {
    transform(value: number | 0, keyOfMathConst: 'PI' | 'E' | 'LN2' | 'LOG2E' | 'LN10' | 'LOG10E' | 'SQRT1_2' | 'SQRT2' | 'random'): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtMathConstantPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<NgtMathConstantPipe, "mathConst">;
}
export declare class NgtMathPipeModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtMathPipeModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgtMathPipeModule, [typeof NgtMathPipe, typeof NgtMathConstantPipe], never, [typeof NgtMathPipe, typeof NgtMathConstantPipe]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgtMathPipeModule>;
}
