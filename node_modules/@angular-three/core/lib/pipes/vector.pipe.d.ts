import { PipeTransform } from '@angular/core';
import * as THREE from 'three';
import { NgtVector2, NgtVector3, NgtVector4 } from '../types';
import * as i0 from "@angular/core";
export declare class NgtVector2Pipe implements PipeTransform {
    transform(value: NgtVector2): THREE.Vector2;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtVector2Pipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<NgtVector2Pipe, "vector2">;
}
export declare class NgtVector3Pipe implements PipeTransform {
    transform(value: NgtVector3): THREE.Vector3;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtVector3Pipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<NgtVector3Pipe, "vector3">;
}
export declare class NgtVector4Pipe implements PipeTransform {
    transform(value: NgtVector4): THREE.Vector4;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtVector4Pipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<NgtVector4Pipe, "vector4">;
}
export declare class NgtVectorPipeModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtVectorPipeModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgtVectorPipeModule, [typeof NgtVector2Pipe, typeof NgtVector3Pipe, typeof NgtVector4Pipe], never, [typeof NgtVector2Pipe, typeof NgtVector3Pipe, typeof NgtVector4Pipe]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgtVectorPipeModule>;
}
