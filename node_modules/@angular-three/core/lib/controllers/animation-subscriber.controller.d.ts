import { EventEmitter, NgZone, OnDestroy } from '@angular/core';
import * as THREE from 'three';
import { NgtAnimationFrameStore } from '../stores/animation-frame.store';
import { NgtRender } from '../types';
import { Controller } from './controller';
import * as i0 from "@angular/core";
export declare class NgtAnimationSubscriberController extends Controller implements OnDestroy {
    #private;
    private animationFrameStore;
    priority: number;
    animateReady: EventEmitter<NgtRender>;
    constructor(animationFrameStore: NgtAnimationFrameStore, ngZone: NgZone);
    prepare(obj: THREE.Object3D): void;
    ngOnDestroy(): void;
    get controller(): Controller | undefined;
    get props(): string[];
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtAnimationSubscriberController, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgtAnimationSubscriberController, "[animateReady]", ["ngtAnimationSubscriberController"], { "priority": "priority"; }, { "animateReady": "animateReady"; }, never>;
}
export declare class NgtAnimationSubscriberControllerModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtAnimationSubscriberControllerModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgtAnimationSubscriberControllerModule, [typeof NgtAnimationSubscriberController], never, [typeof NgtAnimationSubscriberController]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgtAnimationSubscriberControllerModule>;
}
export declare const NGT_ANIMATION_SUBSCRIBER_WATCHED_CONTROLLER: import("@angular/core").InjectionToken<NgtAnimationSubscriberController>, NGT_ANIMATION_SUBSCRIBER_CONTROLLER_PROVIDER: import("@angular/core").Provider[];
