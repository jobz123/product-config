import { Controller } from './controller';
import * as i0 from "@angular/core";
export declare class NgtAudioController extends Controller {
    autoplay?: boolean;
    buffer: null | AudioBuffer;
    detune: number;
    loop: boolean;
    loopStart: number;
    loopEnd: number;
    offset: number;
    duration: number | undefined;
    playbackRate: number;
    isPlaying: boolean;
    hasPlaybackControl: boolean;
    sourceType: string;
    source: null | AudioBufferSourceNode;
    filters: AudioNode[];
    audioController?: NgtAudioController;
    get props(): string[];
    get controller(): Controller | undefined;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtAudioController, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgtAudioController, "    ngt-audio,    ngt-positional-audio,    ngt-soba-positional-audio,  ", ["ngtAudioController"], { "autoplay": "autoplay"; "buffer": "buffer"; "detune": "detune"; "loop": "loop"; "loopStart": "loopStart"; "loopEnd": "loopEnd"; "offset": "offset"; "duration": "duration"; "playbackRate": "playbackRate"; "isPlaying": "isPlaying"; "hasPlaybackControl": "hasPlaybackControl"; "sourceType": "sourceType"; "source": "source"; "filters": "filters"; "audioController": "audioController"; }, {}, never>;
}
export declare class NgtAudioControllerModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtAudioControllerModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgtAudioControllerModule, [typeof NgtAudioController], never, [typeof NgtAudioController]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgtAudioControllerModule>;
}
export declare const NGT_AUDIO_WATCHED_CONTROLLER: import("@angular/core").InjectionToken<NgtAudioController>, NGT_AUDIO_CONTROLLER_PROVIDER: import("@angular/core").Provider[];
