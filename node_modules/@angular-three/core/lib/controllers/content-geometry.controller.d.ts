import { NgZone } from '@angular/core';
import * as THREE from 'three';
import { Controller } from './controller';
import * as i0 from "@angular/core";
export declare class NgtContentGeometryController extends Controller {
    #private;
    set geometry(v: THREE.BufferGeometry | undefined);
    contentGeometryController?: NgtContentGeometryController;
    get geometry(): THREE.BufferGeometry | undefined;
    constructor(ngZone: NgZone);
    construct(): void;
    get controller(): Controller | undefined;
    get props(): string[];
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtContentGeometryController, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgtContentGeometryController, "    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-points  ", ["ngtContentGeometryController"], { "geometry": "geometry"; "contentGeometryController": "contentGeometryController"; }, {}, never>;
}
export declare class NgtContentGeometryControllerModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtContentGeometryControllerModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgtContentGeometryControllerModule, [typeof NgtContentGeometryController], never, [typeof NgtContentGeometryController]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgtContentGeometryControllerModule>;
}
export declare const NGT_CONTENT_GEOMETRY_WATCHED_CONTROLLER: import("@angular/core").InjectionToken<NgtContentGeometryController>, NGT_CONTENT_GEOMETRY_CONTROLLER_PROVIDER: import("@angular/core").Provider[];
