import { EventEmitter, NgZone, OnInit } from '@angular/core';
import * as THREE from 'three';
import { NgtObject3dController } from '../controllers/object-3d.controller';
import { AnyConstructor } from '../types';
import * as i0 from "@angular/core";
export declare abstract class NgtCommonAudio<TAudioNode extends AudioNode = GainNode, TAudio extends THREE.Audio<TAudioNode> = THREE.Audio<TAudioNode>> implements OnInit {
    #private;
    protected objectController: NgtObject3dController;
    protected ngZone: NgZone;
    listener: THREE.AudioListener;
    ready: EventEmitter<TAudio>;
    protected set audioArgs(v: unknown | unknown[]);
    constructor(objectController: NgtObject3dController, ngZone: NgZone);
    abstract audioType: AnyConstructor<TAudio>;
    ngOnInit(): void;
    get audio(): TAudio;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtCommonAudio<any, any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgtCommonAudio<any, any>, never, never, { "listener": "listener"; }, { "ready": "ready"; }, never>;
}
