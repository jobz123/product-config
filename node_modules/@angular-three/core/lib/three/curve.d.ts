import { NgZone, OnInit } from '@angular/core';
import * as THREE from 'three';
import type { AnyConstructor } from '../types';
import { NgtGeometry } from './geometry';
import * as i0 from "@angular/core";
export declare abstract class NgtCurve<TCurve extends THREE.Curve<THREE.Vector> = THREE.Curve<THREE.Vector>> implements OnInit {
    #private;
    protected ngZone: NgZone;
    protected geometryDirective: NgtGeometry | null;
    divisions?: number;
    abstract curveType: AnyConstructor<TCurve>;
    protected set curveArgs(v: unknown | unknown[]);
    constructor(ngZone: NgZone, geometryDirective: NgtGeometry | null);
    ngOnInit(): void;
    get curve(): TCurve | undefined;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtCurve<any>, [null, { optional: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgtCurve<any>, never, never, { "divisions": "divisions"; }, {}, never>;
}
