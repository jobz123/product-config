import { EventEmitter, NgZone, OnInit } from '@angular/core';
import * as THREE from 'three';
import { NgtObject3dController } from '../controllers/object-3d.controller';
import { AnyConstructor } from '../types';
import * as i0 from "@angular/core";
export declare abstract class NgtCommonCamera<TCamera extends THREE.Camera = THREE.Camera> implements OnInit {
    #private;
    protected objectController: NgtObject3dController;
    protected ngZone: NgZone;
    ready: EventEmitter<TCamera>;
    abstract cameraType: AnyConstructor<TCamera>;
    constructor(objectController: NgtObject3dController, ngZone: NgZone);
    protected set cameraArgs(v: unknown | unknown[]);
    ngOnInit(): void;
    get camera(): TCamera;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtCommonCamera<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgtCommonCamera<any>, never, never, {}, { "ready": "ready"; }, never>;
}
