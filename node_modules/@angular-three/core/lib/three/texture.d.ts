import { EventEmitter, NgZone, OnDestroy, OnInit } from '@angular/core';
import * as THREE from 'three';
import type { AnyConstructor } from '../types';
import * as i0 from "@angular/core";
export declare abstract class NgtTexture<TTexture extends THREE.Texture = THREE.Texture> implements OnInit, OnDestroy {
    #private;
    protected ngZone: NgZone;
    ready: EventEmitter<TTexture>;
    abstract textureType: AnyConstructor<TTexture>;
    constructor(ngZone: NgZone);
    protected set textureArgs(v: unknown | unknown[]);
    ngOnInit(): void;
    get texture(): TTexture | undefined;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtTexture<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgtTexture<any>, never, never, {}, { "ready": "ready"; }, never>;
}
