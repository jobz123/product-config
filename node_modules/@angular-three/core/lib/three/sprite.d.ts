import { EventEmitter, NgZone, OnInit } from '@angular/core';
import * as THREE from 'three';
import { NgtObject3dController } from '../controllers/object-3d.controller';
import type { AnyConstructor } from '../types';
import { NgtMaterial } from './material';
import * as i0 from "@angular/core";
export declare abstract class NgtCommonSprite<TSprite extends THREE.Sprite = THREE.Sprite> implements OnInit {
    #private;
    protected objectController: NgtObject3dController;
    protected ngZone: NgZone;
    material?: THREE.SpriteMaterial;
    ready: EventEmitter<TSprite>;
    materialDirective?: NgtMaterial;
    abstract spriteType: AnyConstructor<TSprite>;
    constructor(objectController: NgtObject3dController, ngZone: NgZone);
    ngOnInit(): void;
    get sprite(): TSprite;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtCommonSprite<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgtCommonSprite<any>, never, never, { "material": "material"; }, { "ready": "ready"; }, ["materialDirective"]>;
}
