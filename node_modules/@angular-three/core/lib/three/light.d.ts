import { EventEmitter, NgZone, OnInit } from '@angular/core';
import * as THREE from 'three';
import { NgtObject3dController } from '../controllers/object-3d.controller';
import type { AnyConstructor } from '../types';
import * as i0 from "@angular/core";
export declare abstract class NgtLight<TLight extends THREE.Light = THREE.Light> implements OnInit {
    #private;
    protected objectController: NgtObject3dController;
    protected ngZone: NgZone;
    ready: EventEmitter<TLight>;
    abstract lightType: AnyConstructor<TLight>;
    intensity?: number;
    shadow?: Partial<THREE.LightShadow>;
    constructor(objectController: NgtObject3dController, ngZone: NgZone);
    protected set lightArgs(v: unknown | unknown[]);
    ngOnInit(): void;
    get light(): TLight;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtLight<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgtLight<any>, never, never, { "intensity": "intensity"; "shadow": "shadow"; }, { "ready": "ready"; }, never>;
}
