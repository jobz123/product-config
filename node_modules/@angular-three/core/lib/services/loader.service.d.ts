import { OnDestroy } from '@angular/core';
import { Observable } from 'rxjs';
import type { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import type { BranchingReturn, LoaderExtensions, NgtLoaderResult, NgtObjectMap } from '../types';
import * as i0 from "@angular/core";
export declare class NgtLoaderService implements OnDestroy {
    private readonly cached;
    use<TReturnType, TUrl extends string | string[]>(loaderConstructor: new () => NgtLoaderResult<TReturnType>, input: TUrl, extensions?: LoaderExtensions, onProgress?: (event: ProgressEvent) => void): TUrl extends any[] ? Observable<BranchingReturn<TReturnType, GLTF, GLTF & NgtObjectMap>[]> : Observable<BranchingReturn<TReturnType, GLTF, GLTF & NgtObjectMap>>;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtLoaderService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NgtLoaderService>;
}
