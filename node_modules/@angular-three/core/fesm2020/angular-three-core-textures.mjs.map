{"version":3,"file":"angular-three-core-textures.mjs","sources":["../../../../packages/core/textures/src/lib/canvas-texture/canvas-texture.directive.ts","../../../../packages/core/textures/src/lib/compressed-texture/compressed-texture.directive.ts","../../../../packages/core/textures/src/lib/cube-texture/cube-texture.directive.ts","../../../../packages/core/textures/src/lib/data-texture/data-texture.directive.ts","../../../../packages/core/textures/src/lib/data-texture2-darray/data-texture2-darray.directive.ts","../../../../packages/core/textures/src/lib/data-texture3-d/data-texture3-d.directive.ts","../../../../packages/core/textures/src/lib/depth-texture/depth-texture.directive.ts","../../../../packages/core/textures/src/lib/video-texture/video-texture.directive.ts","../../../../packages/core/textures/src/index.ts","../../../../packages/core/textures/src/angular-three-core-textures.ts"],"sourcesContent":["// GENERATED\nimport { NgtTexture } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-canvas-texture',\n  exportAs: 'ngtCanvasTexture',\n  providers: [\n    {\n      provide: NgtTexture,\n      useExisting: NgtCanvasTexture,\n    },\n  ],\n})\nexport class NgtCanvasTexture extends NgtTexture<THREE.CanvasTexture> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.CanvasTexture>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.CanvasTexture>) {\n    this.textureArgs = v;\n  }\n\n  textureType = THREE.CanvasTexture;\n}\n\n@NgModule({\n  declarations: [NgtCanvasTexture],\n  exports: [NgtCanvasTexture],\n})\nexport class NgtCanvasTextureModule {}\n","// GENERATED\nimport { NgtTexture } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-compressed-texture',\n  exportAs: 'ngtCompressedTexture',\n  providers: [\n    {\n      provide: NgtTexture,\n      useExisting: NgtCompressedTexture,\n    },\n  ],\n})\nexport class NgtCompressedTexture extends NgtTexture<THREE.CompressedTexture> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.CompressedTexture>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.CompressedTexture>) {\n    this.textureArgs = v;\n  }\n\n  textureType = THREE.CompressedTexture;\n}\n\n@NgModule({\n  declarations: [NgtCompressedTexture],\n  exports: [NgtCompressedTexture],\n})\nexport class NgtCompressedTextureModule {}\n","// GENERATED\nimport { NgtTexture } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-cube-texture',\n  exportAs: 'ngtCubeTexture',\n  providers: [\n    {\n      provide: NgtTexture,\n      useExisting: NgtCubeTexture,\n    },\n  ],\n})\nexport class NgtCubeTexture extends NgtTexture<THREE.CubeTexture> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.CubeTexture>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.CubeTexture>) {\n    this.textureArgs = v;\n  }\n\n  textureType = THREE.CubeTexture;\n}\n\n@NgModule({\n  declarations: [NgtCubeTexture],\n  exports: [NgtCubeTexture],\n})\nexport class NgtCubeTextureModule {}\n","// GENERATED\nimport { NgtTexture } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-data-texture',\n  exportAs: 'ngtDataTexture',\n  providers: [\n    {\n      provide: NgtTexture,\n      useExisting: NgtDataTexture,\n    },\n  ],\n})\nexport class NgtDataTexture extends NgtTexture<THREE.DataTexture> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.DataTexture>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.DataTexture>) {\n    this.textureArgs = v;\n  }\n\n  textureType = THREE.DataTexture;\n}\n\n@NgModule({\n  declarations: [NgtDataTexture],\n  exports: [NgtDataTexture],\n})\nexport class NgtDataTextureModule {}\n","// GENERATED\nimport { NgtTexture } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-data-texture2-darray',\n  exportAs: 'ngtDataTexture2DArray',\n  providers: [\n    {\n      provide: NgtTexture,\n      useExisting: NgtDataTexture2DArray,\n    },\n  ],\n})\nexport class NgtDataTexture2DArray extends NgtTexture<THREE.DataTexture2DArray> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.DataTexture2DArray>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.DataTexture2DArray>) {\n    this.textureArgs = v;\n  }\n\n  textureType = THREE.DataTexture2DArray;\n}\n\n@NgModule({\n  declarations: [NgtDataTexture2DArray],\n  exports: [NgtDataTexture2DArray],\n})\nexport class NgtDataTexture2DArrayModule {}\n","// GENERATED\nimport { NgtTexture } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-data-texture3-d',\n  exportAs: 'ngtDataTexture3D',\n  providers: [\n    {\n      provide: NgtTexture,\n      useExisting: NgtDataTexture3D,\n    },\n  ],\n})\nexport class NgtDataTexture3D extends NgtTexture<THREE.DataTexture3D> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.DataTexture3D>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.DataTexture3D>) {\n    this.textureArgs = v;\n  }\n\n  textureType = THREE.DataTexture3D;\n}\n\n@NgModule({\n  declarations: [NgtDataTexture3D],\n  exports: [NgtDataTexture3D],\n})\nexport class NgtDataTexture3DModule {}\n","// GENERATED\nimport { NgtTexture } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-depth-texture',\n  exportAs: 'ngtDepthTexture',\n  providers: [\n    {\n      provide: NgtTexture,\n      useExisting: NgtDepthTexture,\n    },\n  ],\n})\nexport class NgtDepthTexture extends NgtTexture<THREE.DepthTexture> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.DepthTexture>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.DepthTexture>) {\n    this.textureArgs = v;\n  }\n\n  textureType = THREE.DepthTexture;\n}\n\n@NgModule({\n  declarations: [NgtDepthTexture],\n  exports: [NgtDepthTexture],\n})\nexport class NgtDepthTextureModule {}\n","// GENERATED\nimport { NgtTexture } from '@angular-three/core';\nimport { NgModule, Directive, Input } from '@angular/core';\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'ngt-video-texture',\n  exportAs: 'ngtVideoTexture',\n  providers: [\n    {\n      provide: NgtTexture,\n      useExisting: NgtVideoTexture,\n    },\n  ],\n})\nexport class NgtVideoTexture extends NgtTexture<THREE.VideoTexture> {\n  static ngAcceptInputType_args:\n    | ConstructorParameters<typeof THREE.VideoTexture>\n    | undefined;\n\n  @Input() set args(v: ConstructorParameters<typeof THREE.VideoTexture>) {\n    this.textureArgs = v;\n  }\n\n  textureType = THREE.VideoTexture;\n}\n\n@NgModule({\n  declarations: [NgtVideoTexture],\n  exports: [NgtVideoTexture],\n})\nexport class NgtVideoTextureModule {}\n","// GENERATED\nexport * from './lib/canvas-texture/canvas-texture.directive';\nexport * from './lib/compressed-texture/compressed-texture.directive';\nexport * from './lib/cube-texture/cube-texture.directive';\nexport * from './lib/data-texture/data-texture.directive';\nexport * from './lib/data-texture2-darray/data-texture2-darray.directive';\nexport * from './lib/data-texture3-d/data-texture3-d.directive';\nexport * from './lib/depth-texture/depth-texture.directive';\nexport * from './lib/video-texture/video-texture.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}