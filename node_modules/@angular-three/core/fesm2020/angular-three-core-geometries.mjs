import { NgtGeometry, NGT_OBJECT_3D_PROVIDER } from '@angular-three/core';
import * as i0 from '@angular/core';
import { Directive, Input, NgModule } from '@angular/core';
import * as THREE from 'three';

// GENERATED
class NgtBufferGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.BufferGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtBufferGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtBufferGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtBufferGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtBufferGeometry, selector: "ngt-buffer-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtBufferGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtBufferGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-buffer-geometry',
                    exportAs: 'ngtBufferGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtBufferGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtBufferGeometryModule {
}
NgtBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtBufferGeometryModule, declarations: [NgtBufferGeometry], exports: [NgtBufferGeometry] });
NgtBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtBufferGeometry],
                    exports: [NgtBufferGeometry],
                }]
        }] });

// GENERATED
class NgtInstancedBufferGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.InstancedBufferGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtInstancedBufferGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtInstancedBufferGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtInstancedBufferGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtInstancedBufferGeometry, selector: "ngt-instanced-buffer-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtInstancedBufferGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtInstancedBufferGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtInstancedBufferGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-instanced-buffer-geometry',
                    exportAs: 'ngtInstancedBufferGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtInstancedBufferGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtInstancedBufferGeometryModule {
}
NgtInstancedBufferGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtInstancedBufferGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtInstancedBufferGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtInstancedBufferGeometryModule, declarations: [NgtInstancedBufferGeometry], exports: [NgtInstancedBufferGeometry] });
NgtInstancedBufferGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtInstancedBufferGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtInstancedBufferGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtInstancedBufferGeometry],
                    exports: [NgtInstancedBufferGeometry],
                }]
        }] });

// GENERATED
class NgtBoxGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.BoxGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtBoxGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtBoxGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtBoxGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtBoxGeometry, selector: "ngt-box-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtBoxGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtBoxGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtBoxGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-box-geometry',
                    exportAs: 'ngtBoxGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtBoxGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtBoxGeometryModule {
}
NgtBoxGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtBoxGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtBoxGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtBoxGeometryModule, declarations: [NgtBoxGeometry], exports: [NgtBoxGeometry] });
NgtBoxGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtBoxGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtBoxGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtBoxGeometry],
                    exports: [NgtBoxGeometry],
                }]
        }] });

// GENERATED
class NgtCircleGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.CircleGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtCircleGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCircleGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtCircleGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtCircleGeometry, selector: "ngt-circle-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtCircleGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtCircleGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCircleGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-circle-geometry',
                    exportAs: 'ngtCircleGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtCircleGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtCircleGeometryModule {
}
NgtCircleGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCircleGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtCircleGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCircleGeometryModule, declarations: [NgtCircleGeometry], exports: [NgtCircleGeometry] });
NgtCircleGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCircleGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCircleGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtCircleGeometry],
                    exports: [NgtCircleGeometry],
                }]
        }] });

// GENERATED
class NgtConeGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.ConeGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtConeGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtConeGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtConeGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtConeGeometry, selector: "ngt-cone-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtConeGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtConeGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtConeGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-cone-geometry',
                    exportAs: 'ngtConeGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtConeGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtConeGeometryModule {
}
NgtConeGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtConeGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtConeGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtConeGeometryModule, declarations: [NgtConeGeometry], exports: [NgtConeGeometry] });
NgtConeGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtConeGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtConeGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtConeGeometry],
                    exports: [NgtConeGeometry],
                }]
        }] });

// GENERATED
class NgtCylinderGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.CylinderGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtCylinderGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCylinderGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtCylinderGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtCylinderGeometry, selector: "ngt-cylinder-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtCylinderGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtCylinderGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCylinderGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-cylinder-geometry',
                    exportAs: 'ngtCylinderGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtCylinderGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtCylinderGeometryModule {
}
NgtCylinderGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCylinderGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtCylinderGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCylinderGeometryModule, declarations: [NgtCylinderGeometry], exports: [NgtCylinderGeometry] });
NgtCylinderGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCylinderGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCylinderGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtCylinderGeometry],
                    exports: [NgtCylinderGeometry],
                }]
        }] });

// GENERATED
class NgtDodecahedronGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.DodecahedronGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtDodecahedronGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDodecahedronGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtDodecahedronGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtDodecahedronGeometry, selector: "ngt-dodecahedron-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtDodecahedronGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtDodecahedronGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDodecahedronGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-dodecahedron-geometry',
                    exportAs: 'ngtDodecahedronGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtDodecahedronGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtDodecahedronGeometryModule {
}
NgtDodecahedronGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDodecahedronGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtDodecahedronGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDodecahedronGeometryModule, declarations: [NgtDodecahedronGeometry], exports: [NgtDodecahedronGeometry] });
NgtDodecahedronGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDodecahedronGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtDodecahedronGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtDodecahedronGeometry],
                    exports: [NgtDodecahedronGeometry],
                }]
        }] });

// GENERATED
class NgtExtrudeGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.ExtrudeGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtExtrudeGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtExtrudeGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtExtrudeGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtExtrudeGeometry, selector: "ngt-extrude-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtExtrudeGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtExtrudeGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtExtrudeGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-extrude-geometry',
                    exportAs: 'ngtExtrudeGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtExtrudeGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtExtrudeGeometryModule {
}
NgtExtrudeGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtExtrudeGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtExtrudeGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtExtrudeGeometryModule, declarations: [NgtExtrudeGeometry], exports: [NgtExtrudeGeometry] });
NgtExtrudeGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtExtrudeGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtExtrudeGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtExtrudeGeometry],
                    exports: [NgtExtrudeGeometry],
                }]
        }] });

// GENERATED
class NgtIcosahedronGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.IcosahedronGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtIcosahedronGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtIcosahedronGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtIcosahedronGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtIcosahedronGeometry, selector: "ngt-icosahedron-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtIcosahedronGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtIcosahedronGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtIcosahedronGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-icosahedron-geometry',
                    exportAs: 'ngtIcosahedronGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtIcosahedronGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtIcosahedronGeometryModule {
}
NgtIcosahedronGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtIcosahedronGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtIcosahedronGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtIcosahedronGeometryModule, declarations: [NgtIcosahedronGeometry], exports: [NgtIcosahedronGeometry] });
NgtIcosahedronGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtIcosahedronGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtIcosahedronGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtIcosahedronGeometry],
                    exports: [NgtIcosahedronGeometry],
                }]
        }] });

// GENERATED
class NgtLatheGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.LatheGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtLatheGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtLatheGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtLatheGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtLatheGeometry, selector: "ngt-lathe-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtLatheGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtLatheGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtLatheGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-lathe-geometry',
                    exportAs: 'ngtLatheGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtLatheGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtLatheGeometryModule {
}
NgtLatheGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtLatheGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtLatheGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtLatheGeometryModule, declarations: [NgtLatheGeometry], exports: [NgtLatheGeometry] });
NgtLatheGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtLatheGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtLatheGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtLatheGeometry],
                    exports: [NgtLatheGeometry],
                }]
        }] });

// GENERATED
class NgtOctahedronGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.OctahedronGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtOctahedronGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtOctahedronGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtOctahedronGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtOctahedronGeometry, selector: "ngt-octahedron-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtOctahedronGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtOctahedronGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtOctahedronGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-octahedron-geometry',
                    exportAs: 'ngtOctahedronGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtOctahedronGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtOctahedronGeometryModule {
}
NgtOctahedronGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtOctahedronGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtOctahedronGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtOctahedronGeometryModule, declarations: [NgtOctahedronGeometry], exports: [NgtOctahedronGeometry] });
NgtOctahedronGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtOctahedronGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtOctahedronGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtOctahedronGeometry],
                    exports: [NgtOctahedronGeometry],
                }]
        }] });

// GENERATED
class NgtPlaneGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.PlaneGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtPlaneGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPlaneGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtPlaneGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtPlaneGeometry, selector: "ngt-plane-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtPlaneGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtPlaneGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPlaneGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-plane-geometry',
                    exportAs: 'ngtPlaneGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtPlaneGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtPlaneGeometryModule {
}
NgtPlaneGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPlaneGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtPlaneGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPlaneGeometryModule, declarations: [NgtPlaneGeometry], exports: [NgtPlaneGeometry] });
NgtPlaneGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPlaneGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPlaneGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtPlaneGeometry],
                    exports: [NgtPlaneGeometry],
                }]
        }] });

// GENERATED
class NgtPolyhedronGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.PolyhedronGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtPolyhedronGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPolyhedronGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtPolyhedronGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtPolyhedronGeometry, selector: "ngt-polyhedron-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtPolyhedronGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtPolyhedronGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPolyhedronGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-polyhedron-geometry',
                    exportAs: 'ngtPolyhedronGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtPolyhedronGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtPolyhedronGeometryModule {
}
NgtPolyhedronGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPolyhedronGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtPolyhedronGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPolyhedronGeometryModule, declarations: [NgtPolyhedronGeometry], exports: [NgtPolyhedronGeometry] });
NgtPolyhedronGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPolyhedronGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtPolyhedronGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtPolyhedronGeometry],
                    exports: [NgtPolyhedronGeometry],
                }]
        }] });

// GENERATED
class NgtRingGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.RingGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtRingGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtRingGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtRingGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtRingGeometry, selector: "ngt-ring-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtRingGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtRingGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtRingGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-ring-geometry',
                    exportAs: 'ngtRingGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtRingGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtRingGeometryModule {
}
NgtRingGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtRingGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtRingGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtRingGeometryModule, declarations: [NgtRingGeometry], exports: [NgtRingGeometry] });
NgtRingGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtRingGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtRingGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtRingGeometry],
                    exports: [NgtRingGeometry],
                }]
        }] });

// GENERATED
class NgtShapeGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.ShapeGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtShapeGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtShapeGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtShapeGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtShapeGeometry, selector: "ngt-shape-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtShapeGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtShapeGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtShapeGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-shape-geometry',
                    exportAs: 'ngtShapeGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtShapeGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtShapeGeometryModule {
}
NgtShapeGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtShapeGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtShapeGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtShapeGeometryModule, declarations: [NgtShapeGeometry], exports: [NgtShapeGeometry] });
NgtShapeGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtShapeGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtShapeGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtShapeGeometry],
                    exports: [NgtShapeGeometry],
                }]
        }] });

// GENERATED
class NgtSphereGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.SphereGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtSphereGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSphereGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtSphereGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtSphereGeometry, selector: "ngt-sphere-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtSphereGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtSphereGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSphereGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-sphere-geometry',
                    exportAs: 'ngtSphereGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtSphereGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtSphereGeometryModule {
}
NgtSphereGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSphereGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtSphereGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSphereGeometryModule, declarations: [NgtSphereGeometry], exports: [NgtSphereGeometry] });
NgtSphereGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSphereGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSphereGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtSphereGeometry],
                    exports: [NgtSphereGeometry],
                }]
        }] });

// GENERATED
class NgtTetrahedronGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.TetrahedronGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtTetrahedronGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTetrahedronGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtTetrahedronGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtTetrahedronGeometry, selector: "ngt-tetrahedron-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtTetrahedronGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtTetrahedronGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTetrahedronGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-tetrahedron-geometry',
                    exportAs: 'ngtTetrahedronGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtTetrahedronGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtTetrahedronGeometryModule {
}
NgtTetrahedronGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTetrahedronGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtTetrahedronGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTetrahedronGeometryModule, declarations: [NgtTetrahedronGeometry], exports: [NgtTetrahedronGeometry] });
NgtTetrahedronGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTetrahedronGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTetrahedronGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtTetrahedronGeometry],
                    exports: [NgtTetrahedronGeometry],
                }]
        }] });

// GENERATED
class NgtTorusGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.TorusGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtTorusGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTorusGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtTorusGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtTorusGeometry, selector: "ngt-torus-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtTorusGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtTorusGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTorusGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-torus-geometry',
                    exportAs: 'ngtTorusGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtTorusGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtTorusGeometryModule {
}
NgtTorusGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTorusGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtTorusGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTorusGeometryModule, declarations: [NgtTorusGeometry], exports: [NgtTorusGeometry] });
NgtTorusGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTorusGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTorusGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtTorusGeometry],
                    exports: [NgtTorusGeometry],
                }]
        }] });

// GENERATED
class NgtTorusKnotGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.TorusKnotGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtTorusKnotGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTorusKnotGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtTorusKnotGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtTorusKnotGeometry, selector: "ngt-torus-knot-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtTorusKnotGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtTorusKnotGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTorusKnotGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-torus-knot-geometry',
                    exportAs: 'ngtTorusKnotGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtTorusKnotGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtTorusKnotGeometryModule {
}
NgtTorusKnotGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTorusKnotGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtTorusKnotGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTorusKnotGeometryModule, declarations: [NgtTorusKnotGeometry], exports: [NgtTorusKnotGeometry] });
NgtTorusKnotGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTorusKnotGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTorusKnotGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtTorusKnotGeometry],
                    exports: [NgtTorusKnotGeometry],
                }]
        }] });

// GENERATED
class NgtTubeGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.TubeGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtTubeGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTubeGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtTubeGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtTubeGeometry, selector: "ngt-tube-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtTubeGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtTubeGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTubeGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-tube-geometry',
                    exportAs: 'ngtTubeGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtTubeGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtTubeGeometryModule {
}
NgtTubeGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTubeGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtTubeGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTubeGeometryModule, declarations: [NgtTubeGeometry], exports: [NgtTubeGeometry] });
NgtTubeGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTubeGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTubeGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtTubeGeometry],
                    exports: [NgtTubeGeometry],
                }]
        }] });

// GENERATED
class NgtWireframeGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.WireframeGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtWireframeGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtWireframeGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtWireframeGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtWireframeGeometry, selector: "ngt-wireframe-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtWireframeGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtWireframeGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtWireframeGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-wireframe-geometry',
                    exportAs: 'ngtWireframeGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtWireframeGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtWireframeGeometryModule {
}
NgtWireframeGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtWireframeGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtWireframeGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtWireframeGeometryModule, declarations: [NgtWireframeGeometry], exports: [NgtWireframeGeometry] });
NgtWireframeGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtWireframeGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtWireframeGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtWireframeGeometry],
                    exports: [NgtWireframeGeometry],
                }]
        }] });

// GENERATED
class NgtEdgesGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.EdgesGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtEdgesGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtEdgesGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtEdgesGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtEdgesGeometry, selector: "ngt-edges-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtEdgesGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtEdgesGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtEdgesGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-edges-geometry',
                    exportAs: 'ngtEdgesGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtEdgesGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
class NgtEdgesGeometryModule {
}
NgtEdgesGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtEdgesGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtEdgesGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtEdgesGeometryModule, declarations: [NgtEdgesGeometry], exports: [NgtEdgesGeometry] });
NgtEdgesGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtEdgesGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtEdgesGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtEdgesGeometry],
                    exports: [NgtEdgesGeometry],
                }]
        }] });

// GENERATED

/**
 * Generated bundle index. Do not edit.
 */

export { NgtBoxGeometry, NgtBoxGeometryModule, NgtBufferGeometry, NgtBufferGeometryModule, NgtCircleGeometry, NgtCircleGeometryModule, NgtConeGeometry, NgtConeGeometryModule, NgtCylinderGeometry, NgtCylinderGeometryModule, NgtDodecahedronGeometry, NgtDodecahedronGeometryModule, NgtEdgesGeometry, NgtEdgesGeometryModule, NgtExtrudeGeometry, NgtExtrudeGeometryModule, NgtIcosahedronGeometry, NgtIcosahedronGeometryModule, NgtInstancedBufferGeometry, NgtInstancedBufferGeometryModule, NgtLatheGeometry, NgtLatheGeometryModule, NgtOctahedronGeometry, NgtOctahedronGeometryModule, NgtPlaneGeometry, NgtPlaneGeometryModule, NgtPolyhedronGeometry, NgtPolyhedronGeometryModule, NgtRingGeometry, NgtRingGeometryModule, NgtShapeGeometry, NgtShapeGeometryModule, NgtSphereGeometry, NgtSphereGeometryModule, NgtTetrahedronGeometry, NgtTetrahedronGeometryModule, NgtTorusGeometry, NgtTorusGeometryModule, NgtTorusKnotGeometry, NgtTorusKnotGeometryModule, NgtTubeGeometry, NgtTubeGeometryModule, NgtWireframeGeometry, NgtWireframeGeometryModule };
//# sourceMappingURL=angular-three-core-geometries.mjs.map
