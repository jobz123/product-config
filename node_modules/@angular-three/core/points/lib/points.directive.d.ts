import { NgtMaterialGeometryController } from '@angular-three/core';
import { EventEmitter } from '@angular/core';
import * as THREE from 'three';
import * as i0 from "@angular/core";
import * as i1 from "@angular-three/core";
export declare class NgtPoints {
    private materialGeometryController;
    ready: EventEmitter<THREE.Points<THREE.BufferGeometry, THREE.Material | THREE.Material[]>>;
    constructor(materialGeometryController: NgtMaterialGeometryController);
    get points(): THREE.Points<THREE.BufferGeometry, THREE.Material | THREE.Material[]>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtPoints, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgtPoints, "ngt-points", ["ngtPoints"], {}, { "ready": "ready"; }, never>;
}
export declare class NgtPointsModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtPointsModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgtPointsModule, [typeof NgtPoints], never, [typeof NgtPoints, typeof i1.NgtMaterialGeometryControllerModule]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgtPointsModule>;
}
