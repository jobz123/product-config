var _NgtAudioListener_listener;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { applyProps, EnhancedRxState, NgtStore } from '@angular-three/core';
import { Directive, EventEmitter, Input, NgModule, Output, } from '@angular/core';
import * as THREE from 'three';
import * as i0 from "@angular/core";
import * as i1 from "@angular-three/core";
export class NgtAudioListener extends EnhancedRxState {
    constructor(store) {
        super();
        this.store = store;
        this.ready = new EventEmitter();
        _NgtAudioListener_listener.set(this, void 0);
    }
    get listener() {
        return __classPrivateFieldGet(this, _NgtAudioListener_listener, "f");
    }
    ngOnInit() {
        __classPrivateFieldSet(this, _NgtAudioListener_listener, new THREE.AudioListener(), "f");
        const props = {
            filter: this.filter,
            timeDelta: this.timeDelta,
        };
        applyProps(this.listener, props);
        this.holdEffect(this.store.select('ready'), (ready) => {
            const camera = this.store.get('camera');
            if (ready && camera) {
                camera.add(this.listener);
                this.ready.emit(this.listener);
            }
            return () => {
                if (ready && camera) {
                    this.listener.clear();
                    camera.remove(this.listener);
                }
            };
        });
    }
}
_NgtAudioListener_listener = new WeakMap();
NgtAudioListener.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioListener, deps: [{ token: i1.NgtStore }], target: i0.ɵɵFactoryTarget.Directive });
NgtAudioListener.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtAudioListener, selector: "ngt-audio-listener", inputs: { filter: "filter", timeDelta: "timeDelta" }, outputs: { ready: "ready" }, exportAs: ["ngtAudioListener"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioListener, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-audio-listener',
                    exportAs: 'ngtAudioListener',
                }]
        }], ctorParameters: function () { return [{ type: i1.NgtStore }]; }, propDecorators: { filter: [{
                type: Input
            }], timeDelta: [{
                type: Input
            }], ready: [{
                type: Output
            }] } });
export class NgtAudioListenerModule {
}
NgtAudioListenerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioListenerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtAudioListenerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioListenerModule, declarations: [NgtAudioListener], exports: [NgtAudioListener] });
NgtAudioListenerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioListenerModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAudioListenerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtAudioListener],
                    exports: [NgtAudioListener],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVkaW8tbGlzdGVuZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29yZS9hdWRpb3Mvc3JjL2xpYi9hdWRpby1saXN0ZW5lci9hdWRpby1saXN0ZW5lci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM1RSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBQ0wsUUFBUSxFQUVSLE1BQU0sR0FDUCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQzs7O0FBTS9CLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxlQUFlO0lBV25ELFlBQW9CLEtBQWU7UUFDakMsS0FBSyxFQUFFLENBQUM7UUFEVSxVQUFLLEdBQUwsS0FBSyxDQUFVO1FBUHpCLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBdUIsQ0FBQztRQUUxRCw2Q0FBZ0M7SUFPaEMsQ0FBQztJQU5ELElBQUksUUFBUTtRQUNWLE9BQU8sdUJBQUEsSUFBSSxrQ0FBVSxDQUFDO0lBQ3hCLENBQUM7SUFNRCxRQUFRO1FBQ04sdUJBQUEsSUFBSSw4QkFBYSxJQUFJLEtBQUssQ0FBQyxhQUFhLEVBQUUsTUFBQSxDQUFDO1FBQzNDLE1BQU0sS0FBSyxHQUFHO1lBQ1osTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO1lBQ25CLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUztTQUMxQixDQUFDO1FBQ0YsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQ3BELE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3hDLElBQUksS0FBSyxJQUFJLE1BQU0sRUFBRTtnQkFDbkIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQzFCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQzthQUNoQztZQUVELE9BQU8sR0FBRyxFQUFFO2dCQUNWLElBQUksS0FBSyxJQUFJLE1BQU0sRUFBRTtvQkFDbkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztvQkFDdEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7aUJBQzlCO1lBQ0gsQ0FBQyxDQUFDO1FBQ0osQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOzs7NkdBcENVLGdCQUFnQjtpR0FBaEIsZ0JBQWdCOzJGQUFoQixnQkFBZ0I7a0JBSjVCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsUUFBUSxFQUFFLGtCQUFrQjtpQkFDN0I7K0ZBRVUsTUFBTTtzQkFBZCxLQUFLO2dCQUNHLFNBQVM7c0JBQWpCLEtBQUs7Z0JBRUksS0FBSztzQkFBZCxNQUFNOztBQXVDVCxNQUFNLE9BQU8sc0JBQXNCOzttSEFBdEIsc0JBQXNCO29IQUF0QixzQkFBc0IsaUJBM0N0QixnQkFBZ0IsYUFBaEIsZ0JBQWdCO29IQTJDaEIsc0JBQXNCOzJGQUF0QixzQkFBc0I7a0JBSmxDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsZ0JBQWdCLENBQUM7b0JBQ2hDLE9BQU8sRUFBRSxDQUFDLGdCQUFnQixDQUFDO2lCQUM1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFwcGx5UHJvcHMsIEVuaGFuY2VkUnhTdGF0ZSwgTmd0U3RvcmUgfSBmcm9tICdAYW5ndWxhci10aHJlZS9jb3JlJztcbmltcG9ydCB7XG4gIERpcmVjdGl2ZSxcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgTmdNb2R1bGUsXG4gIE9uSW5pdCxcbiAgT3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnbmd0LWF1ZGlvLWxpc3RlbmVyJyxcbiAgZXhwb3J0QXM6ICduZ3RBdWRpb0xpc3RlbmVyJyxcbn0pXG5leHBvcnQgY2xhc3MgTmd0QXVkaW9MaXN0ZW5lciBleHRlbmRzIEVuaGFuY2VkUnhTdGF0ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGZpbHRlcj86IEF1ZGlvTm9kZTtcbiAgQElucHV0KCkgdGltZURlbHRhPzogbnVtYmVyO1xuXG4gIEBPdXRwdXQoKSByZWFkeSA9IG5ldyBFdmVudEVtaXR0ZXI8VEhSRUUuQXVkaW9MaXN0ZW5lcj4oKTtcblxuICAjbGlzdGVuZXIhOiBUSFJFRS5BdWRpb0xpc3RlbmVyO1xuICBnZXQgbGlzdGVuZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuI2xpc3RlbmVyO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzdG9yZTogTmd0U3RvcmUpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy4jbGlzdGVuZXIgPSBuZXcgVEhSRUUuQXVkaW9MaXN0ZW5lcigpO1xuICAgIGNvbnN0IHByb3BzID0ge1xuICAgICAgZmlsdGVyOiB0aGlzLmZpbHRlcixcbiAgICAgIHRpbWVEZWx0YTogdGhpcy50aW1lRGVsdGEsXG4gICAgfTtcbiAgICBhcHBseVByb3BzKHRoaXMubGlzdGVuZXIsIHByb3BzKTtcbiAgICB0aGlzLmhvbGRFZmZlY3QodGhpcy5zdG9yZS5zZWxlY3QoJ3JlYWR5JyksIChyZWFkeSkgPT4ge1xuICAgICAgY29uc3QgY2FtZXJhID0gdGhpcy5zdG9yZS5nZXQoJ2NhbWVyYScpO1xuICAgICAgaWYgKHJlYWR5ICYmIGNhbWVyYSkge1xuICAgICAgICBjYW1lcmEuYWRkKHRoaXMubGlzdGVuZXIpO1xuICAgICAgICB0aGlzLnJlYWR5LmVtaXQodGhpcy5saXN0ZW5lcik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGlmIChyZWFkeSAmJiBjYW1lcmEpIHtcbiAgICAgICAgICB0aGlzLmxpc3RlbmVyLmNsZWFyKCk7XG4gICAgICAgICAgY2FtZXJhLnJlbW92ZSh0aGlzLmxpc3RlbmVyKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtOZ3RBdWRpb0xpc3RlbmVyXSxcbiAgZXhwb3J0czogW05ndEF1ZGlvTGlzdGVuZXJdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ3RBdWRpb0xpc3RlbmVyTW9kdWxlIHt9XG4iXX0=