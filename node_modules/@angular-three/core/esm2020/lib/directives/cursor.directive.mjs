import { DOCUMENT } from '@angular/common';
import { Directive, Inject, NgModule, Optional, Self } from '@angular/core';
import { mapTo, merge, takeUntil } from 'rxjs';
import { NgtObject3dInputsController } from '../controllers/object-3d-inputs.controller';
import { NgtDestroyedService } from '../services/destroyed.service';
import * as i0 from "@angular/core";
import * as i1 from "../controllers/object-3d-inputs.controller";
import * as i2 from "../services/destroyed.service";
export class NgtCursor {
    constructor(objectInputsController, document, destroyed) {
        if (!objectInputsController)
            return;
        merge(objectInputsController.pointerover.pipe(mapTo(true)), objectInputsController.pointerout.pipe(mapTo(false)))
            .pipe(takeUntil(destroyed))
            .subscribe((hovered) => {
            document.body.style.cursor = hovered ? 'pointer' : 'auto';
        });
    }
}
NgtCursor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCursor, deps: [{ token: i1.NgtObject3dInputsController, optional: true, self: true }, { token: DOCUMENT }, { token: i2.NgtDestroyedService }], target: i0.ɵɵFactoryTarget.Directive });
NgtCursor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtCursor, selector: "[ngtCursor]", providers: [NgtDestroyedService], exportAs: ["ngtCursor"], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCursor, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngtCursor]',
                    exportAs: 'ngtCursor',
                    providers: [NgtDestroyedService],
                }]
        }], ctorParameters: function () { return [{ type: i1.NgtObject3dInputsController, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }] }, { type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i2.NgtDestroyedService }]; } });
export class NgtCursorModule {
}
NgtCursorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCursorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtCursorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCursorModule, declarations: [NgtCursor], exports: [NgtCursor] });
NgtCursorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCursorModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCursorModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtCursor],
                    exports: [NgtCursor],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3Vyc29yLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi9kaXJlY3RpdmVzL2N1cnNvci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVFLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMvQyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUN6RixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7OztBQU9wRSxNQUFNLE9BQU8sU0FBUztJQUNwQixZQUdFLHNCQUFtRCxFQUNqQyxRQUFrQixFQUNwQyxTQUE4QjtRQUU5QixJQUFJLENBQUMsc0JBQXNCO1lBQUUsT0FBTztRQUNwQyxLQUFLLENBQ0gsc0JBQXNCLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsRUFDcEQsc0JBQXNCLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FDckQ7YUFDRSxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQzFCLFNBQVMsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQ3JCLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQzVELENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQzs7c0dBakJVLFNBQVMseUZBS1YsUUFBUTswRkFMUCxTQUFTLHNDQUZULENBQUMsbUJBQW1CLENBQUM7MkZBRXJCLFNBQVM7a0JBTHJCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLFFBQVEsRUFBRSxXQUFXO29CQUNyQixTQUFTLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztpQkFDakM7OzBCQUdJLFFBQVE7OzBCQUNSLElBQUk7OEJBRXVCLFFBQVE7MEJBQW5DLE1BQU07MkJBQUMsUUFBUTs7QUFtQnBCLE1BQU0sT0FBTyxlQUFlOzs0R0FBZixlQUFlOzZHQUFmLGVBQWUsaUJBeEJmLFNBQVMsYUFBVCxTQUFTOzZHQXdCVCxlQUFlOzJGQUFmLGVBQWU7a0JBSjNCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsU0FBUyxDQUFDO29CQUN6QixPQUFPLEVBQUUsQ0FBQyxTQUFTLENBQUM7aUJBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRE9DVU1FTlQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBJbmplY3QsIE5nTW9kdWxlLCBPcHRpb25hbCwgU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgbWFwVG8sIG1lcmdlLCB0YWtlVW50aWwgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE5ndE9iamVjdDNkSW5wdXRzQ29udHJvbGxlciB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL29iamVjdC0zZC1pbnB1dHMuY29udHJvbGxlcic7XG5pbXBvcnQgeyBOZ3REZXN0cm95ZWRTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvZGVzdHJveWVkLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbmd0Q3Vyc29yXScsXG4gIGV4cG9ydEFzOiAnbmd0Q3Vyc29yJyxcbiAgcHJvdmlkZXJzOiBbTmd0RGVzdHJveWVkU2VydmljZV0sXG59KVxuZXhwb3J0IGNsYXNzIE5ndEN1cnNvciB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIEBPcHRpb25hbCgpXG4gICAgQFNlbGYoKVxuICAgIG9iamVjdElucHV0c0NvbnRyb2xsZXI6IE5ndE9iamVjdDNkSW5wdXRzQ29udHJvbGxlcixcbiAgICBASW5qZWN0KERPQ1VNRU5UKSBkb2N1bWVudDogRG9jdW1lbnQsXG4gICAgZGVzdHJveWVkOiBOZ3REZXN0cm95ZWRTZXJ2aWNlXG4gICkge1xuICAgIGlmICghb2JqZWN0SW5wdXRzQ29udHJvbGxlcikgcmV0dXJuO1xuICAgIG1lcmdlKFxuICAgICAgb2JqZWN0SW5wdXRzQ29udHJvbGxlci5wb2ludGVyb3Zlci5waXBlKG1hcFRvKHRydWUpKSxcbiAgICAgIG9iamVjdElucHV0c0NvbnRyb2xsZXIucG9pbnRlcm91dC5waXBlKG1hcFRvKGZhbHNlKSlcbiAgICApXG4gICAgICAucGlwZSh0YWtlVW50aWwoZGVzdHJveWVkKSlcbiAgICAgIC5zdWJzY3JpYmUoKGhvdmVyZWQpID0+IHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3IgPSBob3ZlcmVkID8gJ3BvaW50ZXInIDogJ2F1dG8nO1xuICAgICAgfSk7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbTmd0Q3Vyc29yXSxcbiAgZXhwb3J0czogW05ndEN1cnNvcl0sXG59KVxuZXhwb3J0IGNsYXNzIE5ndEN1cnNvck1vZHVsZSB7fVxuIl19