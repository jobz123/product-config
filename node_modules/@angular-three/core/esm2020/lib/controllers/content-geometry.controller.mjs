var _NgtContentGeometryController_instances, _NgtContentGeometryController_geometryInput, _NgtContentGeometryController_geometry, _NgtContentGeometryController_getGeometry;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
// GENERATED
import { Directive, Input, NgModule, NgZone } from '@angular/core';
import * as THREE from 'three';
import { Controller, createControllerProviderFactory } from './controller';
import * as i0 from "@angular/core";
export class NgtContentGeometryController extends Controller {
    constructor(ngZone) {
        super(ngZone);
        _NgtContentGeometryController_instances.add(this);
        _NgtContentGeometryController_geometryInput.set(this, void 0);
        _NgtContentGeometryController_geometry.set(this, undefined);
    }
    set geometry(v) {
        if (v) {
            __classPrivateFieldSet(this, _NgtContentGeometryController_geometryInput, v, "f");
            this.construct();
        }
    }
    get geometry() {
        return __classPrivateFieldGet(this, _NgtContentGeometryController_geometry, "f");
    }
    construct() {
        __classPrivateFieldSet(this, _NgtContentGeometryController_geometry, __classPrivateFieldGet(this, _NgtContentGeometryController_instances, "m", _NgtContentGeometryController_getGeometry).call(this, __classPrivateFieldGet(this, _NgtContentGeometryController_geometryInput, "f")), "f");
    }
    get controller() {
        return this.contentGeometryController;
    }
    get props() {
        return ['geometry'];
    }
}
_NgtContentGeometryController_geometryInput = new WeakMap(), _NgtContentGeometryController_geometry = new WeakMap(), _NgtContentGeometryController_instances = new WeakSet(), _NgtContentGeometryController_getGeometry = function _NgtContentGeometryController_getGeometry(input) {
    if (input instanceof THREE.BufferGeometry) {
        return input;
    }
    return undefined;
};
NgtContentGeometryController.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtContentGeometryController, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });
NgtContentGeometryController.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtContentGeometryController, selector: "\n    ngt-mesh,\n    ngt-instanced-mesh,\n    ngt-skinned-mesh,\n    ngt-line,\n    ngt-line-loop,\n    ngt-line-segments,\n    ngt-points\n  ", inputs: { geometry: "geometry", contentGeometryController: "contentGeometryController" }, exportAs: ["ngtContentGeometryController"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtContentGeometryController, decorators: [{
            type: Directive,
            args: [{
                    selector: `
    ngt-mesh,
    ngt-instanced-mesh,
    ngt-skinned-mesh,
    ngt-line,
    ngt-line-loop,
    ngt-line-segments,
    ngt-points
  `,
                    exportAs: 'ngtContentGeometryController',
                }]
        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { geometry: [{
                type: Input
            }], contentGeometryController: [{
                type: Input
            }] } });
export class NgtContentGeometryControllerModule {
}
NgtContentGeometryControllerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtContentGeometryControllerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtContentGeometryControllerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtContentGeometryControllerModule, declarations: [NgtContentGeometryController], exports: [NgtContentGeometryController] });
NgtContentGeometryControllerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtContentGeometryControllerModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtContentGeometryControllerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtContentGeometryController],
                    exports: [NgtContentGeometryController],
                }]
        }] });
export const [NGT_CONTENT_GEOMETRY_WATCHED_CONTROLLER, NGT_CONTENT_GEOMETRY_CONTROLLER_PROVIDER,] = createControllerProviderFactory({
    controller: NgtContentGeometryController,
    watchedControllerTokenName: 'Watched ContentGeometryController',
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1nZW9tZXRyeS5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL2NvbnRyb2xsZXJzL2NvbnRlbnQtZ2VvbWV0cnkuY29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLFlBQVk7QUFDWixPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxVQUFVLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxjQUFjLENBQUM7O0FBYzNFLE1BQU0sT0FBTyw0QkFBNkIsU0FBUSxVQUFVO0lBa0IxRCxZQUFZLE1BQWM7UUFDeEIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDOztRQWxCaEIsOERBQWtEO1FBZWxELGlEQUE4QyxTQUFTLEVBQUM7SUFJeEQsQ0FBQztJQWpCRCxJQUFhLFFBQVEsQ0FBQyxDQUFtQztRQUN2RCxJQUFJLENBQUMsRUFBRTtZQUNMLHVCQUFBLElBQUksK0NBQWtCLENBQUMsTUFBQSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztTQUNsQjtJQUNILENBQUM7SUFJRCxJQUFJLFFBQVE7UUFDVixPQUFPLHVCQUFBLElBQUksOENBQVUsQ0FBQztJQUN4QixDQUFDO0lBUUQsU0FBUztRQUNQLHVCQUFBLElBQUksMENBQWEsdUJBQUEsSUFBSSwwRkFBYSxNQUFqQixJQUFJLEVBQWMsdUJBQUEsSUFBSSxtREFBZSxDQUFDLE1BQUEsQ0FBQztJQUMxRCxDQUFDO0lBWUQsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMseUJBQXlCLENBQUM7SUFDeEMsQ0FBQztJQUVELElBQUksS0FBSztRQUNQLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN0QixDQUFDOzs2UUFmQyxLQUF1QztJQUV2QyxJQUFJLEtBQUssWUFBWSxLQUFLLENBQUMsY0FBYyxFQUFFO1FBQ3pDLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFFRCxPQUFPLFNBQVMsQ0FBQztBQUNuQixDQUFDO3lIQWxDVSw0QkFBNEI7NkdBQTVCLDRCQUE0QjsyRkFBNUIsNEJBQTRCO2tCQVp4QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRTs7Ozs7Ozs7R0FRVDtvQkFDRCxRQUFRLEVBQUUsOEJBQThCO2lCQUN6Qzs2RkFJYyxRQUFRO3NCQUFwQixLQUFLO2dCQU9HLHlCQUF5QjtzQkFBakMsS0FBSzs7QUF1Q1IsTUFBTSxPQUFPLGtDQUFrQzs7K0hBQWxDLGtDQUFrQztnSUFBbEMsa0NBQWtDLGlCQWpEbEMsNEJBQTRCLGFBQTVCLDRCQUE0QjtnSUFpRDVCLGtDQUFrQzsyRkFBbEMsa0NBQWtDO2tCQUo5QyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLDRCQUE0QixDQUFDO29CQUM1QyxPQUFPLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQztpQkFDeEM7O0FBR0QsTUFBTSxDQUFDLE1BQU0sQ0FDWCx1Q0FBdUMsRUFDdkMsd0NBQXdDLEVBQ3pDLEdBQUcsK0JBQStCLENBQUM7SUFDbEMsVUFBVSxFQUFFLDRCQUE0QjtJQUN4QywwQkFBMEIsRUFBRSxtQ0FBbUM7Q0FDaEUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gR0VORVJBVEVEXG5pbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBOZ01vZHVsZSwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XG5pbXBvcnQgeyBDb250cm9sbGVyLCBjcmVhdGVDb250cm9sbGVyUHJvdmlkZXJGYWN0b3J5IH0gZnJvbSAnLi9jb250cm9sbGVyJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiBgXG4gICAgbmd0LW1lc2gsXG4gICAgbmd0LWluc3RhbmNlZC1tZXNoLFxuICAgIG5ndC1za2lubmVkLW1lc2gsXG4gICAgbmd0LWxpbmUsXG4gICAgbmd0LWxpbmUtbG9vcCxcbiAgICBuZ3QtbGluZS1zZWdtZW50cyxcbiAgICBuZ3QtcG9pbnRzXG4gIGAsXG4gIGV4cG9ydEFzOiAnbmd0Q29udGVudEdlb21ldHJ5Q29udHJvbGxlcicsXG59KVxuZXhwb3J0IGNsYXNzIE5ndENvbnRlbnRHZW9tZXRyeUNvbnRyb2xsZXIgZXh0ZW5kcyBDb250cm9sbGVyIHtcbiAgI2dlb21ldHJ5SW5wdXQ/OiBUSFJFRS5CdWZmZXJHZW9tZXRyeSB8IHVuZGVmaW5lZDtcblxuICBASW5wdXQoKSBzZXQgZ2VvbWV0cnkodjogVEhSRUUuQnVmZmVyR2VvbWV0cnkgfCB1bmRlZmluZWQpIHtcbiAgICBpZiAodikge1xuICAgICAgdGhpcy4jZ2VvbWV0cnlJbnB1dCA9IHY7XG4gICAgICB0aGlzLmNvbnN0cnVjdCgpO1xuICAgIH1cbiAgfVxuXG4gIEBJbnB1dCgpIGNvbnRlbnRHZW9tZXRyeUNvbnRyb2xsZXI/OiBOZ3RDb250ZW50R2VvbWV0cnlDb250cm9sbGVyO1xuXG4gIGdldCBnZW9tZXRyeSgpIHtcbiAgICByZXR1cm4gdGhpcy4jZ2VvbWV0cnk7XG4gIH1cblxuICAjZ2VvbWV0cnk6IFRIUkVFLkJ1ZmZlckdlb21ldHJ5IHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuXG4gIGNvbnN0cnVjdG9yKG5nWm9uZTogTmdab25lKSB7XG4gICAgc3VwZXIobmdab25lKTtcbiAgfVxuXG4gIGNvbnN0cnVjdCgpIHtcbiAgICB0aGlzLiNnZW9tZXRyeSA9IHRoaXMuI2dldEdlb21ldHJ5KHRoaXMuI2dlb21ldHJ5SW5wdXQpO1xuICB9XG5cbiAgI2dldEdlb21ldHJ5KFxuICAgIGlucHV0OiBUSFJFRS5CdWZmZXJHZW9tZXRyeSB8IHVuZGVmaW5lZFxuICApOiBUSFJFRS5CdWZmZXJHZW9tZXRyeSB8IHVuZGVmaW5lZCB7XG4gICAgaWYgKGlucHV0IGluc3RhbmNlb2YgVEhSRUUuQnVmZmVyR2VvbWV0cnkpIHtcbiAgICAgIHJldHVybiBpbnB1dDtcbiAgICB9XG5cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgZ2V0IGNvbnRyb2xsZXIoKTogQ29udHJvbGxlciB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuY29udGVudEdlb21ldHJ5Q29udHJvbGxlcjtcbiAgfVxuXG4gIGdldCBwcm9wcygpOiBzdHJpbmdbXSB7XG4gICAgcmV0dXJuIFsnZ2VvbWV0cnknXTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtOZ3RDb250ZW50R2VvbWV0cnlDb250cm9sbGVyXSxcbiAgZXhwb3J0czogW05ndENvbnRlbnRHZW9tZXRyeUNvbnRyb2xsZXJdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ3RDb250ZW50R2VvbWV0cnlDb250cm9sbGVyTW9kdWxlIHt9XG5cbmV4cG9ydCBjb25zdCBbXG4gIE5HVF9DT05URU5UX0dFT01FVFJZX1dBVENIRURfQ09OVFJPTExFUixcbiAgTkdUX0NPTlRFTlRfR0VPTUVUUllfQ09OVFJPTExFUl9QUk9WSURFUixcbl0gPSBjcmVhdGVDb250cm9sbGVyUHJvdmlkZXJGYWN0b3J5KHtcbiAgY29udHJvbGxlcjogTmd0Q29udGVudEdlb21ldHJ5Q29udHJvbGxlcixcbiAgd2F0Y2hlZENvbnRyb2xsZXJUb2tlbk5hbWU6ICdXYXRjaGVkIENvbnRlbnRHZW9tZXRyeUNvbnRyb2xsZXInLFxufSk7XG4iXX0=