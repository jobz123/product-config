var _NgtAnimationSubscriberController_subscriber;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { Directive, EventEmitter, Input, NgModule, NgZone, Output, } from '@angular/core';
import { NgtAnimationFrameStore } from '../stores/animation-frame.store';
import { Controller, createControllerProviderFactory } from './controller';
import * as i0 from "@angular/core";
import * as i1 from "../stores/animation-frame.store";
export class NgtAnimationSubscriberController extends Controller {
    constructor(animationFrameStore, ngZone) {
        super(ngZone);
        this.animationFrameStore = animationFrameStore;
        this.priority = 0;
        this.animateReady = new EventEmitter();
        _NgtAnimationSubscriberController_subscriber.set(this, void 0);
    }
    prepare(obj) {
        // only subscribe to animation frame if there's an output handler
        if (this.animateReady.observed) {
            __classPrivateFieldSet(this, _NgtAnimationSubscriberController_subscriber, obj, "f");
            this.animationFrameStore.register({
                obj,
                callback: this.animateReady.emit.bind(this.animateReady),
                priority: this.priority,
            });
        }
    }
    ngOnDestroy() {
        if (__classPrivateFieldGet(this, _NgtAnimationSubscriberController_subscriber, "f")) {
            this.animationFrameStore.actions.unsubscriberUuid(__classPrivateFieldGet(this, _NgtAnimationSubscriberController_subscriber, "f").uuid);
        }
    }
    get controller() {
        return undefined;
    }
    get props() {
        return [];
    }
}
_NgtAnimationSubscriberController_subscriber = new WeakMap();
NgtAnimationSubscriberController.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAnimationSubscriberController, deps: [{ token: i1.NgtAnimationFrameStore }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });
NgtAnimationSubscriberController.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtAnimationSubscriberController, selector: "[animateReady]", inputs: { priority: "priority" }, outputs: { animateReady: "animateReady" }, exportAs: ["ngtAnimationSubscriberController"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAnimationSubscriberController, decorators: [{
            type: Directive,
            args: [{
                    selector: '[animateReady]',
                    exportAs: 'ngtAnimationSubscriberController',
                }]
        }], ctorParameters: function () { return [{ type: i1.NgtAnimationFrameStore }, { type: i0.NgZone }]; }, propDecorators: { priority: [{
                type: Input
            }], animateReady: [{
                type: Output
            }] } });
export class NgtAnimationSubscriberControllerModule {
}
NgtAnimationSubscriberControllerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAnimationSubscriberControllerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtAnimationSubscriberControllerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAnimationSubscriberControllerModule, declarations: [NgtAnimationSubscriberController], exports: [NgtAnimationSubscriberController] });
NgtAnimationSubscriberControllerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAnimationSubscriberControllerModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtAnimationSubscriberControllerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtAnimationSubscriberController],
                    exports: [NgtAnimationSubscriberController],
                }]
        }] });
export const [NGT_ANIMATION_SUBSCRIBER_WATCHED_CONTROLLER, NGT_ANIMATION_SUBSCRIBER_CONTROLLER_PROVIDER,] = createControllerProviderFactory({
    watchedControllerTokenName: 'Watched AnimationSubscriberController',
    controller: NgtAnimationSubscriberController,
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9uLXN1YnNjcmliZXIuY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi9jb250cm9sbGVycy9hbmltYXRpb24tc3Vic2NyaWJlci5jb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxZQUFZLEVBQ1osS0FBSyxFQUNMLFFBQVEsRUFDUixNQUFNLEVBRU4sTUFBTSxHQUNQLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBRXpFLE9BQU8sRUFBRSxVQUFVLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxjQUFjLENBQUM7OztBQU0zRSxNQUFNLE9BQU8sZ0NBQ1gsU0FBUSxVQUFVO0lBUWxCLFlBQ1UsbUJBQTJDLEVBQ25ELE1BQWM7UUFFZCxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7UUFITix3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXdCO1FBTjVDLGFBQVEsR0FBRyxDQUFDLENBQUM7UUFDWixpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFhLENBQUM7UUFFdkQsK0RBQTZCO0lBTzdCLENBQUM7SUFFRCxPQUFPLENBQUMsR0FBbUI7UUFDekIsaUVBQWlFO1FBQ2pFLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUU7WUFDOUIsdUJBQUEsSUFBSSxnREFBZSxHQUFHLE1BQUEsQ0FBQztZQUN2QixJQUFJLENBQUMsbUJBQW1CLENBQUMsUUFBUSxDQUFDO2dCQUNoQyxHQUFHO2dCQUNILFFBQVEsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztnQkFDeEQsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO2FBQ3hCLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLHVCQUFBLElBQUksb0RBQVksRUFBRTtZQUNwQixJQUFJLENBQUMsbUJBQW1CLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLHVCQUFBLElBQUksb0RBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUMxRTtJQUNILENBQUM7SUFFRCxJQUFJLFVBQVU7UUFDWixPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyxFQUFFLENBQUM7SUFDWixDQUFDOzs7NkhBeENVLGdDQUFnQztpSEFBaEMsZ0NBQWdDOzJGQUFoQyxnQ0FBZ0M7a0JBSjVDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLGtDQUFrQztpQkFDN0M7a0lBS1UsUUFBUTtzQkFBaEIsS0FBSztnQkFDSSxZQUFZO3NCQUFyQixNQUFNOztBQTBDVCxNQUFNLE9BQU8sc0NBQXNDOzttSUFBdEMsc0NBQXNDO29JQUF0QyxzQ0FBc0MsaUJBL0N0QyxnQ0FBZ0MsYUFBaEMsZ0NBQWdDO29JQStDaEMsc0NBQXNDOzJGQUF0QyxzQ0FBc0M7a0JBSmxELFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsZ0NBQWdDLENBQUM7b0JBQ2hELE9BQU8sRUFBRSxDQUFDLGdDQUFnQyxDQUFDO2lCQUM1Qzs7QUFHRCxNQUFNLENBQUMsTUFBTSxDQUNYLDJDQUEyQyxFQUMzQyw0Q0FBNEMsRUFDN0MsR0FBRywrQkFBK0IsQ0FBQztJQUNsQywwQkFBMEIsRUFBRSx1Q0FBdUM7SUFDbkUsVUFBVSxFQUFFLGdDQUFnQztDQUM3QyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE5nTW9kdWxlLFxuICBOZ1pvbmUsXG4gIE9uRGVzdHJveSxcbiAgT3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCB7IE5ndEFuaW1hdGlvbkZyYW1lU3RvcmUgfSBmcm9tICcuLi9zdG9yZXMvYW5pbWF0aW9uLWZyYW1lLnN0b3JlJztcbmltcG9ydCB7IE5ndFJlbmRlciB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IENvbnRyb2xsZXIsIGNyZWF0ZUNvbnRyb2xsZXJQcm92aWRlckZhY3RvcnkgfSBmcm9tICcuL2NvbnRyb2xsZXInO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbYW5pbWF0ZVJlYWR5XScsXG4gIGV4cG9ydEFzOiAnbmd0QW5pbWF0aW9uU3Vic2NyaWJlckNvbnRyb2xsZXInLFxufSlcbmV4cG9ydCBjbGFzcyBOZ3RBbmltYXRpb25TdWJzY3JpYmVyQ29udHJvbGxlclxuICBleHRlbmRzIENvbnRyb2xsZXJcbiAgaW1wbGVtZW50cyBPbkRlc3Ryb3lcbntcbiAgQElucHV0KCkgcHJpb3JpdHkgPSAwO1xuICBAT3V0cHV0KCkgYW5pbWF0ZVJlYWR5ID0gbmV3IEV2ZW50RW1pdHRlcjxOZ3RSZW5kZXI+KCk7XG5cbiAgI3N1YnNjcmliZXI/OiBUSFJFRS5PYmplY3QzRDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGFuaW1hdGlvbkZyYW1lU3RvcmU6IE5ndEFuaW1hdGlvbkZyYW1lU3RvcmUsXG4gICAgbmdab25lOiBOZ1pvbmVcbiAgKSB7XG4gICAgc3VwZXIobmdab25lKTtcbiAgfVxuXG4gIHByZXBhcmUob2JqOiBUSFJFRS5PYmplY3QzRCkge1xuICAgIC8vIG9ubHkgc3Vic2NyaWJlIHRvIGFuaW1hdGlvbiBmcmFtZSBpZiB0aGVyZSdzIGFuIG91dHB1dCBoYW5kbGVyXG4gICAgaWYgKHRoaXMuYW5pbWF0ZVJlYWR5Lm9ic2VydmVkKSB7XG4gICAgICB0aGlzLiNzdWJzY3JpYmVyID0gb2JqO1xuICAgICAgdGhpcy5hbmltYXRpb25GcmFtZVN0b3JlLnJlZ2lzdGVyKHtcbiAgICAgICAgb2JqLFxuICAgICAgICBjYWxsYmFjazogdGhpcy5hbmltYXRlUmVhZHkuZW1pdC5iaW5kKHRoaXMuYW5pbWF0ZVJlYWR5KSxcbiAgICAgICAgcHJpb3JpdHk6IHRoaXMucHJpb3JpdHksXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy4jc3Vic2NyaWJlcikge1xuICAgICAgdGhpcy5hbmltYXRpb25GcmFtZVN0b3JlLmFjdGlvbnMudW5zdWJzY3JpYmVyVXVpZCh0aGlzLiNzdWJzY3JpYmVyLnV1aWQpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBjb250cm9sbGVyKCk6IENvbnRyb2xsZXIgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBnZXQgcHJvcHMoKTogc3RyaW5nW10ge1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtOZ3RBbmltYXRpb25TdWJzY3JpYmVyQ29udHJvbGxlcl0sXG4gIGV4cG9ydHM6IFtOZ3RBbmltYXRpb25TdWJzY3JpYmVyQ29udHJvbGxlcl0sXG59KVxuZXhwb3J0IGNsYXNzIE5ndEFuaW1hdGlvblN1YnNjcmliZXJDb250cm9sbGVyTW9kdWxlIHt9XG5cbmV4cG9ydCBjb25zdCBbXG4gIE5HVF9BTklNQVRJT05fU1VCU0NSSUJFUl9XQVRDSEVEX0NPTlRST0xMRVIsXG4gIE5HVF9BTklNQVRJT05fU1VCU0NSSUJFUl9DT05UUk9MTEVSX1BST1ZJREVSLFxuXSA9IGNyZWF0ZUNvbnRyb2xsZXJQcm92aWRlckZhY3Rvcnkoe1xuICB3YXRjaGVkQ29udHJvbGxlclRva2VuTmFtZTogJ1dhdGNoZWQgQW5pbWF0aW9uU3Vic2NyaWJlckNvbnRyb2xsZXInLFxuICBjb250cm9sbGVyOiBOZ3RBbmltYXRpb25TdWJzY3JpYmVyQ29udHJvbGxlcixcbn0pO1xuIl19