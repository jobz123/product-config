import { NgModule, Pipe } from '@angular/core';
import * as THREE from 'three';
import * as i0 from "@angular/core";
export class NgtSidePipe {
    transform(value, side) {
        switch (side) {
            case 'front':
                return THREE.FrontSide;
            case 'back':
                return THREE.BackSide;
            case 'double':
                return THREE.DoubleSide;
        }
    }
}
NgtSidePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSidePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
NgtSidePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSidePipe, name: "side" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSidePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'side' }]
        }] });
export class NgtSidePipeModule {
}
NgtSidePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSidePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtSidePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSidePipeModule, declarations: [NgtSidePipe], exports: [NgtSidePipe] });
NgtSidePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSidePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSidePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtSidePipe],
                    exports: [NgtSidePipe],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZS5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3BpcGVzL3NpZGUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7O0FBRy9CLE1BQU0sT0FBTyxXQUFXO0lBQ3RCLFNBQVMsQ0FBQyxLQUFTLEVBQUUsSUFBaUM7UUFDcEQsUUFBUSxJQUFJLEVBQUU7WUFDWixLQUFLLE9BQU87Z0JBQ1YsT0FBTyxLQUFLLENBQUMsU0FBUyxDQUFDO1lBQ3pCLEtBQUssTUFBTTtnQkFDVCxPQUFPLEtBQUssQ0FBQyxRQUFRLENBQUM7WUFDeEIsS0FBSyxRQUFRO2dCQUNYLE9BQU8sS0FBSyxDQUFDLFVBQVUsQ0FBQztTQUMzQjtJQUNILENBQUM7O3dHQVZVLFdBQVc7c0dBQVgsV0FBVzsyRkFBWCxXQUFXO2tCQUR2QixJQUFJO21CQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRTs7QUFrQnRCLE1BQU0sT0FBTyxpQkFBaUI7OzhHQUFqQixpQkFBaUI7K0dBQWpCLGlCQUFpQixpQkFqQmpCLFdBQVcsYUFBWCxXQUFXOytHQWlCWCxpQkFBaUI7MkZBQWpCLGlCQUFpQjtrQkFKN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxXQUFXLENBQUM7b0JBQzNCLE9BQU8sRUFBRSxDQUFDLFdBQVcsQ0FBQztpQkFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuXG5AUGlwZSh7IG5hbWU6ICdzaWRlJyB9KVxuZXhwb3J0IGNsYXNzIE5ndFNpZGVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHRyYW5zZm9ybSh2YWx1ZTogJycsIHNpZGU6ICdmcm9udCcgfCAnYmFjaycgfCAnZG91YmxlJyk6IFRIUkVFLlNpZGUge1xuICAgIHN3aXRjaCAoc2lkZSkge1xuICAgICAgY2FzZSAnZnJvbnQnOlxuICAgICAgICByZXR1cm4gVEhSRUUuRnJvbnRTaWRlO1xuICAgICAgY2FzZSAnYmFjayc6XG4gICAgICAgIHJldHVybiBUSFJFRS5CYWNrU2lkZTtcbiAgICAgIGNhc2UgJ2RvdWJsZSc6XG4gICAgICAgIHJldHVybiBUSFJFRS5Eb3VibGVTaWRlO1xuICAgIH1cbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtOZ3RTaWRlUGlwZV0sXG4gIGV4cG9ydHM6IFtOZ3RTaWRlUGlwZV0sXG59KVxuZXhwb3J0IGNsYXNzIE5ndFNpZGVQaXBlTW9kdWxlIHt9XG4iXX0=