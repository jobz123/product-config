import * as THREE from 'three';
export function makeVector2(input) {
    if (!input)
        return undefined;
    if (input instanceof THREE.Vector2) {
        return input;
    }
    if (Array.isArray(input)) {
        return new THREE.Vector2(...input);
    }
    return new THREE.Vector2(input, input);
}
export function makeVector3(input) {
    if (!input)
        return undefined;
    if (input instanceof THREE.Vector3) {
        return input;
    }
    if (Array.isArray(input)) {
        return new THREE.Vector3(...input);
    }
    return new THREE.Vector3(input, input, input);
}
export function makeVector4(input) {
    if (!input)
        return undefined;
    if (input instanceof THREE.Vector4) {
        return input;
    }
    if (Array.isArray(input)) {
        return new THREE.Vector4(...input);
    }
    return new THREE.Vector4(input, input, input, input);
}
export function makeForSet(type, input) {
    if (!input)
        return undefined;
    if (input instanceof type) {
        return input;
    }
    return new type(...input);
}
export function makeColor(color) {
    if (!color)
        return undefined;
    if (color instanceof THREE.Color) {
        return color;
    }
    if (Array.isArray(color)) {
        return new THREE.Color(...color);
    }
    return new THREE.Color(color);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFrZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi91dGlscy9tYWtlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBUy9CLE1BQU0sVUFBVSxXQUFXLENBQUMsS0FBa0I7SUFDNUMsSUFBSSxDQUFDLEtBQUs7UUFBRSxPQUFPLFNBQVMsQ0FBQztJQUU3QixJQUFJLEtBQUssWUFBWSxLQUFLLENBQUMsT0FBTyxFQUFFO1FBQ2xDLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFFRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDeEIsT0FBTyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQztLQUNwQztJQUVELE9BQU8sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztBQUN6QyxDQUFDO0FBRUQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxLQUFrQjtJQUM1QyxJQUFJLENBQUMsS0FBSztRQUFFLE9BQU8sU0FBUyxDQUFDO0lBRTdCLElBQUksS0FBSyxZQUFZLEtBQUssQ0FBQyxPQUFPLEVBQUU7UUFDbEMsT0FBTyxLQUFLLENBQUM7S0FDZDtJQUVELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUN4QixPQUFPLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDO0tBQ3BDO0lBRUQsT0FBTyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztBQUNoRCxDQUFDO0FBRUQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxLQUFrQjtJQUM1QyxJQUFJLENBQUMsS0FBSztRQUFFLE9BQU8sU0FBUyxDQUFDO0lBRTdCLElBQUksS0FBSyxZQUFZLEtBQUssQ0FBQyxPQUFPLEVBQUU7UUFDbEMsT0FBTyxLQUFLLENBQUM7S0FDZDtJQUVELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUN4QixPQUFPLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDO0tBQ3BDO0lBRUQsT0FBTyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDdkQsQ0FBQztBQUVELE1BQU0sVUFBVSxVQUFVLENBQ3hCLElBQVcsRUFDWCxLQUFzRTtJQUV0RSxJQUFJLENBQUMsS0FBSztRQUFFLE9BQU8sU0FBUyxDQUFDO0lBRTdCLElBQUksS0FBSyxZQUFZLElBQUksRUFBRTtRQUN6QixPQUFPLEtBQTRCLENBQUM7S0FDckM7SUFFRCxPQUFPLElBQUksSUFBSSxDQUFDLEdBQUksS0FBa0QsQ0FBQyxDQUFDO0FBQzFFLENBQUM7QUFFRCxNQUFNLFVBQVUsU0FBUyxDQUFDLEtBQWdCO0lBQ3hDLElBQUksQ0FBQyxLQUFLO1FBQUUsT0FBTyxTQUFTLENBQUM7SUFDN0IsSUFBSSxLQUFLLFlBQVksS0FBSyxDQUFDLEtBQUssRUFBRTtRQUNoQyxPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3hCLE9BQU8sSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDbEM7SUFFRCxPQUFPLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNoQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuaW1wb3J0IHtcbiAgQW55Q29uc3RydWN0b3IsXG4gIE5ndENvbG9yLFxuICBOZ3RWZWN0b3IyLFxuICBOZ3RWZWN0b3IzLFxuICBOZ3RWZWN0b3I0LFxufSBmcm9tICcuLi90eXBlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlVmVjdG9yMihpbnB1dD86IE5ndFZlY3RvcjIpOiBUSFJFRS5WZWN0b3IyIHwgdW5kZWZpbmVkIHtcbiAgaWYgKCFpbnB1dCkgcmV0dXJuIHVuZGVmaW5lZDtcblxuICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBUSFJFRS5WZWN0b3IyKSB7XG4gICAgcmV0dXJuIGlucHV0O1xuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgcmV0dXJuIG5ldyBUSFJFRS5WZWN0b3IyKC4uLmlucHV0KTtcbiAgfVxuXG4gIHJldHVybiBuZXcgVEhSRUUuVmVjdG9yMihpbnB1dCwgaW5wdXQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFrZVZlY3RvcjMoaW5wdXQ/OiBOZ3RWZWN0b3IzKTogVEhSRUUuVmVjdG9yMyB8IHVuZGVmaW5lZCB7XG4gIGlmICghaW5wdXQpIHJldHVybiB1bmRlZmluZWQ7XG5cbiAgaWYgKGlucHV0IGluc3RhbmNlb2YgVEhSRUUuVmVjdG9yMykge1xuICAgIHJldHVybiBpbnB1dDtcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KGlucHV0KSkge1xuICAgIHJldHVybiBuZXcgVEhSRUUuVmVjdG9yMyguLi5pbnB1dCk7XG4gIH1cblxuICByZXR1cm4gbmV3IFRIUkVFLlZlY3RvcjMoaW5wdXQsIGlucHV0LCBpbnB1dCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlVmVjdG9yNChpbnB1dD86IE5ndFZlY3RvcjQpOiBUSFJFRS5WZWN0b3I0IHwgdW5kZWZpbmVkIHtcbiAgaWYgKCFpbnB1dCkgcmV0dXJuIHVuZGVmaW5lZDtcblxuICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBUSFJFRS5WZWN0b3I0KSB7XG4gICAgcmV0dXJuIGlucHV0O1xuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgcmV0dXJuIG5ldyBUSFJFRS5WZWN0b3I0KC4uLmlucHV0KTtcbiAgfVxuXG4gIHJldHVybiBuZXcgVEhSRUUuVmVjdG9yNChpbnB1dCwgaW5wdXQsIGlucHV0LCBpbnB1dCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlRm9yU2V0PFRUeXBlIGV4dGVuZHMgQW55Q29uc3RydWN0b3I8YW55Pj4oXG4gIHR5cGU6IFRUeXBlLFxuICBpbnB1dD86IEluc3RhbmNlVHlwZTxUVHlwZT4gfCBQYXJhbWV0ZXJzPHR5cGVvZiB0eXBlLnByb3RvdHlwZVsnc2V0J10+XG4pOiBJbnN0YW5jZVR5cGU8VFR5cGU+IHwgdW5kZWZpbmVkIHtcbiAgaWYgKCFpbnB1dCkgcmV0dXJuIHVuZGVmaW5lZDtcblxuICBpZiAoaW5wdXQgaW5zdGFuY2VvZiB0eXBlKSB7XG4gICAgcmV0dXJuIGlucHV0IGFzIEluc3RhbmNlVHlwZTxUVHlwZT47XG4gIH1cblxuICByZXR1cm4gbmV3IHR5cGUoLi4uKGlucHV0IGFzIFBhcmFtZXRlcnM8dHlwZW9mIHR5cGUucHJvdG90eXBlWydzZXQnXT4pKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VDb2xvcihjb2xvcj86IE5ndENvbG9yKTogVEhSRUUuQ29sb3IgfCB1bmRlZmluZWQge1xuICBpZiAoIWNvbG9yKSByZXR1cm4gdW5kZWZpbmVkO1xuICBpZiAoY29sb3IgaW5zdGFuY2VvZiBUSFJFRS5Db2xvcikge1xuICAgIHJldHVybiBjb2xvcjtcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KGNvbG9yKSkge1xuICAgIHJldHVybiBuZXcgVEhSRUUuQ29sb3IoLi4uY29sb3IpO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBUSFJFRS5Db2xvcihjb2xvcik7XG59XG4iXX0=