var _NgtLight_lightArgs, _NgtLight_light;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { Directive, EventEmitter, Inject, Input, NgZone, Output, } from '@angular/core';
import { NGT_OBJECT_WATCHED_CONTROLLER, NgtObject3dController, } from '../controllers/object-3d.controller';
import { applyProps } from '../utils/apply-props';
import * as i0 from "@angular/core";
import * as i1 from "../controllers/object-3d.controller";
export class NgtLight {
    constructor(objectController, ngZone) {
        this.objectController = objectController;
        this.ngZone = ngZone;
        this.ready = new EventEmitter();
        _NgtLight_lightArgs.set(this, []);
        _NgtLight_light.set(this, void 0);
        objectController.initFn = () => {
            __classPrivateFieldSet(this, _NgtLight_light, new this.lightType(...__classPrivateFieldGet(this, _NgtLight_lightArgs, "f")), "f");
            if (this.intensity) {
                applyProps(this.light, { intensity: this.intensity });
            }
            if (this.shadow) {
                applyProps(this.light, this.shadow);
            }
            return __classPrivateFieldGet(this, _NgtLight_light, "f");
        };
        objectController.readyFn = () => {
            this.ready.emit(this.light);
        };
    }
    set lightArgs(v) {
        __classPrivateFieldSet(this, _NgtLight_lightArgs, Array.isArray(v) ? v : [v], "f");
        this.ngZone.runOutsideAngular(() => {
            this.objectController.init();
        });
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            if (!__classPrivateFieldGet(this, _NgtLight_light, "f")) {
                this.objectController.init();
            }
        });
    }
    get light() {
        return __classPrivateFieldGet(this, _NgtLight_light, "f");
    }
}
_NgtLight_lightArgs = new WeakMap(), _NgtLight_light = new WeakMap();
NgtLight.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtLight, deps: [{ token: NGT_OBJECT_WATCHED_CONTROLLER }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });
NgtLight.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtLight, inputs: { intensity: "intensity", shadow: "shadow" }, outputs: { ready: "ready" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtLight, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i1.NgtObject3dController, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_WATCHED_CONTROLLER]
                }] }, { type: i0.NgZone }]; }, propDecorators: { ready: [{
                type: Output
            }], intensity: [{
                type: Input
            }], shadow: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlnaHQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvdGhyZWUvbGlnaHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixNQUFNLEVBQ04sS0FBSyxFQUNMLE1BQU0sRUFFTixNQUFNLEdBQ1AsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUNMLDZCQUE2QixFQUM3QixxQkFBcUIsR0FDdEIsTUFBTSxxQ0FBcUMsQ0FBQztBQUU3QyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7OztBQUdsRCxNQUFNLE9BQWdCLFFBQVE7SUFVNUIsWUFFWSxnQkFBdUMsRUFDdkMsTUFBYztRQURkLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBdUI7UUFDdkMsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQVZoQixVQUFLLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQThCN0MsOEJBQXdCLEVBQUUsRUFBQztRQVEzQixrQ0FBZ0I7UUExQmQsZ0JBQWdCLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRTtZQUM3Qix1QkFBQSxJQUFJLG1CQUFVLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLHVCQUFBLElBQUksMkJBQVcsQ0FBQyxNQUFBLENBQUM7WUFDckQsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNsQixVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQzthQUN2RDtZQUVELElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtnQkFDZixVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsTUFBa0MsQ0FBQyxDQUFDO2FBQ2pFO1lBRUQsT0FBTyx1QkFBQSxJQUFJLHVCQUFPLENBQUM7UUFDckIsQ0FBQyxDQUFDO1FBRUYsZ0JBQWdCLENBQUMsT0FBTyxHQUFHLEdBQUcsRUFBRTtZQUM5QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDOUIsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUdELElBQWMsU0FBUyxDQUFDLENBQXNCO1FBQzVDLHVCQUFBLElBQUksdUJBQWMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFBLENBQUM7UUFDN0MsSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDO1FBQy9CLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUlELFFBQVE7UUFDTixJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtZQUNqQyxJQUFJLENBQUMsdUJBQUEsSUFBSSx1QkFBTyxFQUFFO2dCQUNoQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLENBQUM7YUFDOUI7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLHVCQUFBLElBQUksdUJBQU8sQ0FBQztJQUNyQixDQUFDOzs7cUdBckRtQixRQUFRLGtCQVdsQiw2QkFBNkI7eUZBWG5CLFFBQVE7MkZBQVIsUUFBUTtrQkFEN0IsU0FBUzs7MEJBWUwsTUFBTTsyQkFBQyw2QkFBNkI7aUVBUjdCLEtBQUs7c0JBQWQsTUFBTTtnQkFJRSxTQUFTO3NCQUFqQixLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIERpcmVjdGl2ZSxcbiAgRXZlbnRFbWl0dGVyLFxuICBJbmplY3QsXG4gIElucHV0LFxuICBOZ1pvbmUsXG4gIE9uSW5pdCxcbiAgT3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCB7XG4gIE5HVF9PQkpFQ1RfV0FUQ0hFRF9DT05UUk9MTEVSLFxuICBOZ3RPYmplY3QzZENvbnRyb2xsZXIsXG59IGZyb20gJy4uL2NvbnRyb2xsZXJzL29iamVjdC0zZC5jb250cm9sbGVyJztcbmltcG9ydCB0eXBlIHsgQW55Q29uc3RydWN0b3IsIFVua25vd25SZWNvcmQgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBhcHBseVByb3BzIH0gZnJvbSAnLi4vdXRpbHMvYXBwbHktcHJvcHMnO1xuXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBOZ3RMaWdodDxUTGlnaHQgZXh0ZW5kcyBUSFJFRS5MaWdodCA9IFRIUkVFLkxpZ2h0PlxuICBpbXBsZW1lbnRzIE9uSW5pdFxue1xuICBAT3V0cHV0KCkgcmVhZHkgPSBuZXcgRXZlbnRFbWl0dGVyPFRMaWdodD4oKTtcblxuICBhYnN0cmFjdCBsaWdodFR5cGU6IEFueUNvbnN0cnVjdG9yPFRMaWdodD47XG5cbiAgQElucHV0KCkgaW50ZW5zaXR5PzogbnVtYmVyO1xuICBASW5wdXQoKSBzaGFkb3c/OiBQYXJ0aWFsPFRIUkVFLkxpZ2h0U2hhZG93PjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KE5HVF9PQkpFQ1RfV0FUQ0hFRF9DT05UUk9MTEVSKVxuICAgIHByb3RlY3RlZCBvYmplY3RDb250cm9sbGVyOiBOZ3RPYmplY3QzZENvbnRyb2xsZXIsXG4gICAgcHJvdGVjdGVkIG5nWm9uZTogTmdab25lXG4gICkge1xuICAgIG9iamVjdENvbnRyb2xsZXIuaW5pdEZuID0gKCkgPT4ge1xuICAgICAgdGhpcy4jbGlnaHQgPSBuZXcgdGhpcy5saWdodFR5cGUoLi4udGhpcy4jbGlnaHRBcmdzKTtcbiAgICAgIGlmICh0aGlzLmludGVuc2l0eSkge1xuICAgICAgICBhcHBseVByb3BzKHRoaXMubGlnaHQsIHsgaW50ZW5zaXR5OiB0aGlzLmludGVuc2l0eSB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuc2hhZG93KSB7XG4gICAgICAgIGFwcGx5UHJvcHModGhpcy5saWdodCwgdGhpcy5zaGFkb3cgYXMgdW5rbm93biBhcyBVbmtub3duUmVjb3JkKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuI2xpZ2h0O1xuICAgIH07XG5cbiAgICBvYmplY3RDb250cm9sbGVyLnJlYWR5Rm4gPSAoKSA9PiB7XG4gICAgICB0aGlzLnJlYWR5LmVtaXQodGhpcy5saWdodCk7XG4gICAgfTtcbiAgfVxuXG4gICNsaWdodEFyZ3M6IHVua25vd25bXSA9IFtdO1xuICBwcm90ZWN0ZWQgc2V0IGxpZ2h0QXJncyh2OiB1bmtub3duIHwgdW5rbm93bltdKSB7XG4gICAgdGhpcy4jbGlnaHRBcmdzID0gQXJyYXkuaXNBcnJheSh2KSA/IHYgOiBbdl07XG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgdGhpcy5vYmplY3RDb250cm9sbGVyLmluaXQoKTtcbiAgICB9KTtcbiAgfVxuXG4gICNsaWdodCE6IFRMaWdodDtcblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMuI2xpZ2h0KSB7XG4gICAgICAgIHRoaXMub2JqZWN0Q29udHJvbGxlci5pbml0KCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBnZXQgbGlnaHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuI2xpZ2h0O1xuICB9XG59XG4iXX0=