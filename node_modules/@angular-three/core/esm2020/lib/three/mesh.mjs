import { Directive, EventEmitter, Inject, NgZone, Optional, Output, } from '@angular/core';
import { NGT_MATERIAL_GEOMETRY_WATCHED_CONTROLLER, NgtMaterialGeometryController, } from '../controllers/material-geometry.controller';
import * as i0 from "@angular/core";
import * as i1 from "../controllers/material-geometry.controller";
export class NgtCommonMesh {
    constructor(materialGeometryController, ngZone) {
        this.materialGeometryController = materialGeometryController;
        this.ngZone = ngZone;
        this.ready = new EventEmitter();
        if (materialGeometryController) {
            materialGeometryController.readyFn = () => {
                this.ready.emit(this.mesh);
            };
        }
    }
    get mesh() {
        return this.materialGeometryController.objectController.object3d;
    }
}
NgtCommonMesh.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCommonMesh, deps: [{ token: NGT_MATERIAL_GEOMETRY_WATCHED_CONTROLLER, optional: true }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });
NgtCommonMesh.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtCommonMesh, outputs: { ready: "ready" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCommonMesh, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i1.NgtMaterialGeometryController, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [NGT_MATERIAL_GEOMETRY_WATCHED_CONTROLLER]
                }] }, { type: i0.NgZone }]; }, propDecorators: { ready: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi90aHJlZS9tZXNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsWUFBWSxFQUNaLE1BQU0sRUFDTixNQUFNLEVBQ04sUUFBUSxFQUNSLE1BQU0sR0FDUCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQ0wsd0NBQXdDLEVBQ3hDLDZCQUE2QixHQUM5QixNQUFNLDZDQUE2QyxDQUFDOzs7QUFHckQsTUFBTSxPQUFnQixhQUFhO0lBR2pDLFlBR1ksMEJBQXlELEVBQ3pELE1BQWM7UUFEZCwrQkFBMEIsR0FBMUIsMEJBQTBCLENBQStCO1FBQ3pELFdBQU0sR0FBTixNQUFNLENBQVE7UUFOaEIsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFTLENBQUM7UUFRMUMsSUFBSSwwQkFBMEIsRUFBRTtZQUM5QiwwQkFBMEIsQ0FBQyxPQUFPLEdBQUcsR0FBRyxFQUFFO2dCQUN4QyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDN0IsQ0FBQyxDQUFDO1NBQ0g7SUFDSCxDQUFDO0lBRUQsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsMEJBQTBCLENBQUMsZ0JBQWdCLENBQUMsUUFBaUIsQ0FBQztJQUM1RSxDQUFDOzswR0FsQm1CLGFBQWEsa0JBS3ZCLHdDQUF3Qzs4RkFMOUIsYUFBYTsyRkFBYixhQUFhO2tCQURsQyxTQUFTOzswQkFLTCxRQUFROzswQkFDUixNQUFNOzJCQUFDLHdDQUF3QztpRUFKeEMsS0FBSztzQkFBZCxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBFdmVudEVtaXR0ZXIsXG4gIEluamVjdCxcbiAgTmdab25lLFxuICBPcHRpb25hbCxcbiAgT3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCB7XG4gIE5HVF9NQVRFUklBTF9HRU9NRVRSWV9XQVRDSEVEX0NPTlRST0xMRVIsXG4gIE5ndE1hdGVyaWFsR2VvbWV0cnlDb250cm9sbGVyLFxufSBmcm9tICcuLi9jb250cm9sbGVycy9tYXRlcmlhbC1nZW9tZXRyeS5jb250cm9sbGVyJztcblxuQERpcmVjdGl2ZSgpXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgTmd0Q29tbW9uTWVzaDxUTWVzaCBleHRlbmRzIFRIUkVFLk1lc2ggPSBUSFJFRS5NZXNoPiB7XG4gIEBPdXRwdXQoKSByZWFkeSA9IG5ldyBFdmVudEVtaXR0ZXI8VE1lc2g+KCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQE9wdGlvbmFsKClcbiAgICBASW5qZWN0KE5HVF9NQVRFUklBTF9HRU9NRVRSWV9XQVRDSEVEX0NPTlRST0xMRVIpXG4gICAgcHJvdGVjdGVkIG1hdGVyaWFsR2VvbWV0cnlDb250cm9sbGVyOiBOZ3RNYXRlcmlhbEdlb21ldHJ5Q29udHJvbGxlcixcbiAgICBwcm90ZWN0ZWQgbmdab25lOiBOZ1pvbmVcbiAgKSB7XG4gICAgaWYgKG1hdGVyaWFsR2VvbWV0cnlDb250cm9sbGVyKSB7XG4gICAgICBtYXRlcmlhbEdlb21ldHJ5Q29udHJvbGxlci5yZWFkeUZuID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnJlYWR5LmVtaXQodGhpcy5tZXNoKTtcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgZ2V0IG1lc2goKSB7XG4gICAgcmV0dXJuIHRoaXMubWF0ZXJpYWxHZW9tZXRyeUNvbnRyb2xsZXIub2JqZWN0Q29udHJvbGxlci5vYmplY3QzZCBhcyBUTWVzaDtcbiAgfVxufVxuIl19