var _NgtMaterial_instances, _NgtMaterial_parameters, _NgtMaterial_material, _NgtMaterial_convertColorToLinear;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { Directive, EventEmitter, Inject, Input, NgZone, Optional, Output, } from '@angular/core';
import { requestAnimationFrame } from '@rx-angular/cdk/zone-less';
import { NgtContentMaterialController } from '../controllers/content-material.controller';
import { NGT_OBJECT_3D } from '../di/object3d';
import { NgtStore } from '../stores/store';
import { makeColor } from '../utils/make';
import * as i0 from "@angular/core";
import * as i1 from "../stores/store";
import * as i2 from "../controllers/content-material.controller";
export class NgtMaterial {
    constructor(ngZone, store, parentObject, contentMaterialController) {
        this.ngZone = ngZone;
        this.store = store;
        this.parentObject = parentObject;
        this.contentMaterialController = contentMaterialController;
        _NgtMaterial_instances.add(this);
        this.ready = new EventEmitter();
        _NgtMaterial_parameters.set(this, void 0);
        _NgtMaterial_material.set(this, void 0);
    }
    set parameters(v) {
        requestAnimationFrame(() => {
            __classPrivateFieldSet(this, _NgtMaterial_parameters, v, "f");
            if (v && this.material) {
                __classPrivateFieldGet(this, _NgtMaterial_instances, "m", _NgtMaterial_convertColorToLinear).call(this, v);
                this.material.setValues(v);
                this.material.needsUpdate = true;
            }
        });
    }
    get parameters() {
        return __classPrivateFieldGet(this, _NgtMaterial_parameters, "f");
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            if (this.parameters) {
                __classPrivateFieldGet(this, _NgtMaterial_instances, "m", _NgtMaterial_convertColorToLinear).call(this, this.parameters);
            }
            __classPrivateFieldSet(this, _NgtMaterial_material, new this.materialType(this.parameters), "f");
            requestAnimationFrame(() => {
                const parentObject = this.parentObject();
                if (parentObject) {
                    if (this.contentMaterialController &&
                        this.contentMaterialController.isMaterialArray) {
                        if (!Array.isArray(parentObject.material)) {
                            parentObject.material = [];
                        }
                        parentObject.material.push(this.material);
                    }
                    else {
                        parentObject.material = this.material;
                    }
                }
                this.ready.emit(this.material);
            });
        });
    }
    get material() {
        return __classPrivateFieldGet(this, _NgtMaterial_material, "f");
    }
    ngOnDestroy() {
        this.ngZone.runOutsideAngular(() => {
            if (this.material) {
                this.material.dispose();
            }
        });
    }
}
_NgtMaterial_parameters = new WeakMap(), _NgtMaterial_material = new WeakMap(), _NgtMaterial_instances = new WeakSet(), _NgtMaterial_convertColorToLinear = function _NgtMaterial_convertColorToLinear(parameters) {
    if ('color' in parameters) {
        const colorParams = parameters['color'];
        parameters['color'] = makeColor(colorParams);
        if (!this.store.get('linear')) {
            parameters['color'].convertSRGBToLinear();
        }
    }
};
NgtMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtMaterial, deps: [{ token: i0.NgZone }, { token: i1.NgtStore }, { token: NGT_OBJECT_3D }, { token: i2.NgtContentMaterialController, optional: true }], target: i0.ɵɵFactoryTarget.Directive });
NgtMaterial.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtMaterial, inputs: { parameters: "parameters" }, outputs: { ready: "ready" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtMaterial, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.NgtStore }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_3D]
                }] }, { type: i2.NgtContentMaterialController, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { ready: [{
                type: Output
            }], parameters: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0ZXJpYWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvdGhyZWUvbWF0ZXJpYWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixNQUFNLEVBQ04sS0FBSyxFQUNMLE1BQU0sRUFHTixRQUFRLEVBQ1IsTUFBTSxHQUNQLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRWxFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQzFGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFPM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQUcxQyxNQUFNLE9BQWdCLFdBQVc7SUF3Qi9CLFlBQ1ksTUFBYyxFQUNkLEtBQWUsRUFDUSxZQUF5QyxFQUVoRSx5QkFBdUQ7UUFKdkQsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLFVBQUssR0FBTCxLQUFLLENBQVU7UUFDUSxpQkFBWSxHQUFaLFlBQVksQ0FBNkI7UUFFaEUsOEJBQXlCLEdBQXpCLHlCQUF5QixDQUE4Qjs7UUF4QnpELFVBQUssR0FBRyxJQUFJLFlBQVksRUFBYSxDQUFDO1FBaUJoRCwwQ0FBa0M7UUFzQ2xDLHdDQUFzQjtJQTlCbkIsQ0FBQztJQXZCSixJQUFhLFVBQVUsQ0FBQyxDQUFrQztRQUN4RCxxQkFBcUIsQ0FBQyxHQUFHLEVBQUU7WUFDekIsdUJBQUEsSUFBSSwyQkFBZSxDQUFDLE1BQUEsQ0FBQztZQUNyQixJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO2dCQUN0Qix1QkFBQSxJQUFJLGlFQUFzQixNQUExQixJQUFJLEVBQXVCLENBQUMsQ0FBQyxDQUFDO2dCQUM5QixJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO2FBQ2xDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsSUFBSSxVQUFVO1FBQ1osT0FBTyx1QkFBQSxJQUFJLCtCQUFZLENBQUM7SUFDMUIsQ0FBQztJQWNELFFBQVE7UUFDTixJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtZQUNqQyxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7Z0JBQ25CLHVCQUFBLElBQUksaUVBQXNCLE1BQTFCLElBQUksRUFBdUIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2FBQzdDO1lBQ0QsdUJBQUEsSUFBSSx5QkFBYSxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFBLENBQUM7WUFDeEQscUJBQXFCLENBQUMsR0FBRyxFQUFFO2dCQUN6QixNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxFQUFnQixDQUFDO2dCQUN2RCxJQUFJLFlBQVksRUFBRTtvQkFDaEIsSUFDRSxJQUFJLENBQUMseUJBQXlCO3dCQUM5QixJQUFJLENBQUMseUJBQXlCLENBQUMsZUFBZSxFQUM5Qzt3QkFDQSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLEVBQUU7NEJBQ3pDLFlBQVksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO3lCQUM1Qjt3QkFDQSxZQUFZLENBQUMsUUFBNkIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO3FCQUNqRTt5QkFBTTt3QkFDTCxZQUFZLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7cUJBQ3ZDO2lCQUNGO2dCQUNELElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNqQyxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUdELElBQUksUUFBUTtRQUNWLE9BQU8sdUJBQUEsSUFBSSw2QkFBVSxDQUFDO0lBQ3hCLENBQUM7SUFlRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO2dCQUNqQixJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO2FBQ3pCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOzt1TUFuQnFCLFVBQStCO0lBQ25ELElBQUksT0FBTyxJQUFJLFVBQVUsRUFBRTtRQUN6QixNQUFNLFdBQVcsR0FBSSxVQUE0QixDQUFDLE9BQU8sQ0FBYSxDQUFDO1FBQ3RFLFVBQTRCLENBQUMsT0FBTyxDQUFDLEdBQUcsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBRWhFLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUUxQixVQUE0QixDQUFDLE9BQU8sQ0FDdEMsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1NBQ3pCO0tBQ0Y7QUFDSCxDQUFDO3dHQTVFbUIsV0FBVyxnRUEyQnJCLGFBQWE7NEZBM0JILFdBQVc7MkZBQVgsV0FBVztrQkFEaEMsU0FBUzs7MEJBNEJMLE1BQU07MkJBQUMsYUFBYTs7MEJBQ3BCLFFBQVE7NENBdkJELEtBQUs7c0JBQWQsTUFBTTtnQkFFTSxVQUFVO3NCQUF0QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBFdmVudEVtaXR0ZXIsXG4gIEluamVjdCxcbiAgSW5wdXQsXG4gIE5nWm9uZSxcbiAgT25EZXN0cm95LFxuICBPbkluaXQsXG4gIE9wdGlvbmFsLFxuICBPdXRwdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgcmVxdWVzdEFuaW1hdGlvbkZyYW1lIH0gZnJvbSAnQHJ4LWFuZ3VsYXIvY2RrL3pvbmUtbGVzcyc7XG5pbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XG5pbXBvcnQgeyBOZ3RDb250ZW50TWF0ZXJpYWxDb250cm9sbGVyIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvY29udGVudC1tYXRlcmlhbC5jb250cm9sbGVyJztcbmltcG9ydCB7IE5HVF9PQkpFQ1RfM0QgfSBmcm9tICcuLi9kaS9vYmplY3QzZCc7XG5pbXBvcnQgeyBOZ3RTdG9yZSB9IGZyb20gJy4uL3N0b3Jlcy9zdG9yZSc7XG5pbXBvcnQgdHlwZSB7XG4gIEFueUNvbnN0cnVjdG9yLFxuICBBbnlGdW5jdGlvbixcbiAgTmd0Q29sb3IsXG4gIFVua25vd25SZWNvcmQsXG59IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IG1ha2VDb2xvciB9IGZyb20gJy4uL3V0aWxzL21ha2UnO1xuXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBOZ3RNYXRlcmlhbDxcbiAgVE1hdGVyaWFsUGFyYW1ldGVycyBleHRlbmRzIFRIUkVFLk1hdGVyaWFsUGFyYW1ldGVycyA9IFRIUkVFLk1hdGVyaWFsUGFyYW1ldGVycyxcbiAgVE1hdGVyaWFsIGV4dGVuZHMgVEhSRUUuTWF0ZXJpYWwgPSBUSFJFRS5NYXRlcmlhbFxuPiBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95XG57XG4gIEBPdXRwdXQoKSByZWFkeSA9IG5ldyBFdmVudEVtaXR0ZXI8VE1hdGVyaWFsPigpO1xuXG4gIEBJbnB1dCgpIHNldCBwYXJhbWV0ZXJzKHY6IFRNYXRlcmlhbFBhcmFtZXRlcnMgfCB1bmRlZmluZWQpIHtcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgdGhpcy4jcGFyYW1ldGVycyA9IHY7XG4gICAgICBpZiAodiAmJiB0aGlzLm1hdGVyaWFsKSB7XG4gICAgICAgIHRoaXMuI2NvbnZlcnRDb2xvclRvTGluZWFyKHYpO1xuICAgICAgICB0aGlzLm1hdGVyaWFsLnNldFZhbHVlcyh2KTtcbiAgICAgICAgdGhpcy5tYXRlcmlhbC5uZWVkc1VwZGF0ZSA9IHRydWU7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBnZXQgcGFyYW1ldGVycygpOiBUTWF0ZXJpYWxQYXJhbWV0ZXJzIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy4jcGFyYW1ldGVycztcbiAgfVxuXG4gICNwYXJhbWV0ZXJzPzogVE1hdGVyaWFsUGFyYW1ldGVycztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgbmdab25lOiBOZ1pvbmUsXG4gICAgcHJvdGVjdGVkIHN0b3JlOiBOZ3RTdG9yZSxcbiAgICBASW5qZWN0KE5HVF9PQkpFQ1RfM0QpIHByb3RlY3RlZCBwYXJlbnRPYmplY3Q6IEFueUZ1bmN0aW9uPFRIUkVFLk9iamVjdDNEPixcbiAgICBAT3B0aW9uYWwoKVxuICAgIHByb3RlY3RlZCBjb250ZW50TWF0ZXJpYWxDb250cm9sbGVyOiBOZ3RDb250ZW50TWF0ZXJpYWxDb250cm9sbGVyXG4gICkge31cblxuICBhYnN0cmFjdCBtYXRlcmlhbFR5cGU6IEFueUNvbnN0cnVjdG9yPFRNYXRlcmlhbD47XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgaWYgKHRoaXMucGFyYW1ldGVycykge1xuICAgICAgICB0aGlzLiNjb252ZXJ0Q29sb3JUb0xpbmVhcih0aGlzLnBhcmFtZXRlcnMpO1xuICAgICAgfVxuICAgICAgdGhpcy4jbWF0ZXJpYWwgPSBuZXcgdGhpcy5tYXRlcmlhbFR5cGUodGhpcy5wYXJhbWV0ZXJzKTtcbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBhcmVudE9iamVjdCA9IHRoaXMucGFyZW50T2JqZWN0KCkgYXMgVEhSRUUuTWVzaDtcbiAgICAgICAgaWYgKHBhcmVudE9iamVjdCkge1xuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIHRoaXMuY29udGVudE1hdGVyaWFsQ29udHJvbGxlciAmJlxuICAgICAgICAgICAgdGhpcy5jb250ZW50TWF0ZXJpYWxDb250cm9sbGVyLmlzTWF0ZXJpYWxBcnJheVxuICAgICAgICAgICkge1xuICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHBhcmVudE9iamVjdC5tYXRlcmlhbCkpIHtcbiAgICAgICAgICAgICAgcGFyZW50T2JqZWN0Lm1hdGVyaWFsID0gW107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAocGFyZW50T2JqZWN0Lm1hdGVyaWFsIGFzIFRIUkVFLk1hdGVyaWFsW10pLnB1c2godGhpcy5tYXRlcmlhbCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhcmVudE9iamVjdC5tYXRlcmlhbCA9IHRoaXMubWF0ZXJpYWw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMucmVhZHkuZW1pdCh0aGlzLm1hdGVyaWFsKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgI21hdGVyaWFsITogVE1hdGVyaWFsO1xuICBnZXQgbWF0ZXJpYWwoKTogVE1hdGVyaWFsIHtcbiAgICByZXR1cm4gdGhpcy4jbWF0ZXJpYWw7XG4gIH1cblxuICAjY29udmVydENvbG9yVG9MaW5lYXIocGFyYW1ldGVyczogVE1hdGVyaWFsUGFyYW1ldGVycykge1xuICAgIGlmICgnY29sb3InIGluIHBhcmFtZXRlcnMpIHtcbiAgICAgIGNvbnN0IGNvbG9yUGFyYW1zID0gKHBhcmFtZXRlcnMgYXMgVW5rbm93blJlY29yZClbJ2NvbG9yJ10gYXMgTmd0Q29sb3I7XG4gICAgICAocGFyYW1ldGVycyBhcyBVbmtub3duUmVjb3JkKVsnY29sb3InXSA9IG1ha2VDb2xvcihjb2xvclBhcmFtcyk7XG5cbiAgICAgIGlmICghdGhpcy5zdG9yZS5nZXQoJ2xpbmVhcicpKSB7XG4gICAgICAgIChcbiAgICAgICAgICAocGFyYW1ldGVycyBhcyBVbmtub3duUmVjb3JkKVsnY29sb3InXSBhcyBUSFJFRS5Db2xvclxuICAgICAgICApLmNvbnZlcnRTUkdCVG9MaW5lYXIoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICBpZiAodGhpcy5tYXRlcmlhbCkge1xuICAgICAgICB0aGlzLm1hdGVyaWFsLmRpc3Bvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIl19