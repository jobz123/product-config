var _NgtObjectHelper_object3d, _NgtObjectHelper_objectHelper;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { Directive, Inject, NgZone } from '@angular/core';
import { requestAnimationFrame } from '@rx-angular/cdk/zone-less';
import { NGT_OBJECT_3D } from '../di/object3d';
import { NgtAnimationFrameStore } from '../stores/animation-frame.store';
import { EnhancedRxState } from '../stores/enhanced-rx-state';
import { NgtStore } from '../stores/store';
import * as i0 from "@angular/core";
import * as i1 from "../stores/store";
import * as i2 from "../stores/animation-frame.store";
export class NgtObjectHelper extends EnhancedRxState {
    constructor(object3dFn, store, animationFrameStore, ngZone) {
        super();
        this.object3dFn = object3dFn;
        this.store = store;
        this.animationFrameStore = animationFrameStore;
        this.ngZone = ngZone;
        _NgtObjectHelper_object3d.set(this, void 0);
        _NgtObjectHelper_objectHelper.set(this, void 0);
        this.set({ args: [] });
    }
    set objectHelperArgs(v) {
        this.set({ args: Array.isArray(v) ? v : [v] });
    }
    ngOnInit() {
        requestAnimationFrame(() => {
            __classPrivateFieldSet(this, _NgtObjectHelper_object3d, this.object3dFn(), "f");
            if (!__classPrivateFieldGet(this, _NgtObjectHelper_object3d, "f")) {
                console.info('Parent is not an object3d');
                return;
            }
            this.holdEffect(this.select('args'), (args) => {
                __classPrivateFieldSet(this, _NgtObjectHelper_objectHelper, new this.objectHelperType(__classPrivateFieldGet(this, _NgtObjectHelper_object3d, "f"), ...args), "f");
                this.store.get('scene').add(this.objectHelper);
                const animationUuid = this.animationFrameStore.register({
                    callback: () => {
                        if (this.objectHelper) {
                            this.objectHelper.update();
                        }
                    },
                });
                return () => {
                    if (this.objectHelper) {
                        this.store.get('scene').remove(this.objectHelper);
                        this.animationFrameStore.actions.unsubscriberUuid(animationUuid);
                    }
                };
            });
        });
    }
    get objectHelper() {
        return __classPrivateFieldGet(this, _NgtObjectHelper_objectHelper, "f");
    }
}
_NgtObjectHelper_object3d = new WeakMap(), _NgtObjectHelper_objectHelper = new WeakMap();
NgtObjectHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtObjectHelper, deps: [{ token: NGT_OBJECT_3D }, { token: i1.NgtStore }, { token: i2.NgtAnimationFrameStore }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });
NgtObjectHelper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtObjectHelper, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtObjectHelper, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_3D]
                }] }, { type: i1.NgtStore }, { type: i2.NgtAnimationFrameStore }, { type: i0.NgZone }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2JqZWN0LWhlbHBlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi90aHJlZS9vYmplY3QtaGVscGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRWxFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN6RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7O0FBSTNDLE1BQU0sT0FBZ0IsZUFDcEIsU0FBUSxlQUFvQztJQVc1QyxZQUVZLFVBQXVDLEVBQ3ZDLEtBQWUsRUFDZixtQkFBMkMsRUFDM0MsTUFBYztRQUV4QixLQUFLLEVBQUUsQ0FBQztRQUxFLGVBQVUsR0FBVixVQUFVLENBQTZCO1FBQ3ZDLFVBQUssR0FBTCxLQUFLLENBQVU7UUFDZix3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXdCO1FBQzNDLFdBQU0sR0FBTixNQUFNLENBQVE7UUFQMUIsNENBQTJCO1FBOEMzQixnREFBOEI7UUFwQzVCLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBZkQsSUFBYyxnQkFBZ0IsQ0FBQyxDQUFzQjtRQUNuRCxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQWVELFFBQVE7UUFDTixxQkFBcUIsQ0FBQyxHQUFHLEVBQUU7WUFDekIsdUJBQUEsSUFBSSw2QkFBYSxJQUFJLENBQUMsVUFBVSxFQUFFLE1BQUEsQ0FBQztZQUVuQyxJQUFJLENBQUMsdUJBQUEsSUFBSSxpQ0FBVSxFQUFFO2dCQUNuQixPQUFPLENBQUMsSUFBSSxDQUFDLDJCQUEyQixDQUFDLENBQUM7Z0JBQzFDLE9BQU87YUFDUjtZQUVELElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFO2dCQUM1Qyx1QkFBQSxJQUFJLGlDQUFpQixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyx1QkFBQSxJQUFJLGlDQUFVLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBQSxDQUFDO2dCQUV4RSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQWEsQ0FBQyxDQUFDO2dCQUNoRCxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsUUFBUSxDQUFDO29CQUN0RCxRQUFRLEVBQUUsR0FBRyxFQUFFO3dCQUNiLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTs0QkFFbkIsSUFBSSxDQUFDLFlBQ04sQ0FBQyxNQUFNLEVBQUUsQ0FBQzt5QkFDWjtvQkFDSCxDQUFDO2lCQUNGLENBQUMsQ0FBQztnQkFFSCxPQUFPLEdBQUcsRUFBRTtvQkFDVixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7d0JBQ3JCLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7d0JBQ2xELElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxDQUFDLENBQUM7cUJBQ2xFO2dCQUNILENBQUMsQ0FBQztZQUNKLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBR0QsSUFBSSxZQUFZO1FBQ2QsT0FBTyx1QkFBQSxJQUFJLHFDQUFjLENBQUM7SUFDNUIsQ0FBQzs7OzRHQTNEbUIsZUFBZSxrQkFhekIsYUFBYTtnR0FiSCxlQUFlOzJGQUFmLGVBQWU7a0JBRHBDLFNBQVM7OzBCQWNMLE1BQU07MkJBQUMsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5qZWN0LCBOZ1pvbmUsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgcmVxdWVzdEFuaW1hdGlvbkZyYW1lIH0gZnJvbSAnQHJ4LWFuZ3VsYXIvY2RrL3pvbmUtbGVzcyc7XG5pbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XG5pbXBvcnQgeyBOR1RfT0JKRUNUXzNEIH0gZnJvbSAnLi4vZGkvb2JqZWN0M2QnO1xuaW1wb3J0IHsgTmd0QW5pbWF0aW9uRnJhbWVTdG9yZSB9IGZyb20gJy4uL3N0b3Jlcy9hbmltYXRpb24tZnJhbWUuc3RvcmUnO1xuaW1wb3J0IHsgRW5oYW5jZWRSeFN0YXRlIH0gZnJvbSAnLi4vc3RvcmVzL2VuaGFuY2VkLXJ4LXN0YXRlJztcbmltcG9ydCB7IE5ndFN0b3JlIH0gZnJvbSAnLi4vc3RvcmVzL3N0b3JlJztcbmltcG9ydCB7IEFueUNvbnN0cnVjdG9yLCBBbnlGdW5jdGlvbiB9IGZyb20gJy4uL3R5cGVzJztcblxuQERpcmVjdGl2ZSgpXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgTmd0T2JqZWN0SGVscGVyPFRPYmplY3RIZWxwZXIgZXh0ZW5kcyBUSFJFRS5PYmplY3QzRD5cbiAgZXh0ZW5kcyBFbmhhbmNlZFJ4U3RhdGU8eyBhcmdzOiB1bmtub3duW10gfT5cbiAgaW1wbGVtZW50cyBPbkluaXRcbntcbiAgYWJzdHJhY3Qgb2JqZWN0SGVscGVyVHlwZTogQW55Q29uc3RydWN0b3I8VE9iamVjdEhlbHBlcj47XG5cbiAgcHJvdGVjdGVkIHNldCBvYmplY3RIZWxwZXJBcmdzKHY6IHVua25vd24gfCB1bmtub3duW10pIHtcbiAgICB0aGlzLnNldCh7IGFyZ3M6IEFycmF5LmlzQXJyYXkodikgPyB2IDogW3ZdIH0pO1xuICB9XG5cbiAgI29iamVjdDNkPzogVEhSRUUuT2JqZWN0M0Q7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChOR1RfT0JKRUNUXzNEKVxuICAgIHByb3RlY3RlZCBvYmplY3QzZEZuOiBBbnlGdW5jdGlvbjxUSFJFRS5PYmplY3QzRD4sXG4gICAgcHJvdGVjdGVkIHN0b3JlOiBOZ3RTdG9yZSxcbiAgICBwcm90ZWN0ZWQgYW5pbWF0aW9uRnJhbWVTdG9yZTogTmd0QW5pbWF0aW9uRnJhbWVTdG9yZSxcbiAgICBwcm90ZWN0ZWQgbmdab25lOiBOZ1pvbmVcbiAgKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnNldCh7IGFyZ3M6IFtdIH0pO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgIHRoaXMuI29iamVjdDNkID0gdGhpcy5vYmplY3QzZEZuKCk7XG5cbiAgICAgIGlmICghdGhpcy4jb2JqZWN0M2QpIHtcbiAgICAgICAgY29uc29sZS5pbmZvKCdQYXJlbnQgaXMgbm90IGFuIG9iamVjdDNkJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5ob2xkRWZmZWN0KHRoaXMuc2VsZWN0KCdhcmdzJyksIChhcmdzKSA9PiB7XG4gICAgICAgIHRoaXMuI29iamVjdEhlbHBlciA9IG5ldyB0aGlzLm9iamVjdEhlbHBlclR5cGUodGhpcy4jb2JqZWN0M2QsIC4uLmFyZ3MpO1xuXG4gICAgICAgIHRoaXMuc3RvcmUuZ2V0KCdzY2VuZScpLmFkZCh0aGlzLm9iamVjdEhlbHBlciEpO1xuICAgICAgICBjb25zdCBhbmltYXRpb25VdWlkID0gdGhpcy5hbmltYXRpb25GcmFtZVN0b3JlLnJlZ2lzdGVyKHtcbiAgICAgICAgICBjYWxsYmFjazogKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMub2JqZWN0SGVscGVyKSB7XG4gICAgICAgICAgICAgIChcbiAgICAgICAgICAgICAgICB0aGlzLm9iamVjdEhlbHBlciBhcyBUT2JqZWN0SGVscGVyICYgeyB1cGRhdGU6ICgpID0+IHZvaWQgfVxuICAgICAgICAgICAgICApLnVwZGF0ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMub2JqZWN0SGVscGVyKSB7XG4gICAgICAgICAgICB0aGlzLnN0b3JlLmdldCgnc2NlbmUnKS5yZW1vdmUodGhpcy5vYmplY3RIZWxwZXIpO1xuICAgICAgICAgICAgdGhpcy5hbmltYXRpb25GcmFtZVN0b3JlLmFjdGlvbnMudW5zdWJzY3JpYmVyVXVpZChhbmltYXRpb25VdWlkKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gICNvYmplY3RIZWxwZXI/OiBUT2JqZWN0SGVscGVyO1xuICBnZXQgb2JqZWN0SGVscGVyKCkge1xuICAgIHJldHVybiB0aGlzLiNvYmplY3RIZWxwZXI7XG4gIH1cbn1cbiJdfQ==