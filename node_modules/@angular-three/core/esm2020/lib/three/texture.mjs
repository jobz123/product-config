var _NgtTexture_textureArgs, _NgtTexture_texture;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { Directive, EventEmitter, NgZone, Output, } from '@angular/core';
import * as i0 from "@angular/core";
export class NgtTexture {
    constructor(ngZone) {
        this.ngZone = ngZone;
        this.ready = new EventEmitter();
        _NgtTexture_textureArgs.set(this, []);
        _NgtTexture_texture.set(this, void 0);
    }
    set textureArgs(v) {
        __classPrivateFieldSet(this, _NgtTexture_textureArgs, Array.isArray(v) ? v : [v], "f");
        this.ngZone.runOutsideAngular(() => {
            __classPrivateFieldSet(this, _NgtTexture_texture, new this.textureType(...__classPrivateFieldGet(this, _NgtTexture_textureArgs, "f")), "f");
        });
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            if (!this.texture) {
                __classPrivateFieldSet(this, _NgtTexture_texture, new this.textureType(...__classPrivateFieldGet(this, _NgtTexture_textureArgs, "f")), "f");
                this.ready.emit(this.texture);
            }
        });
    }
    get texture() {
        return __classPrivateFieldGet(this, _NgtTexture_texture, "f");
    }
    ngOnDestroy() {
        this.ngZone.runOutsideAngular(() => {
            if (this.texture) {
                this.texture.dispose();
            }
        });
    }
}
_NgtTexture_textureArgs = new WeakMap(), _NgtTexture_texture = new WeakMap();
NgtTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTexture, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });
NgtTexture.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtTexture, outputs: { ready: "ready" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtTexture, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { ready: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dHVyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi90aHJlZS90ZXh0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxZQUFZLEVBQ1osTUFBTSxFQUdOLE1BQU0sR0FDUCxNQUFNLGVBQWUsQ0FBQzs7QUFLdkIsTUFBTSxPQUFnQixVQUFVO0lBTzlCLFlBQXNCLE1BQWM7UUFBZCxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBSjFCLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBWSxDQUFDO1FBTS9DLGtDQUEwQixFQUFFLEVBQUM7UUFTN0Isc0NBQW9CO0lBWG1CLENBQUM7SUFJeEMsSUFBYyxXQUFXLENBQUMsQ0FBc0I7UUFDOUMsdUJBQUEsSUFBSSwyQkFBZ0IsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFBLENBQUM7UUFDL0MsSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsdUJBQUEsSUFBSSx1QkFBWSxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyx1QkFBQSxJQUFJLCtCQUFhLENBQUMsTUFBQSxDQUFDO1FBQzdELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUlELFFBQVE7UUFDTixJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtZQUNqQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtnQkFDakIsdUJBQUEsSUFBSSx1QkFBWSxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyx1QkFBQSxJQUFJLCtCQUFhLENBQUMsTUFBQSxDQUFDO2dCQUMzRCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDL0I7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDVCxPQUFPLHVCQUFBLElBQUksMkJBQVMsQ0FBQztJQUN2QixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFO1lBQ2pDLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtnQkFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQzthQUN4QjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7O3VHQXZDbUIsVUFBVTsyRkFBVixVQUFVOzJGQUFWLFVBQVU7a0JBRC9CLFNBQVM7NkZBSUUsS0FBSztzQkFBZCxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBFdmVudEVtaXR0ZXIsXG4gIE5nWm9uZSxcbiAgT25EZXN0cm95LFxuICBPbkluaXQsXG4gIE91dHB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XG5pbXBvcnQgdHlwZSB7IEFueUNvbnN0cnVjdG9yIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBOZ3RUZXh0dXJlPFRUZXh0dXJlIGV4dGVuZHMgVEhSRUUuVGV4dHVyZSA9IFRIUkVFLlRleHR1cmU+XG4gIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3lcbntcbiAgQE91dHB1dCgpIHJlYWR5ID0gbmV3IEV2ZW50RW1pdHRlcjxUVGV4dHVyZT4oKTtcblxuICBhYnN0cmFjdCB0ZXh0dXJlVHlwZTogQW55Q29uc3RydWN0b3I8VFRleHR1cmU+O1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBuZ1pvbmU6IE5nWm9uZSkge31cblxuICAjdGV4dHVyZUFyZ3M6IHVua25vd25bXSA9IFtdO1xuXG4gIHByb3RlY3RlZCBzZXQgdGV4dHVyZUFyZ3ModjogdW5rbm93biB8IHVua25vd25bXSkge1xuICAgIHRoaXMuI3RleHR1cmVBcmdzID0gQXJyYXkuaXNBcnJheSh2KSA/IHYgOiBbdl07XG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgdGhpcy4jdGV4dHVyZSA9IG5ldyB0aGlzLnRleHR1cmVUeXBlKC4uLnRoaXMuI3RleHR1cmVBcmdzKTtcbiAgICB9KTtcbiAgfVxuXG4gICN0ZXh0dXJlPzogVFRleHR1cmU7XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLnRleHR1cmUpIHtcbiAgICAgICAgdGhpcy4jdGV4dHVyZSA9IG5ldyB0aGlzLnRleHR1cmVUeXBlKC4uLnRoaXMuI3RleHR1cmVBcmdzKTtcbiAgICAgICAgdGhpcy5yZWFkeS5lbWl0KHRoaXMudGV4dHVyZSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBnZXQgdGV4dHVyZSgpOiBUVGV4dHVyZSB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuI3RleHR1cmU7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICBpZiAodGhpcy50ZXh0dXJlKSB7XG4gICAgICAgIHRoaXMudGV4dHVyZS5kaXNwb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==