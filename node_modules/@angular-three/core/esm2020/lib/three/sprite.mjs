var _NgtCommonSprite_sprite;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { ContentChild, Directive, EventEmitter, Inject, Input, NgZone, Output, } from '@angular/core';
import * as THREE from 'three';
import { NGT_OBJECT_WATCHED_CONTROLLER, NgtObject3dController, } from '../controllers/object-3d.controller';
import { NgtMaterial } from './material';
import * as i0 from "@angular/core";
import * as i1 from "../controllers/object-3d.controller";
export class NgtCommonSprite {
    constructor(objectController, ngZone) {
        this.objectController = objectController;
        this.ngZone = ngZone;
        this.ready = new EventEmitter();
        _NgtCommonSprite_sprite.set(this, void 0);
        objectController.initFn = () => {
            if (this.material) {
                __classPrivateFieldSet(this, _NgtCommonSprite_sprite, new this.spriteType(this.material), "f");
            }
            else if (this.materialDirective) {
                if (this.materialDirective.material instanceof THREE.SpriteMaterial) {
                    __classPrivateFieldSet(this, _NgtCommonSprite_sprite, new this.spriteType(this.materialDirective.material), "f");
                }
            }
            return __classPrivateFieldGet(this, _NgtCommonSprite_sprite, "f");
        };
        objectController.readyFn = () => {
            this.ready.emit(this.sprite);
        };
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            this.objectController.init();
        });
    }
    get sprite() {
        return __classPrivateFieldGet(this, _NgtCommonSprite_sprite, "f");
    }
}
_NgtCommonSprite_sprite = new WeakMap();
NgtCommonSprite.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCommonSprite, deps: [{ token: NGT_OBJECT_WATCHED_CONTROLLER }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });
NgtCommonSprite.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtCommonSprite, inputs: { material: "material" }, outputs: { ready: "ready" }, queries: [{ propertyName: "materialDirective", first: true, predicate: NgtMaterial, descendants: true }], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCommonSprite, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i1.NgtObject3dController, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_WATCHED_CONTROLLER]
                }] }, { type: i0.NgZone }]; }, propDecorators: { material: [{
                type: Input
            }], ready: [{
                type: Output
            }], materialDirective: [{
                type: ContentChild,
                args: [NgtMaterial]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ByaXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3RocmVlL3Nwcml0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFDTCxZQUFZLEVBQ1osU0FBUyxFQUNULFlBQVksRUFDWixNQUFNLEVBQ04sS0FBSyxFQUNMLE1BQU0sRUFFTixNQUFNLEdBQ1AsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxFQUNMLDZCQUE2QixFQUM3QixxQkFBcUIsR0FDdEIsTUFBTSxxQ0FBcUMsQ0FBQztBQUU3QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sWUFBWSxDQUFDOzs7QUFHekMsTUFBTSxPQUFnQixlQUFlO0lBYW5DLFlBRVksZ0JBQXVDLEVBQ3ZDLE1BQWM7UUFEZCxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQXVCO1FBQ3ZDLFdBQU0sR0FBTixNQUFNLENBQVE7UUFYaEIsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFXLENBQUM7UUFNOUMsMENBQWtCO1FBT2hCLGdCQUFnQixDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUU7WUFDN0IsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO2dCQUNqQix1QkFBQSxJQUFJLDJCQUFXLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQUEsQ0FBQzthQUNuRDtpQkFBTSxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtnQkFDakMsSUFBSSxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxZQUFZLEtBQUssQ0FBQyxjQUFjLEVBQUU7b0JBQ25FLHVCQUFBLElBQUksMkJBQVcsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsTUFBQSxDQUFDO2lCQUNyRTthQUNGO1lBRUQsT0FBTyx1QkFBQSxJQUFJLCtCQUFRLENBQUM7UUFDdEIsQ0FBQyxDQUFDO1FBRUYsZ0JBQWdCLENBQUMsT0FBTyxHQUFHLEdBQUcsRUFBRTtZQUM5QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtZQUNqQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyx1QkFBQSxJQUFJLCtCQUFRLENBQUM7SUFDdEIsQ0FBQzs7OzRHQTNDbUIsZUFBZSxrQkFjekIsNkJBQTZCO2dHQWRuQixlQUFlLHdJQU9yQixXQUFXOzJGQVBMLGVBQWU7a0JBRHBDLFNBQVM7OzBCQWVMLE1BQU07MkJBQUMsNkJBQTZCO2lFQVY5QixRQUFRO3NCQUFoQixLQUFLO2dCQUNJLEtBQUs7c0JBQWQsTUFBTTtnQkFFb0IsaUJBQWlCO3NCQUEzQyxZQUFZO3VCQUFDLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb250ZW50Q2hpbGQsXG4gIERpcmVjdGl2ZSxcbiAgRXZlbnRFbWl0dGVyLFxuICBJbmplY3QsXG4gIElucHV0LFxuICBOZ1pvbmUsXG4gIE9uSW5pdCxcbiAgT3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCB7XG4gIE5HVF9PQkpFQ1RfV0FUQ0hFRF9DT05UUk9MTEVSLFxuICBOZ3RPYmplY3QzZENvbnRyb2xsZXIsXG59IGZyb20gJy4uL2NvbnRyb2xsZXJzL29iamVjdC0zZC5jb250cm9sbGVyJztcbmltcG9ydCB0eXBlIHsgQW55Q29uc3RydWN0b3IgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBOZ3RNYXRlcmlhbCB9IGZyb20gJy4vbWF0ZXJpYWwnO1xuXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBOZ3RDb21tb25TcHJpdGU8XG4gIFRTcHJpdGUgZXh0ZW5kcyBUSFJFRS5TcHJpdGUgPSBUSFJFRS5TcHJpdGVcbj4gaW1wbGVtZW50cyBPbkluaXRcbntcbiAgQElucHV0KCkgbWF0ZXJpYWw/OiBUSFJFRS5TcHJpdGVNYXRlcmlhbDtcbiAgQE91dHB1dCgpIHJlYWR5ID0gbmV3IEV2ZW50RW1pdHRlcjxUU3ByaXRlPigpO1xuXG4gIEBDb250ZW50Q2hpbGQoTmd0TWF0ZXJpYWwpIG1hdGVyaWFsRGlyZWN0aXZlPzogTmd0TWF0ZXJpYWw7XG5cbiAgYWJzdHJhY3Qgc3ByaXRlVHlwZTogQW55Q29uc3RydWN0b3I8VFNwcml0ZT47XG5cbiAgI3Nwcml0ZSE6IFRTcHJpdGU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChOR1RfT0JKRUNUX1dBVENIRURfQ09OVFJPTExFUilcbiAgICBwcm90ZWN0ZWQgb2JqZWN0Q29udHJvbGxlcjogTmd0T2JqZWN0M2RDb250cm9sbGVyLFxuICAgIHByb3RlY3RlZCBuZ1pvbmU6IE5nWm9uZVxuICApIHtcbiAgICBvYmplY3RDb250cm9sbGVyLmluaXRGbiA9ICgpID0+IHtcbiAgICAgIGlmICh0aGlzLm1hdGVyaWFsKSB7XG4gICAgICAgIHRoaXMuI3Nwcml0ZSA9IG5ldyB0aGlzLnNwcml0ZVR5cGUodGhpcy5tYXRlcmlhbCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMubWF0ZXJpYWxEaXJlY3RpdmUpIHtcbiAgICAgICAgaWYgKHRoaXMubWF0ZXJpYWxEaXJlY3RpdmUubWF0ZXJpYWwgaW5zdGFuY2VvZiBUSFJFRS5TcHJpdGVNYXRlcmlhbCkge1xuICAgICAgICAgIHRoaXMuI3Nwcml0ZSA9IG5ldyB0aGlzLnNwcml0ZVR5cGUodGhpcy5tYXRlcmlhbERpcmVjdGl2ZS5tYXRlcmlhbCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuI3Nwcml0ZTtcbiAgICB9O1xuXG4gICAgb2JqZWN0Q29udHJvbGxlci5yZWFkeUZuID0gKCkgPT4ge1xuICAgICAgdGhpcy5yZWFkeS5lbWl0KHRoaXMuc3ByaXRlKTtcbiAgICB9O1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgdGhpcy5vYmplY3RDb250cm9sbGVyLmluaXQoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldCBzcHJpdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuI3Nwcml0ZTtcbiAgfVxufVxuIl19