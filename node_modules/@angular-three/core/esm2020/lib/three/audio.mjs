var _NgtCommonAudio_audioArgs, _NgtCommonAudio_audio;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { Directive, EventEmitter, Inject, Input, NgZone, Output, } from '@angular/core';
import * as THREE from 'three';
import { NGT_OBJECT_WATCHED_CONTROLLER, NgtObject3dController, } from '../controllers/object-3d.controller';
import * as i0 from "@angular/core";
import * as i1 from "../controllers/object-3d.controller";
export class NgtCommonAudio {
    constructor(objectController, ngZone) {
        this.objectController = objectController;
        this.ngZone = ngZone;
        this.ready = new EventEmitter();
        _NgtCommonAudio_audioArgs.set(this, []);
        _NgtCommonAudio_audio.set(this, void 0);
        objectController.initFn = () => {
            if (!this.listener) {
                throw new Error('Cannot initialize Audio without an AudioListener');
            }
            __classPrivateFieldSet(this, _NgtCommonAudio_audio, new this.audioType(this.listener, ...__classPrivateFieldGet(this, _NgtCommonAudio_audioArgs, "f")), "f");
            return __classPrivateFieldGet(this, _NgtCommonAudio_audio, "f");
        };
        objectController.readyFn = () => {
            this.ready.emit(this.audio);
        };
    }
    set audioArgs(v) {
        __classPrivateFieldSet(this, _NgtCommonAudio_audioArgs, Array.isArray(v) ? v : [v], "f");
        this.ngZone.runOutsideAngular(() => {
            this.objectController.init();
        });
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            if (!__classPrivateFieldGet(this, _NgtCommonAudio_audio, "f")) {
                this.objectController.init();
            }
        });
    }
    get audio() {
        return __classPrivateFieldGet(this, _NgtCommonAudio_audio, "f");
    }
}
_NgtCommonAudio_audioArgs = new WeakMap(), _NgtCommonAudio_audio = new WeakMap();
NgtCommonAudio.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCommonAudio, deps: [{ token: NGT_OBJECT_WATCHED_CONTROLLER }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });
NgtCommonAudio.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtCommonAudio, inputs: { listener: "listener" }, outputs: { ready: "ready" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCommonAudio, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i1.NgtObject3dController, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_WATCHED_CONTROLLER]
                }] }, { type: i0.NgZone }]; }, propDecorators: { listener: [{
                type: Input
            }], ready: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVkaW8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvdGhyZWUvYXVkaW8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixNQUFNLEVBQ04sS0FBSyxFQUNMLE1BQU0sRUFFTixNQUFNLEdBQ1AsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxFQUNMLDZCQUE2QixFQUM3QixxQkFBcUIsR0FDdEIsTUFBTSxxQ0FBcUMsQ0FBQzs7O0FBSTdDLE1BQU0sT0FBZ0IsY0FBYztJQWdCbEMsWUFFWSxnQkFBdUMsRUFDdkMsTUFBYztRQURkLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBdUI7UUFDdkMsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQWJoQixVQUFLLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUU3QyxvQ0FBd0IsRUFBRSxFQUFDO1FBNEIzQix3Q0FBZ0I7UUFmZCxnQkFBZ0IsQ0FBQyxNQUFNLEdBQUcsR0FBRyxFQUFFO1lBQzdCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO2dCQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLGtEQUFrRCxDQUFDLENBQUM7YUFDckU7WUFFRCx1QkFBQSxJQUFJLHlCQUFVLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEdBQUcsdUJBQUEsSUFBSSxpQ0FBVyxDQUFDLE1BQUEsQ0FBQztZQUNwRSxPQUFPLHVCQUFBLElBQUksNkJBQU8sQ0FBQztRQUNyQixDQUFDLENBQUM7UUFDRixnQkFBZ0IsQ0FBQyxPQUFPLEdBQUcsR0FBRyxFQUFFO1lBQzlCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM5QixDQUFDLENBQUM7SUFDSixDQUFDO0lBdkJELElBQWMsU0FBUyxDQUFDLENBQXNCO1FBQzVDLHVCQUFBLElBQUksNkJBQWMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFBLENBQUM7UUFDN0MsSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDO1FBQy9CLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQXdCRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsSUFBSSxDQUFDLHVCQUFBLElBQUksNkJBQU8sRUFBRTtnQkFDaEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDO2FBQzlCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyx1QkFBQSxJQUFJLDZCQUFPLENBQUM7SUFDckIsQ0FBQzs7OzJHQWhEbUIsY0FBYyxrQkFpQnhCLDZCQUE2QjsrRkFqQm5CLGNBQWM7MkZBQWQsY0FBYztrQkFEbkMsU0FBUzs7MEJBa0JMLE1BQU07MkJBQUMsNkJBQTZCO2lFQVo5QixRQUFRO3NCQUFoQixLQUFLO2dCQUNJLEtBQUs7c0JBQWQsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIERpcmVjdGl2ZSxcbiAgRXZlbnRFbWl0dGVyLFxuICBJbmplY3QsXG4gIElucHV0LFxuICBOZ1pvbmUsXG4gIE9uSW5pdCxcbiAgT3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCB7XG4gIE5HVF9PQkpFQ1RfV0FUQ0hFRF9DT05UUk9MTEVSLFxuICBOZ3RPYmplY3QzZENvbnRyb2xsZXIsXG59IGZyb20gJy4uL2NvbnRyb2xsZXJzL29iamVjdC0zZC5jb250cm9sbGVyJztcbmltcG9ydCB7IEFueUNvbnN0cnVjdG9yIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBOZ3RDb21tb25BdWRpbzxcbiAgVEF1ZGlvTm9kZSBleHRlbmRzIEF1ZGlvTm9kZSA9IEdhaW5Ob2RlLFxuICBUQXVkaW8gZXh0ZW5kcyBUSFJFRS5BdWRpbzxUQXVkaW9Ob2RlPiA9IFRIUkVFLkF1ZGlvPFRBdWRpb05vZGU+XG4+IGltcGxlbWVudHMgT25Jbml0XG57XG4gIEBJbnB1dCgpIGxpc3RlbmVyITogVEhSRUUuQXVkaW9MaXN0ZW5lcjtcbiAgQE91dHB1dCgpIHJlYWR5ID0gbmV3IEV2ZW50RW1pdHRlcjxUQXVkaW8+KCk7XG5cbiAgI2F1ZGlvQXJnczogdW5rbm93bltdID0gW107XG4gIHByb3RlY3RlZCBzZXQgYXVkaW9BcmdzKHY6IHVua25vd24gfCB1bmtub3duW10pIHtcbiAgICB0aGlzLiNhdWRpb0FyZ3MgPSBBcnJheS5pc0FycmF5KHYpID8gdiA6IFt2XTtcbiAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICB0aGlzLm9iamVjdENvbnRyb2xsZXIuaW5pdCgpO1xuICAgIH0pO1xuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChOR1RfT0JKRUNUX1dBVENIRURfQ09OVFJPTExFUilcbiAgICBwcm90ZWN0ZWQgb2JqZWN0Q29udHJvbGxlcjogTmd0T2JqZWN0M2RDb250cm9sbGVyLFxuICAgIHByb3RlY3RlZCBuZ1pvbmU6IE5nWm9uZVxuICApIHtcbiAgICBvYmplY3RDb250cm9sbGVyLmluaXRGbiA9ICgpID0+IHtcbiAgICAgIGlmICghdGhpcy5saXN0ZW5lcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBpbml0aWFsaXplIEF1ZGlvIHdpdGhvdXQgYW4gQXVkaW9MaXN0ZW5lcicpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLiNhdWRpbyA9IG5ldyB0aGlzLmF1ZGlvVHlwZSh0aGlzLmxpc3RlbmVyLCAuLi50aGlzLiNhdWRpb0FyZ3MpO1xuICAgICAgcmV0dXJuIHRoaXMuI2F1ZGlvO1xuICAgIH07XG4gICAgb2JqZWN0Q29udHJvbGxlci5yZWFkeUZuID0gKCkgPT4ge1xuICAgICAgdGhpcy5yZWFkeS5lbWl0KHRoaXMuYXVkaW8pO1xuICAgIH07XG4gIH1cblxuICBhYnN0cmFjdCBhdWRpb1R5cGU6IEFueUNvbnN0cnVjdG9yPFRBdWRpbz47XG5cbiAgI2F1ZGlvITogVEF1ZGlvO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMubmdab25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcbiAgICAgIGlmICghdGhpcy4jYXVkaW8pIHtcbiAgICAgICAgdGhpcy5vYmplY3RDb250cm9sbGVyLmluaXQoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGdldCBhdWRpbygpIHtcbiAgICByZXR1cm4gdGhpcy4jYXVkaW87XG4gIH1cbn1cbiJdfQ==