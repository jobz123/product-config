var _NgtCurve_instances, _NgtCurve_curveArgs, _NgtCurve_curve, _NgtCurve_init;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { Directive, Input, NgZone, Optional } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./geometry";
export class NgtCurve {
    constructor(ngZone, geometryDirective) {
        this.ngZone = ngZone;
        this.geometryDirective = geometryDirective;
        _NgtCurve_instances.add(this);
        _NgtCurve_curveArgs.set(this, []);
        _NgtCurve_curve.set(this, void 0);
    }
    set curveArgs(v) {
        __classPrivateFieldSet(this, _NgtCurve_curveArgs, Array.isArray(v) ? v : [v], "f");
        this.ngZone.runOutsideAngular(() => {
            __classPrivateFieldGet(this, _NgtCurve_instances, "m", _NgtCurve_init).call(this);
        });
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            if (!this.curve) {
                __classPrivateFieldGet(this, _NgtCurve_instances, "m", _NgtCurve_init).call(this);
            }
        });
    }
    get curve() {
        return __classPrivateFieldGet(this, _NgtCurve_curve, "f");
    }
}
_NgtCurve_curveArgs = new WeakMap(), _NgtCurve_curve = new WeakMap(), _NgtCurve_instances = new WeakSet(), _NgtCurve_init = function _NgtCurve_init() {
    __classPrivateFieldSet(this, _NgtCurve_curve, new this.curveType(...__classPrivateFieldGet(this, _NgtCurve_curveArgs, "f")), "f");
    if (this.curve && this.geometryDirective) {
        const points = this.curve.getPoints(this.divisions);
        this.geometryDirective.geometry.setFromPoints(points);
    }
};
NgtCurve.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCurve, deps: [{ token: i0.NgZone }, { token: i1.NgtGeometry, optional: true }], target: i0.ɵɵFactoryTarget.Directive });
NgtCurve.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtCurve, inputs: { divisions: "divisions" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCurve, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.NgtGeometry, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { divisions: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VydmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvdGhyZWUvY3VydmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQVUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFNM0UsTUFBTSxPQUFnQixRQUFRO0lBaUI1QixZQUNZLE1BQWMsRUFDRixpQkFBcUM7UUFEakQsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNGLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBb0I7O1FBWDdELDhCQUF3QixFQUFFLEVBQUM7UUFjM0Isa0NBQWdCO0lBRmIsQ0FBQztJQVZKLElBQWMsU0FBUyxDQUFDLENBQXNCO1FBQzVDLHVCQUFBLElBQUksdUJBQWMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFBLENBQUM7UUFDN0MsSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsdUJBQUEsSUFBSSwyQ0FBTSxNQUFWLElBQUksQ0FBUSxDQUFDO1FBQ2YsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBU0QsUUFBUTtRQUNOLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFO1lBQ2pDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFO2dCQUNmLHVCQUFBLElBQUksMkNBQU0sTUFBVixJQUFJLENBQVEsQ0FBQzthQUNkO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBWUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyx1QkFBQSxJQUFJLHVCQUFPLENBQUM7SUFDckIsQ0FBQzs7O0lBWEMsdUJBQUEsSUFBSSxtQkFBVSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyx1QkFBQSxJQUFJLDJCQUFXLENBQUMsTUFBQSxDQUFDO0lBQ3JELElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7UUFDeEMsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3BELElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUMzQyxNQUFzRCxDQUN2RCxDQUFDO0tBQ0g7QUFDSCxDQUFDO3FHQXhDbUIsUUFBUTt5RkFBUixRQUFROzJGQUFSLFFBQVE7a0JBRDdCLFNBQVM7OzBCQW9CTCxRQUFROzRDQWZGLFNBQVM7c0JBQWpCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBOZ1pvbmUsIE9uSW5pdCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCB0eXBlIHsgQW55Q29uc3RydWN0b3IgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBOZ3RHZW9tZXRyeSB9IGZyb20gJy4vZ2VvbWV0cnknO1xuXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBOZ3RDdXJ2ZTxcbiAgVEN1cnZlIGV4dGVuZHMgVEhSRUUuQ3VydmU8VEhSRUUuVmVjdG9yPiA9IFRIUkVFLkN1cnZlPFRIUkVFLlZlY3Rvcj5cbj4gaW1wbGVtZW50cyBPbkluaXRcbntcbiAgQElucHV0KCkgZGl2aXNpb25zPzogbnVtYmVyO1xuXG4gIGFic3RyYWN0IGN1cnZlVHlwZTogQW55Q29uc3RydWN0b3I8VEN1cnZlPjtcblxuICAjY3VydmVBcmdzOiB1bmtub3duW10gPSBbXTtcblxuICBwcm90ZWN0ZWQgc2V0IGN1cnZlQXJncyh2OiB1bmtub3duIHwgdW5rbm93bltdKSB7XG4gICAgdGhpcy4jY3VydmVBcmdzID0gQXJyYXkuaXNBcnJheSh2KSA/IHYgOiBbdl07XG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgdGhpcy4jaW5pdCgpO1xuICAgIH0pO1xuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIG5nWm9uZTogTmdab25lLFxuICAgIEBPcHRpb25hbCgpIHByb3RlY3RlZCBnZW9tZXRyeURpcmVjdGl2ZTogTmd0R2VvbWV0cnkgfCBudWxsXG4gICkge31cblxuICAjY3VydmU/OiBUQ3VydmU7XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLmN1cnZlKSB7XG4gICAgICAgIHRoaXMuI2luaXQoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gICNpbml0KCkge1xuICAgIHRoaXMuI2N1cnZlID0gbmV3IHRoaXMuY3VydmVUeXBlKC4uLnRoaXMuI2N1cnZlQXJncyk7XG4gICAgaWYgKHRoaXMuY3VydmUgJiYgdGhpcy5nZW9tZXRyeURpcmVjdGl2ZSkge1xuICAgICAgY29uc3QgcG9pbnRzID0gdGhpcy5jdXJ2ZS5nZXRQb2ludHModGhpcy5kaXZpc2lvbnMpO1xuICAgICAgdGhpcy5nZW9tZXRyeURpcmVjdGl2ZS5nZW9tZXRyeS5zZXRGcm9tUG9pbnRzKFxuICAgICAgICBwb2ludHMgYXMgdW5rbm93biBhcyBUSFJFRS5WZWN0b3IzW10gfCBUSFJFRS5WZWN0b3IyW11cbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IGN1cnZlKCk6IFRDdXJ2ZSB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuI2N1cnZlO1xuICB9XG59XG4iXX0=