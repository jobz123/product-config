var _NgtStats_node, _NgtStats_stats, _NgtStats_animationUuid;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { NgtAnimationFrameStore } from '@angular-three/core';
import { DOCUMENT } from '@angular/common';
import { Directive, Inject, Input, NgModule, NgZone, } from '@angular/core';
// import Stats from minified bundle for minimizing bundle size
// @ts-ignore
import Stats from 'three/examples/js/libs/stats.min';
import * as i0 from "@angular/core";
import * as i1 from "@angular-three/core";
export class NgtStats {
    constructor(animationFrameStore, ngZone, document) {
        this.animationFrameStore = animationFrameStore;
        this.ngZone = ngZone;
        _NgtStats_node.set(this, void 0);
        _NgtStats_stats.set(this, void 0);
        _NgtStats_animationUuid.set(this, '');
        __classPrivateFieldSet(this, _NgtStats_node, document.body, "f");
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            if (this.parent) {
                __classPrivateFieldSet(this, _NgtStats_node, this.parent, "f");
            }
            __classPrivateFieldSet(this, _NgtStats_stats, new Stats(), "f");
            __classPrivateFieldGet(this, _NgtStats_node, "f").appendChild(__classPrivateFieldGet(this, _NgtStats_stats, "f").dom);
            __classPrivateFieldSet(this, _NgtStats_animationUuid, this.animationFrameStore.register({
                callback: () => {
                    __classPrivateFieldGet(this, _NgtStats_stats, "f").update();
                },
            }), "f");
        });
    }
    ngOnDestroy() {
        this.ngZone.runOutsideAngular(() => {
            if (__classPrivateFieldGet(this, _NgtStats_stats, "f")) {
                this.animationFrameStore.actions.unsubscriberUuid(__classPrivateFieldGet(this, _NgtStats_animationUuid, "f"));
                __classPrivateFieldGet(this, _NgtStats_stats, "f").end();
                __classPrivateFieldGet(this, _NgtStats_node, "f").removeChild(__classPrivateFieldGet(this, _NgtStats_stats, "f").dom);
            }
        });
    }
}
_NgtStats_node = new WeakMap(), _NgtStats_stats = new WeakMap(), _NgtStats_animationUuid = new WeakMap();
NgtStats.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtStats, deps: [{ token: i1.NgtAnimationFrameStore }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });
NgtStats.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtStats, selector: "ngt-stats", inputs: { parent: "parent" }, exportAs: ["ngtStats"], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtStats, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-stats',
                    exportAs: 'ngtStats',
                }]
        }], ctorParameters: function () { return [{ type: i1.NgtAnimationFrameStore }, { type: i0.NgZone }, { type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; }, propDecorators: { parent: [{
                type: Input
            }] } });
export class NgtStatsModule {
}
NgtStatsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtStatsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtStatsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtStatsModule, declarations: [NgtStats], exports: [NgtStats] });
NgtStatsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtStatsModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtStatsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtStats],
                    exports: [NgtStats],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdHMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29yZS9zdGF0cy9zcmMvbGliL3N0YXRzLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzdELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQ0wsU0FBUyxFQUNULE1BQU0sRUFDTixLQUFLLEVBQ0wsUUFBUSxFQUNSLE1BQU0sR0FHUCxNQUFNLGVBQWUsQ0FBQztBQUN2QiwrREFBK0Q7QUFDL0QsYUFBYTtBQUNiLE9BQU8sS0FBSyxNQUFNLGtDQUFrQyxDQUFDOzs7QUFNckQsTUFBTSxPQUFPLFFBQVE7SUFPbkIsWUFDVSxtQkFBMkMsRUFDM0MsTUFBYyxFQUNKLFFBQWtCO1FBRjVCLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBd0I7UUFDM0MsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQU54QixpQ0FBbUI7UUFDbkIsa0NBQWU7UUFDZixrQ0FBaUIsRUFBRSxFQUFDO1FBT2xCLHVCQUFBLElBQUksa0JBQVMsUUFBUSxDQUFDLElBQUksTUFBQSxDQUFDO0lBQzdCLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO2dCQUNmLHVCQUFBLElBQUksa0JBQVMsSUFBSSxDQUFDLE1BQU0sTUFBQSxDQUFDO2FBQzFCO1lBRUQsdUJBQUEsSUFBSSxtQkFBVSxJQUFJLEtBQUssRUFBRSxNQUFBLENBQUM7WUFDMUIsdUJBQUEsSUFBSSxzQkFBTSxDQUFDLFdBQVcsQ0FBQyx1QkFBQSxJQUFJLHVCQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDeEMsdUJBQUEsSUFBSSwyQkFBa0IsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFFBQVEsQ0FBQztnQkFDdEQsUUFBUSxFQUFFLEdBQUcsRUFBRTtvQkFDYix1QkFBQSxJQUFJLHVCQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7Z0JBQ3ZCLENBQUM7YUFDRixDQUFDLE1BQUEsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtZQUNqQyxJQUFJLHVCQUFBLElBQUksdUJBQU8sRUFBRTtnQkFDZixJQUFJLENBQUMsbUJBQW1CLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLHVCQUFBLElBQUksK0JBQWUsQ0FBQyxDQUFDO2dCQUN2RSx1QkFBQSxJQUFJLHVCQUFPLENBQUMsR0FBRyxFQUFFLENBQUM7Z0JBQ2xCLHVCQUFBLElBQUksc0JBQU0sQ0FBQyxXQUFXLENBQUMsdUJBQUEsSUFBSSx1QkFBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQ3pDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOzs7cUdBdkNVLFFBQVEsOEVBVVQsUUFBUTt5RkFWUCxRQUFROzJGQUFSLFFBQVE7a0JBSnBCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLFdBQVc7b0JBQ3JCLFFBQVEsRUFBRSxVQUFVO2lCQUNyQjtvSEFXK0IsUUFBUTswQkFBbkMsTUFBTTsyQkFBQyxRQUFROzRDQVRULE1BQU07c0JBQWQsS0FBSzs7QUE2Q1IsTUFBTSxPQUFPLGNBQWM7OzJHQUFkLGNBQWM7NEdBQWQsY0FBYyxpQkE5Q2QsUUFBUSxhQUFSLFFBQVE7NEdBOENSLGNBQWM7MkZBQWQsY0FBYztrQkFKMUIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxRQUFRLENBQUM7b0JBQ3hCLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQztpQkFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ3RBbmltYXRpb25GcmFtZVN0b3JlIH0gZnJvbSAnQGFuZ3VsYXItdGhyZWUvY29yZSc7XG5pbXBvcnQgeyBET0NVTUVOVCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEluamVjdCxcbiAgSW5wdXQsXG4gIE5nTW9kdWxlLFxuICBOZ1pvbmUsXG4gIE9uRGVzdHJveSxcbiAgT25Jbml0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8vIGltcG9ydCBTdGF0cyBmcm9tIG1pbmlmaWVkIGJ1bmRsZSBmb3IgbWluaW1pemluZyBidW5kbGUgc2l6ZVxuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IFN0YXRzIGZyb20gJ3RocmVlL2V4YW1wbGVzL2pzL2xpYnMvc3RhdHMubWluJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnbmd0LXN0YXRzJyxcbiAgZXhwb3J0QXM6ICduZ3RTdGF0cycsXG59KVxuZXhwb3J0IGNsYXNzIE5ndFN0YXRzIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBASW5wdXQoKSBwYXJlbnQ/OiBIVE1MRWxlbWVudDtcblxuICAjbm9kZTogSFRNTEVsZW1lbnQ7XG4gICNzdGF0cz86IFN0YXRzO1xuICAjYW5pbWF0aW9uVXVpZCA9ICcnO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYW5pbWF0aW9uRnJhbWVTdG9yZTogTmd0QW5pbWF0aW9uRnJhbWVTdG9yZSxcbiAgICBwcml2YXRlIG5nWm9uZTogTmdab25lLFxuICAgIEBJbmplY3QoRE9DVU1FTlQpIGRvY3VtZW50OiBEb2N1bWVudFxuICApIHtcbiAgICB0aGlzLiNub2RlID0gZG9jdW1lbnQuYm9keTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMubmdab25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcbiAgICAgIGlmICh0aGlzLnBhcmVudCkge1xuICAgICAgICB0aGlzLiNub2RlID0gdGhpcy5wYXJlbnQ7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuI3N0YXRzID0gbmV3IFN0YXRzKCk7XG4gICAgICB0aGlzLiNub2RlLmFwcGVuZENoaWxkKHRoaXMuI3N0YXRzLmRvbSk7XG4gICAgICB0aGlzLiNhbmltYXRpb25VdWlkID0gdGhpcy5hbmltYXRpb25GcmFtZVN0b3JlLnJlZ2lzdGVyKHtcbiAgICAgICAgY2FsbGJhY2s6ICgpID0+IHtcbiAgICAgICAgICB0aGlzLiNzdGF0cy51cGRhdGUoKTtcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuI3N0YXRzKSB7XG4gICAgICAgIHRoaXMuYW5pbWF0aW9uRnJhbWVTdG9yZS5hY3Rpb25zLnVuc3Vic2NyaWJlclV1aWQodGhpcy4jYW5pbWF0aW9uVXVpZCk7XG4gICAgICAgIHRoaXMuI3N0YXRzLmVuZCgpO1xuICAgICAgICB0aGlzLiNub2RlLnJlbW92ZUNoaWxkKHRoaXMuI3N0YXRzLmRvbSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbTmd0U3RhdHNdLFxuICBleHBvcnRzOiBbTmd0U3RhdHNdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ3RTdGF0c01vZHVsZSB7fVxuIl19