// GENERATED
import { NGT_OBJECT_3D_PROVIDER, NgtGeometry } from '@angular-three/core';
import { Directive, Input, NgModule } from '@angular/core';
import * as THREE from 'three';
import * as i0 from "@angular/core";
export class NgtExtrudeGeometry extends NgtGeometry {
    constructor() {
        super(...arguments);
        this.geometryType = THREE.ExtrudeGeometry;
    }
    set args(v) {
        this.geometryArgs = v;
    }
}
NgtExtrudeGeometry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtExtrudeGeometry, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtExtrudeGeometry.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtExtrudeGeometry, selector: "ngt-extrude-geometry", inputs: { args: "args" }, providers: [
        {
            provide: NgtGeometry,
            useExisting: NgtExtrudeGeometry,
        },
        NGT_OBJECT_3D_PROVIDER,
    ], exportAs: ["ngtExtrudeGeometry"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtExtrudeGeometry, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-extrude-geometry',
                    exportAs: 'ngtExtrudeGeometry',
                    providers: [
                        {
                            provide: NgtGeometry,
                            useExisting: NgtExtrudeGeometry,
                        },
                        NGT_OBJECT_3D_PROVIDER,
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
export class NgtExtrudeGeometryModule {
}
NgtExtrudeGeometryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtExtrudeGeometryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtExtrudeGeometryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtExtrudeGeometryModule, declarations: [NgtExtrudeGeometry], exports: [NgtExtrudeGeometry] });
NgtExtrudeGeometryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtExtrudeGeometryModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtExtrudeGeometryModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtExtrudeGeometry],
                    exports: [NgtExtrudeGeometry],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0cnVkZS1nZW9tZXRyeS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL2dlb21ldHJpZXMvc3JjL2xpYi9leHRydWRlLWdlb21ldHJ5L2V4dHJ1ZGUtZ2VvbWV0cnkuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7QUFDWixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDMUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFDOztBQWEvQixNQUFNLE9BQU8sa0JBQW1CLFNBQVEsV0FBa0M7SUFYMUU7O1FBb0JFLGlCQUFZLEdBQUcsS0FBSyxDQUFDLGVBQWUsQ0FBQztLQUN0QztJQUxDLElBQWEsSUFBSSxDQUFDLENBQXNEO1FBQ3RFLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDO0lBQ3hCLENBQUM7OytHQVBVLGtCQUFrQjttR0FBbEIsa0JBQWtCLHlFQVJsQjtRQUNUO1lBQ0UsT0FBTyxFQUFFLFdBQVc7WUFDcEIsV0FBVyxFQUFFLGtCQUFrQjtTQUNoQztRQUNELHNCQUFzQjtLQUN2QjsyRkFFVSxrQkFBa0I7a0JBWDlCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsU0FBUyxFQUFFO3dCQUNUOzRCQUNFLE9BQU8sRUFBRSxXQUFXOzRCQUNwQixXQUFXLG9CQUFvQjt5QkFDaEM7d0JBQ0Qsc0JBQXNCO3FCQUN2QjtpQkFDRjs4QkFNYyxJQUFJO3NCQUFoQixLQUFLOztBQVdSLE1BQU0sT0FBTyx3QkFBd0I7O3FIQUF4Qix3QkFBd0I7c0hBQXhCLHdCQUF3QixpQkFoQnhCLGtCQUFrQixhQUFsQixrQkFBa0I7c0hBZ0JsQix3QkFBd0I7MkZBQXhCLHdCQUF3QjtrQkFKcEMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztvQkFDbEMsT0FBTyxFQUFFLENBQUMsa0JBQWtCLENBQUM7aUJBQzlCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gR0VORVJBVEVEXG5pbXBvcnQgeyBOR1RfT0JKRUNUXzNEX1BST1ZJREVSLCBOZ3RHZW9tZXRyeSB9IGZyb20gJ0Bhbmd1bGFyLXRocmVlL2NvcmUnO1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnbmd0LWV4dHJ1ZGUtZ2VvbWV0cnknLFxuICBleHBvcnRBczogJ25ndEV4dHJ1ZGVHZW9tZXRyeScsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5ndEdlb21ldHJ5LFxuICAgICAgdXNlRXhpc3Rpbmc6IE5ndEV4dHJ1ZGVHZW9tZXRyeSxcbiAgICB9LFxuICAgIE5HVF9PQkpFQ1RfM0RfUFJPVklERVIsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE5ndEV4dHJ1ZGVHZW9tZXRyeSBleHRlbmRzIE5ndEdlb21ldHJ5PFRIUkVFLkV4dHJ1ZGVHZW9tZXRyeT4ge1xuICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfYXJnczpcbiAgICB8IENvbnN0cnVjdG9yUGFyYW1ldGVyczx0eXBlb2YgVEhSRUUuRXh0cnVkZUdlb21ldHJ5PlxuICAgIHwgdW5kZWZpbmVkO1xuXG4gIEBJbnB1dCgpIHNldCBhcmdzKHY6IENvbnN0cnVjdG9yUGFyYW1ldGVyczx0eXBlb2YgVEhSRUUuRXh0cnVkZUdlb21ldHJ5Pikge1xuICAgIHRoaXMuZ2VvbWV0cnlBcmdzID0gdjtcbiAgfVxuXG4gIGdlb21ldHJ5VHlwZSA9IFRIUkVFLkV4dHJ1ZGVHZW9tZXRyeTtcbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbTmd0RXh0cnVkZUdlb21ldHJ5XSxcbiAgZXhwb3J0czogW05ndEV4dHJ1ZGVHZW9tZXRyeV0sXG59KVxuZXhwb3J0IGNsYXNzIE5ndEV4dHJ1ZGVHZW9tZXRyeU1vZHVsZSB7fVxuIl19