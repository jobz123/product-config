// GENERATED
import { NgtTexture } from '@angular-three/core';
import { NgModule, Directive, Input } from '@angular/core';
import * as THREE from 'three';
import * as i0 from "@angular/core";
export class NgtCompressedTexture extends NgtTexture {
    constructor() {
        super(...arguments);
        this.textureType = THREE.CompressedTexture;
    }
    set args(v) {
        this.textureArgs = v;
    }
}
NgtCompressedTexture.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCompressedTexture, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtCompressedTexture.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtCompressedTexture, selector: "ngt-compressed-texture", inputs: { args: "args" }, providers: [
        {
            provide: NgtTexture,
            useExisting: NgtCompressedTexture,
        },
    ], exportAs: ["ngtCompressedTexture"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCompressedTexture, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-compressed-texture',
                    exportAs: 'ngtCompressedTexture',
                    providers: [
                        {
                            provide: NgtTexture,
                            useExisting: NgtCompressedTexture,
                        },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }] } });
export class NgtCompressedTextureModule {
}
NgtCompressedTextureModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCompressedTextureModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtCompressedTextureModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCompressedTextureModule, declarations: [NgtCompressedTexture], exports: [NgtCompressedTexture] });
NgtCompressedTextureModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCompressedTextureModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtCompressedTextureModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtCompressedTexture],
                    exports: [NgtCompressedTexture],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHJlc3NlZC10ZXh0dXJlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvdGV4dHVyZXMvc3JjL2xpYi9jb21wcmVzc2VkLXRleHR1cmUvY29tcHJlc3NlZC10ZXh0dXJlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZO0FBQ1osT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRCxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQzs7QUFZL0IsTUFBTSxPQUFPLG9CQUFxQixTQUFRLFVBQW1DO0lBVjdFOztRQW1CRSxnQkFBVyxHQUFHLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQztLQUN2QztJQUxDLElBQWEsSUFBSSxDQUFDLENBQXdEO1FBQ3hFLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7O2lIQVBVLG9CQUFvQjtxR0FBcEIsb0JBQW9CLDJFQVBwQjtRQUNUO1lBQ0UsT0FBTyxFQUFFLFVBQVU7WUFDbkIsV0FBVyxFQUFFLG9CQUFvQjtTQUNsQztLQUNGOzJGQUVVLG9CQUFvQjtrQkFWaEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLFVBQVU7NEJBQ25CLFdBQVcsc0JBQXNCO3lCQUNsQztxQkFDRjtpQkFDRjs4QkFNYyxJQUFJO3NCQUFoQixLQUFLOztBQVdSLE1BQU0sT0FBTywwQkFBMEI7O3VIQUExQiwwQkFBMEI7d0hBQTFCLDBCQUEwQixpQkFoQjFCLG9CQUFvQixhQUFwQixvQkFBb0I7d0hBZ0JwQiwwQkFBMEI7MkZBQTFCLDBCQUEwQjtrQkFKdEMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztvQkFDcEMsT0FBTyxFQUFFLENBQUMsb0JBQW9CLENBQUM7aUJBQ2hDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gR0VORVJBVEVEXG5pbXBvcnQgeyBOZ3RUZXh0dXJlIH0gZnJvbSAnQGFuZ3VsYXItdGhyZWUvY29yZSc7XG5pbXBvcnQgeyBOZ01vZHVsZSwgRGlyZWN0aXZlLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICduZ3QtY29tcHJlc3NlZC10ZXh0dXJlJyxcbiAgZXhwb3J0QXM6ICduZ3RDb21wcmVzc2VkVGV4dHVyZScsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5ndFRleHR1cmUsXG4gICAgICB1c2VFeGlzdGluZzogTmd0Q29tcHJlc3NlZFRleHR1cmUsXG4gICAgfSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgTmd0Q29tcHJlc3NlZFRleHR1cmUgZXh0ZW5kcyBOZ3RUZXh0dXJlPFRIUkVFLkNvbXByZXNzZWRUZXh0dXJlPiB7XG4gIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9hcmdzOlxuICAgIHwgQ29uc3RydWN0b3JQYXJhbWV0ZXJzPHR5cGVvZiBUSFJFRS5Db21wcmVzc2VkVGV4dHVyZT5cbiAgICB8IHVuZGVmaW5lZDtcblxuICBASW5wdXQoKSBzZXQgYXJncyh2OiBDb25zdHJ1Y3RvclBhcmFtZXRlcnM8dHlwZW9mIFRIUkVFLkNvbXByZXNzZWRUZXh0dXJlPikge1xuICAgIHRoaXMudGV4dHVyZUFyZ3MgPSB2O1xuICB9XG5cbiAgdGV4dHVyZVR5cGUgPSBUSFJFRS5Db21wcmVzc2VkVGV4dHVyZTtcbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbTmd0Q29tcHJlc3NlZFRleHR1cmVdLFxuICBleHBvcnRzOiBbTmd0Q29tcHJlc3NlZFRleHR1cmVdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ3RDb21wcmVzc2VkVGV4dHVyZU1vZHVsZSB7fVxuIl19