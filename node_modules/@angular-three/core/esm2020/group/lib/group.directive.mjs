var _NgtGroup_group;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { NGT_OBJECT_CONTROLLER_PROVIDER, NGT_OBJECT_WATCHED_CONTROLLER, NgtObject3dController, NgtObject3dControllerModule, } from '@angular-three/core';
import { Directive, EventEmitter, Inject, NgModule, NgZone, Output, } from '@angular/core';
import * as THREE from 'three';
import * as i0 from "@angular/core";
import * as i1 from "@angular-three/core";
export class NgtGroup {
    constructor(objectController, ngZone) {
        this.objectController = objectController;
        this.ngZone = ngZone;
        this.ready = new EventEmitter();
        _NgtGroup_group.set(this, void 0);
        objectController.initFn = () => {
            __classPrivateFieldSet(this, _NgtGroup_group, new THREE.Group(), "f");
            return __classPrivateFieldGet(this, _NgtGroup_group, "f");
        };
        objectController.readyFn = () => {
            this.ready.emit(this.group);
        };
    }
    get group() {
        return __classPrivateFieldGet(this, _NgtGroup_group, "f");
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            this.objectController.init();
        });
    }
}
_NgtGroup_group = new WeakMap();
NgtGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtGroup, deps: [{ token: NGT_OBJECT_WATCHED_CONTROLLER }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });
NgtGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: NgtGroup, selector: "ngt-group", outputs: { ready: "ready" }, providers: [NGT_OBJECT_CONTROLLER_PROVIDER], exportAs: ["ngtGroup"], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtGroup, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-group',
                    exportAs: 'ngtGroup',
                    providers: [NGT_OBJECT_CONTROLLER_PROVIDER],
                }]
        }], ctorParameters: function () { return [{ type: i1.NgtObject3dController, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_WATCHED_CONTROLLER]
                }] }, { type: i0.NgZone }]; }, propDecorators: { ready: [{
                type: Output
            }] } });
export class NgtGroupModule {
}
NgtGroupModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtGroupModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtGroupModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtGroupModule, declarations: [NgtGroup], exports: [NgtGroup, NgtObject3dControllerModule] });
NgtGroupModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtGroupModule, imports: [NgtObject3dControllerModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtGroupModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtGroup],
                    exports: [NgtGroup, NgtObject3dControllerModule],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29yZS9ncm91cC9zcmMvbGliL2dyb3VwLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFDTCw4QkFBOEIsRUFDOUIsNkJBQTZCLEVBQzdCLHFCQUFxQixFQUNyQiwyQkFBMkIsR0FDNUIsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixNQUFNLEVBQ04sUUFBUSxFQUNSLE1BQU0sRUFFTixNQUFNLEdBQ1AsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7OztBQU8vQixNQUFNLE9BQU8sUUFBUTtJQVFuQixZQUVVLGdCQUF1QyxFQUN2QyxNQUFjO1FBRGQscUJBQWdCLEdBQWhCLGdCQUFnQixDQUF1QjtRQUN2QyxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBVmQsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFlLENBQUM7UUFFbEQsa0NBQXFCO1FBVW5CLGdCQUFnQixDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUU7WUFDN0IsdUJBQUEsSUFBSSxtQkFBVSxJQUFJLEtBQUssQ0FBQyxLQUFLLEVBQUUsTUFBQSxDQUFDO1lBQ2hDLE9BQU8sdUJBQUEsSUFBSSx1QkFBTyxDQUFDO1FBQ3JCLENBQUMsQ0FBQztRQUNGLGdCQUFnQixDQUFDLE9BQU8sR0FBRyxHQUFHLEVBQUU7WUFDOUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlCLENBQUMsQ0FBQztJQUNKLENBQUM7SUFoQkQsSUFBSSxLQUFLO1FBQ1AsT0FBTyx1QkFBQSxJQUFJLHVCQUFPLENBQUM7SUFDckIsQ0FBQztJQWdCRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDO1FBQy9CLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7O3FHQTFCVSxRQUFRLGtCQVNULDZCQUE2Qjt5RkFUNUIsUUFBUSxpRUFGUixDQUFDLDhCQUE4QixDQUFDOzJGQUVoQyxRQUFRO2tCQUxwQixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO29CQUNyQixRQUFRLEVBQUUsVUFBVTtvQkFDcEIsU0FBUyxFQUFFLENBQUMsOEJBQThCLENBQUM7aUJBQzVDOzswQkFVSSxNQUFNOzJCQUFDLDZCQUE2QjtpRUFSN0IsS0FBSztzQkFBZCxNQUFNOztBQWdDVCxNQUFNLE9BQU8sY0FBYzs7MkdBQWQsY0FBYzs0R0FBZCxjQUFjLGlCQWpDZCxRQUFRLGFBQVIsUUFBUSxFQStCQywyQkFBMkI7NEdBRXBDLGNBQWMsWUFGTCwyQkFBMkI7MkZBRXBDLGNBQWM7a0JBSjFCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsUUFBUSxDQUFDO29CQUN4QixPQUFPLEVBQUUsQ0FBQyxRQUFRLEVBQUUsMkJBQTJCLENBQUM7aUJBQ2pEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgTkdUX09CSkVDVF9DT05UUk9MTEVSX1BST1ZJREVSLFxuICBOR1RfT0JKRUNUX1dBVENIRURfQ09OVFJPTExFUixcbiAgTmd0T2JqZWN0M2RDb250cm9sbGVyLFxuICBOZ3RPYmplY3QzZENvbnRyb2xsZXJNb2R1bGUsXG59IGZyb20gJ0Bhbmd1bGFyLXRocmVlL2NvcmUnO1xuaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBFdmVudEVtaXR0ZXIsXG4gIEluamVjdCxcbiAgTmdNb2R1bGUsXG4gIE5nWm9uZSxcbiAgT25Jbml0LFxuICBPdXRwdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICduZ3QtZ3JvdXAnLFxuICBleHBvcnRBczogJ25ndEdyb3VwJyxcbiAgcHJvdmlkZXJzOiBbTkdUX09CSkVDVF9DT05UUk9MTEVSX1BST1ZJREVSXSxcbn0pXG5leHBvcnQgY2xhc3MgTmd0R3JvdXAgaW1wbGVtZW50cyBPbkluaXQge1xuICBAT3V0cHV0KCkgcmVhZHkgPSBuZXcgRXZlbnRFbWl0dGVyPFRIUkVFLkdyb3VwPigpO1xuXG4gICNncm91cD86IFRIUkVFLkdyb3VwO1xuICBnZXQgZ3JvdXAoKSB7XG4gICAgcmV0dXJuIHRoaXMuI2dyb3VwO1xuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChOR1RfT0JKRUNUX1dBVENIRURfQ09OVFJPTExFUilcbiAgICBwcml2YXRlIG9iamVjdENvbnRyb2xsZXI6IE5ndE9iamVjdDNkQ29udHJvbGxlcixcbiAgICBwcml2YXRlIG5nWm9uZTogTmdab25lXG4gICkge1xuICAgIG9iamVjdENvbnRyb2xsZXIuaW5pdEZuID0gKCkgPT4ge1xuICAgICAgdGhpcy4jZ3JvdXAgPSBuZXcgVEhSRUUuR3JvdXAoKTtcbiAgICAgIHJldHVybiB0aGlzLiNncm91cDtcbiAgICB9O1xuICAgIG9iamVjdENvbnRyb2xsZXIucmVhZHlGbiA9ICgpID0+IHtcbiAgICAgIHRoaXMucmVhZHkuZW1pdCh0aGlzLmdyb3VwKTtcbiAgICB9O1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgdGhpcy5vYmplY3RDb250cm9sbGVyLmluaXQoKTtcbiAgICB9KTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtOZ3RHcm91cF0sXG4gIGV4cG9ydHM6IFtOZ3RHcm91cCwgTmd0T2JqZWN0M2RDb250cm9sbGVyTW9kdWxlXSxcbn0pXG5leHBvcnQgY2xhc3MgTmd0R3JvdXBNb2R1bGUge31cbiJdfQ==