import { NgtObject3dController } from '@angular-three/core';
import { EventEmitter, NgZone, OnInit } from '@angular/core';
import * as THREE from 'three';
import * as i0 from "@angular/core";
export declare class NgtCubeCamera implements OnInit {
    #private;
    private objectController;
    private ngZone;
    ready: EventEmitter<THREE.CubeCamera>;
    static ngAcceptInputType_args: ConstructorParameters<typeof THREE.CubeCamera>;
    get cubeCamera(): THREE.CubeCamera | undefined;
    args: ConstructorParameters<typeof THREE.CubeCamera>;
    constructor(objectController: NgtObject3dController, ngZone: NgZone);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtCubeCamera, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgtCubeCamera, "ngt-cube-camera", ["ngtCubeCamera"], { "args": "args"; }, { "ready": "ready"; }, never>;
}
export declare class NgtCubeCameraModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtCubeCameraModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgtCubeCameraModule, [typeof NgtCubeCamera], never, [typeof NgtCubeCamera]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgtCubeCameraModule>;
}
