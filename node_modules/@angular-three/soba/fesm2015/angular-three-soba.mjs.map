{"version":3,"file":"angular-three-soba.mjs","sources":["../../../../packages/soba/src/lib/shader-material.ts","../../../../packages/soba/src/lib/presets.ts","../../../../packages/soba/src/angular-three-soba.ts"],"sourcesContent":["import * as THREE from 'three';\n\nexport function shaderMaterial(\n  uniforms: {\n    [name: string]:\n      | THREE.CubeTexture\n      | THREE.Texture\n      | Int32Array\n      | Float32Array\n      | THREE.Matrix4\n      | THREE.Matrix3\n      | THREE.Quaternion\n      | THREE.Vector4\n      | THREE.Vector3\n      | THREE.Vector2\n      | THREE.Color\n      | number\n      | boolean\n      | Array<any>\n      | null;\n  },\n  vertexShader: string,\n  fragmentShader: string,\n  onInit?: (material?: THREE.ShaderMaterial) => void\n) {\n  return class extends THREE.ShaderMaterial {\n    constructor() {\n      const entries = Object.entries(uniforms);\n      // Create unforms and shaders\n      super({\n        uniforms: entries.reduce((acc, [name, value]) => {\n          const uniform = THREE.UniformsUtils.clone({ [name]: { value } });\n          return {\n            ...acc,\n            ...uniform,\n          };\n        }, {}),\n        vertexShader,\n        fragmentShader,\n      });\n      // Create getter/setters\n      entries.forEach(([name]) =>\n        Object.defineProperty(this, name, {\n          get: () => this.uniforms[name].value,\n          set: (v) => (this.uniforms[name].value = v),\n        })\n      );\n      if (onInit) onInit(this);\n    }\n  };\n}\n","export const presetsObj = {\n  sunset: 'venice_sunset_1k.hdr',\n  dawn: 'kiara_1_dawn_1k.hdr',\n  night: 'dikhololo_night_1k.hdr',\n  warehouse: 'empty_warehouse_01_1k.hdr',\n  forest: 'forest_slope_1k.hdr',\n  apartment: 'lebombo_1k.hdr',\n  studio: 'studio_small_03_1k.hdr',\n  city: 'potsdamer_platz_1k.hdr',\n  park: 'rooitou_park_1k.hdr',\n  lobby: 'st_fagans_interior_1k.hdr',\n};\n\nexport type PresetsType = keyof typeof presetsObj;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;SAEgB,cAAc,CAC5B,QAiBC,EACD,YAAoB,EACpB,cAAsB,EACtB,MAAkD;IAElD,OAAO,cAAc,KAAK,CAAC,cAAc;QACvC;YACE,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;;YAEzC,KAAK,CAAC;gBACJ,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;oBAC1C,MAAM,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;oBACjE,uCACK,GAAG,GACH,OAAO,EACV;iBACH,EAAE,EAAE,CAAC;gBACN,YAAY;gBACZ,cAAc;aACf,CAAC,CAAC;;YAEH,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KACrB,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE;gBAChC,GAAG,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK;gBACpC,GAAG,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;aAC5C,CAAC,CACH,CAAC;YACF,IAAI,MAAM;gBAAE,MAAM,CAAC,IAAI,CAAC,CAAC;SAC1B;KACF,CAAC;AACJ;;MClDa,UAAU,GAAG;IACxB,MAAM,EAAE,sBAAsB;IAC9B,IAAI,EAAE,qBAAqB;IAC3B,KAAK,EAAE,wBAAwB;IAC/B,SAAS,EAAE,2BAA2B;IACtC,MAAM,EAAE,qBAAqB;IAC7B,SAAS,EAAE,gBAAgB;IAC3B,MAAM,EAAE,wBAAwB;IAChC,IAAI,EAAE,wBAAwB;IAC9B,IAAI,EAAE,qBAAqB;IAC3B,KAAK,EAAE,2BAA2B;;;ACVpC;;;;;;"}