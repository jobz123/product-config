{"version":3,"file":"angular-three-soba-loaders.mjs","sources":["../../../../packages/soba/loaders/src/lib/texture-loader/texture-loader.service.ts","../../../../packages/soba/loaders/src/lib/gltf-loader/gltf-loader.service.ts","../../../../packages/soba/loaders/src/lib/progress/progress.service.ts","../../../../packages/soba/loaders/src/lib/loader/loader.component.ts","../../../../packages/soba/loaders/src/angular-three-soba-loaders.ts"],"sourcesContent":["import { NgtLoaderService, NgtStore } from '@angular-three/core';\nimport { Injectable } from '@angular/core';\nimport { combineLatest, map, Observable, tap } from 'rxjs';\nimport * as THREE from 'three';\n\nexport const IsObject = (url: any): url is Record<string, string> =>\n  url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\n\n@Injectable({ providedIn: 'root' })\nexport class NgtTextureLoaderService {\n  constructor(\n    private store: NgtStore,\n    private loaderService: NgtLoaderService\n  ) {}\n\n  load<TInput extends string | string[] | Record<string, string>>(\n    input: TInput\n  ): Observable<\n    TInput extends any[]\n      ? THREE.Texture[]\n      : TInput extends object\n      ? Record<keyof TInput, THREE.Texture>\n      : THREE.Texture\n  > {\n    return combineLatest([\n      this.store.select('renderer'),\n      this.loaderService.use(\n        THREE.TextureLoader,\n        IsObject(input) ? Object.values(input) : input\n      ),\n    ]).pipe(\n      tap(([renderer, textures]) => {\n        if (renderer) {\n          (Array.isArray(textures) ? textures : [textures]).forEach(\n            renderer.initTexture.bind(renderer)\n          );\n        }\n      }),\n      map(([, textures]) => {\n        if (IsObject(input)) {\n          return Object.keys(input).reduce((record, key, index) => {\n            record[key as keyof TInput] = (textures as THREE.Texture[])[index];\n            return record;\n          }, {} as Record<keyof TInput, THREE.Texture>);\n        }\n\n        return textures;\n      })\n    ) as Observable<\n      TInput extends any[]\n        ? THREE.Texture[]\n        : TInput extends object\n        ? Record<keyof TInput, THREE.Texture>\n        : THREE.Texture\n    >;\n  }\n}\n","import { NgtLoaderService, NgtObjectMap } from '@angular-three/core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as THREE from 'three';\n// @ts-ignore\nimport { MeshoptDecoder } from 'three-stdlib';\nimport { DRACOLoader } from 'three-stdlib/loaders/DRACOLoader';\nimport { GLTF, GLTFLoader } from 'three-stdlib/loaders/GLTFLoader';\n\nlet dracoLoader: DRACOLoader | null = null;\n\nfunction _extensions(\n  useDraco: boolean | string,\n  useMeshOpt: boolean,\n  extensions?: (loader: GLTFLoader) => void\n) {\n  return (loader: THREE.Loader) => {\n    if (extensions) {\n      extensions(loader as GLTFLoader);\n    }\n\n    if (useDraco) {\n      if (!dracoLoader) {\n        dracoLoader = new DRACOLoader();\n      }\n\n      dracoLoader.setDecoderPath(\n        typeof useDraco === 'string'\n          ? useDraco\n          : 'https://www.gstatic.com/draco/versioned/decoders/1.4.3/'\n      );\n      (loader as GLTFLoader).setDRACOLoader(dracoLoader);\n    }\n\n    if (useMeshOpt) {\n      (loader as GLTFLoader).setMeshoptDecoder(\n        typeof MeshoptDecoder === 'function' ? MeshoptDecoder() : MeshoptDecoder\n      );\n    }\n  };\n}\n\n@Injectable({ providedIn: 'root' })\nexport class NgtGLTFLoaderService {\n  constructor(private loaderService: NgtLoaderService) {}\n\n  load<TInput extends string | string[]>(\n    path: TInput,\n    useDraco: boolean | string = true,\n    useMeshOpt: boolean = true,\n    extensions?: (loader: GLTFLoader) => void\n  ): Observable<\n    TInput extends any[] ? (GLTF & NgtObjectMap)[] : GLTF & NgtObjectMap\n  > {\n    return this.loaderService.use(\n      GLTFLoader,\n      path,\n      _extensions(useDraco, useMeshOpt, extensions)\n    ) as Observable<\n      TInput extends any[] ? (GLTF & NgtObjectMap)[] : GLTF & NgtObjectMap\n    >;\n  }\n}\n","import { EnhancedRxState } from '@angular-three/core';\nimport { Injectable } from '@angular/core';\nimport * as THREE from 'three';\n\ninterface NgtProgressResult {\n  errors: string[];\n  active: boolean;\n  progress: number;\n  item: string;\n  loaded: number;\n  total: number;\n}\n\n@Injectable()\nexport class NgtSobaProgress extends EnhancedRxState<NgtProgressResult> {\n  constructor() {\n    super();\n    let saveLastTotalLoaded = 0;\n    this.set({ active: false, errors: [] });\n    THREE.DefaultLoadingManager.onStart = (item, loaded, total) => {\n      this.set({\n        active: true,\n        item,\n        loaded,\n        total,\n        progress:\n          ((loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded)) *\n          100,\n      });\n    };\n\n    THREE.DefaultLoadingManager.onLoad = () => {\n      this.set({ active: false });\n    };\n\n    THREE.DefaultLoadingManager.onError = (url: string) => {\n      this.set((state) => ({ errors: [...state.errors, url] }));\n    };\n\n    THREE.DefaultLoadingManager.onProgress = (item, loaded, total) => {\n      if (loaded === total) {\n        saveLastTotalLoaded = total;\n      }\n      this.set({\n        active: true,\n        item,\n        loaded,\n        total,\n        progress:\n          ((loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded)) *\n            100 || 100,\n      });\n    };\n  }\n}\n","import { EnhancedRxState } from '@angular-three/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  NgModule,\n  ViewChild,\n} from '@angular/core';\nimport {\n  cancelAnimationFrame,\n  requestAnimationFrame,\n} from '@rx-angular/cdk/zone-less';\nimport { selectSlice } from '@rx-angular/state';\nimport { combineLatest, map, timer } from 'rxjs';\nimport { NgtSobaProgress } from '../progress/progress.service';\n\ninterface NgtSobaLoaderState {\n  shown: boolean;\n  loaderConfig: {\n    containerClass?: string;\n    innerContainerClass?: string;\n    barClass?: string;\n    dataClass?: string;\n    dataInterpolation?: (value: number) => string;\n  };\n}\n\n@Component({\n  selector: 'ngt-soba-loader',\n  template: `\n    <ng-container *ngIf=\"vm$ | async as vm\">\n      <div\n        *ngIf=\"vm.shown\"\n        class=\"container\"\n        [style.opacity]=\"vm.active ? 1 : 0\"\n        [class]=\"vm.containerClass\"\n      >\n        <div>\n          <div class=\"inner\" [class]=\"vm.innerContainerClass\">\n            <div\n              class=\"bar\"\n              [class]=\"vm.barClass\"\n              [style.transform]=\"'scaleX(' + vm.progress / 100 + ')'\"\n            ></div>\n            <span #progressSpan class=\"data\" [class]=\"vm.dataClass\"></span>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  `,\n  styles: [\n    // language=SCSS\n    `\n      .container {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: #171717;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: opacity 300ms ease;\n        z-index: 1000;\n      }\n\n      .inner {\n        width: 100px;\n        height: 3px;\n        background: #272727;\n        text-align: center;\n      }\n\n      .bar {\n        height: 3px;\n        width: 100%;\n        background: white;\n        transition: transform 200ms;\n        transform-origin: left center;\n      }\n\n      .data {\n        display: inline-block;\n        position: relative;\n        font-variant-numeric: tabular-nums;\n        margin-top: 0.8em;\n        color: #f0f0f0;\n        font-size: 0.6em;\n        font-family: -apple-system, BlinkMacSystemFont, 'Inter', 'Segoe UI',\n          'Helvetica Neue', Helvetica, Arial, Roboto, Ubuntu, sans-serif,\n          'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n        white-space: nowrap;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [NgtSobaProgress],\n})\nexport class NgtSobaLoader\n  extends EnhancedRxState<NgtSobaLoaderState>\n  implements AfterViewInit\n{\n  readonly vm$ = combineLatest([\n    this.select(),\n    this.sobaProgress.select(selectSlice(['active', 'progress'])),\n  ]).pipe(\n    map(([state, { progress, active }]) => ({\n      shown: state.shown,\n      containerClass: state.loaderConfig.containerClass,\n      innerContainerClass: state.loaderConfig.innerContainerClass,\n      barClass: state.loaderConfig.barClass,\n      dataClass: state.loaderConfig.dataClass,\n      progress,\n      active,\n    }))\n  );\n\n  #initShown$ = combineLatest([\n    this.select('shown'),\n    this.sobaProgress.select('active'),\n  ]).pipe(map(([shown, active]) => ({ shown, active })));\n\n  #progress$ = combineLatest([\n    this.select('loaderConfig', 'dataInterpolation'),\n    this.sobaProgress.select('progress'),\n  ]).pipe(\n    map(([dataInterpolation, progress]) => ({ dataInterpolation, progress }))\n  );\n\n  @ViewChild('progressSpan') progressSpan?: ElementRef<HTMLSpanElement>;\n\n  #progress = 0;\n\n  constructor(private sobaProgress: NgtSobaProgress) {\n    super();\n    this.set({\n      shown: sobaProgress.get('active'),\n      loaderConfig: {\n        dataInterpolation: (value: number) => `Loading ${value.toFixed(2)}%`,\n      },\n    });\n\n    this.holdEffect(this.#initShown$, ({ shown, active }) => {\n      if (shown !== active) {\n        const timer$ = timer(300).subscribe(() => this.set({ shown: active }));\n        return timer$.unsubscribe.bind(timer$);\n      }\n      return undefined;\n    });\n  }\n\n  ngAfterViewInit() {\n    this.holdEffect(this.#progress$, ({ progress, dataInterpolation }) => {\n      let raf: ReturnType<typeof requestAnimationFrame>;\n\n      const updateProgress = () => {\n        if (this.progressSpan) {\n          this.#progress += (progress - this.#progress) / 2;\n          if (this.#progress > 0.95 * progress || progress === 100)\n            this.#progress = progress;\n          this.progressSpan.nativeElement.innerText =\n            dataInterpolation?.(this.#progress) || '';\n\n          if (this.#progress < progress)\n            raf = requestAnimationFrame(updateProgress);\n        }\n      };\n\n      updateProgress();\n\n      return () => {\n        if (raf) {\n          cancelAnimationFrame(raf);\n        }\n      };\n    });\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaLoader],\n  exports: [NgtSobaLoader],\n  imports: [CommonModule],\n})\nexport class NgtSobaLoaderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}