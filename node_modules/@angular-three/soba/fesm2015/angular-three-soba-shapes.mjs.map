{"version":3,"file":"angular-three-soba-shapes.mjs","sources":["../../../../packages/soba/shapes/src/lib/plane/plane.component.ts","../../../../packages/soba/shapes/src/lib/box/box.component.ts","../../../../packages/soba/shapes/src/lib/cylinder/cylinder.component.ts","../../../../packages/soba/shapes/src/lib/cone/cone.component.ts","../../../../packages/soba/shapes/src/lib/circle/circle.component.ts","../../../../packages/soba/shapes/src/lib/sphere/sphere.component.ts","../../../../packages/soba/shapes/src/lib/tube/tube.component.ts","../../../../packages/soba/shapes/src/lib/torus/torus.component.ts","../../../../packages/soba/shapes/src/lib/tetrahedron/tetrahedron.component.ts","../../../../packages/soba/shapes/src/lib/ring/ring.component.ts","../../../../packages/soba/shapes/src/lib/polyhedron/polyhedron.component.ts","../../../../packages/soba/shapes/src/lib/octahedron/octahedron.component.ts","../../../../packages/soba/shapes/src/lib/dodecahedron/dodecahedron.component.ts","../../../../packages/soba/shapes/src/lib/icosahedron/icosahedron.component.ts","../../../../packages/soba/shapes/src/lib/extrude/extrude.component.ts","../../../../packages/soba/shapes/src/lib/lathe/lathe.component.ts","../../../../packages/soba/shapes/src/lib/torus-knot/torus-knot.component.ts","../../../../packages/soba/shapes/src/index.ts","../../../../packages/soba/shapes/src/angular-three-soba-shapes.ts"],"sourcesContent":["// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtPlaneGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-plane',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-plane-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-plane-geometry>\n      <ng-template #withoutArgs>\n        <ngt-plane-geometry></ngt-plane-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaPlane },\n  ],\n})\nexport class NgtSobaPlane extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.PlaneGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaPlane],\n  exports: [\n    NgtSobaPlane,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtPlaneGeometryModule, CommonModule],\n})\nexport class NgtSobaPlaneModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtBoxGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-box',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-box-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-box-geometry>\n      <ng-template #withoutArgs>\n        <ngt-box-geometry></ngt-box-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaBox },\n  ],\n})\nexport class NgtSobaBox extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.BoxGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaBox],\n  exports: [\n    NgtSobaBox,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtBoxGeometryModule, CommonModule],\n})\nexport class NgtSobaBoxModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtCylinderGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-cylinder',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-cylinder-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-cylinder-geometry>\n      <ng-template #withoutArgs>\n        <ngt-cylinder-geometry></ngt-cylinder-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaCylinder },\n  ],\n})\nexport class NgtSobaCylinder extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.CylinderGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaCylinder],\n  exports: [\n    NgtSobaCylinder,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtCylinderGeometryModule, CommonModule],\n})\nexport class NgtSobaCylinderModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtConeGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-cone',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-cone-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-cone-geometry>\n      <ng-template #withoutArgs>\n        <ngt-cone-geometry></ngt-cone-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaCone },\n  ],\n})\nexport class NgtSobaCone extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.ConeGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaCone],\n  exports: [\n    NgtSobaCone,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtConeGeometryModule, CommonModule],\n})\nexport class NgtSobaConeModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtCircleGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-circle',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-circle-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-circle-geometry>\n      <ng-template #withoutArgs>\n        <ngt-circle-geometry></ngt-circle-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaCircle },\n  ],\n})\nexport class NgtSobaCircle extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.CircleGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaCircle],\n  exports: [\n    NgtSobaCircle,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtCircleGeometryModule, CommonModule],\n})\nexport class NgtSobaCircleModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtSphereGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-sphere',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-sphere-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-sphere-geometry>\n      <ng-template #withoutArgs>\n        <ngt-sphere-geometry></ngt-sphere-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaSphere },\n  ],\n})\nexport class NgtSobaSphere extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.SphereGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaSphere],\n  exports: [\n    NgtSobaSphere,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtSphereGeometryModule, CommonModule],\n})\nexport class NgtSobaSphereModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtTubeGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-tube',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-tube-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-tube-geometry>\n      <ng-template #withoutArgs>\n        <ngt-tube-geometry></ngt-tube-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaTube },\n  ],\n})\nexport class NgtSobaTube extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.TubeGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaTube],\n  exports: [\n    NgtSobaTube,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtTubeGeometryModule, CommonModule],\n})\nexport class NgtSobaTubeModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtTorusGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-torus',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-torus-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-torus-geometry>\n      <ng-template #withoutArgs>\n        <ngt-torus-geometry></ngt-torus-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaTorus },\n  ],\n})\nexport class NgtSobaTorus extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.TorusGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaTorus],\n  exports: [\n    NgtSobaTorus,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtTorusGeometryModule, CommonModule],\n})\nexport class NgtSobaTorusModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtTetrahedronGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-tetrahedron',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-tetrahedron-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-tetrahedron-geometry>\n      <ng-template #withoutArgs>\n        <ngt-tetrahedron-geometry></ngt-tetrahedron-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaTetrahedron },\n  ],\n})\nexport class NgtSobaTetrahedron extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.TetrahedronGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaTetrahedron],\n  exports: [\n    NgtSobaTetrahedron,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtTetrahedronGeometryModule, CommonModule],\n})\nexport class NgtSobaTetrahedronModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtRingGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-ring',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-ring-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-ring-geometry>\n      <ng-template #withoutArgs>\n        <ngt-ring-geometry></ngt-ring-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaRing },\n  ],\n})\nexport class NgtSobaRing extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.RingGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaRing],\n  exports: [\n    NgtSobaRing,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtRingGeometryModule, CommonModule],\n})\nexport class NgtSobaRingModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtPolyhedronGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-polyhedron',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-polyhedron-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-polyhedron-geometry>\n      <ng-template #withoutArgs>\n        <ngt-polyhedron-geometry></ngt-polyhedron-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaPolyhedron },\n  ],\n})\nexport class NgtSobaPolyhedron extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.PolyhedronGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaPolyhedron],\n  exports: [\n    NgtSobaPolyhedron,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtPolyhedronGeometryModule, CommonModule],\n})\nexport class NgtSobaPolyhedronModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtOctahedronGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-octahedron',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-octahedron-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-octahedron-geometry>\n      <ng-template #withoutArgs>\n        <ngt-octahedron-geometry></ngt-octahedron-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaOctahedron },\n  ],\n})\nexport class NgtSobaOctahedron extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.OctahedronGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaOctahedron],\n  exports: [\n    NgtSobaOctahedron,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtOctahedronGeometryModule, CommonModule],\n})\nexport class NgtSobaOctahedronModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtDodecahedronGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-dodecahedron',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-dodecahedron-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-dodecahedron-geometry>\n      <ng-template #withoutArgs>\n        <ngt-dodecahedron-geometry></ngt-dodecahedron-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaDodecahedron },\n  ],\n})\nexport class NgtSobaDodecahedron extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.DodecahedronGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaDodecahedron],\n  exports: [\n    NgtSobaDodecahedron,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtDodecahedronGeometryModule, CommonModule],\n})\nexport class NgtSobaDodecahedronModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtIcosahedronGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-icosahedron',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-icosahedron-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-icosahedron-geometry>\n      <ng-template #withoutArgs>\n        <ngt-icosahedron-geometry></ngt-icosahedron-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaIcosahedron },\n  ],\n})\nexport class NgtSobaIcosahedron extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.IcosahedronGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaIcosahedron],\n  exports: [\n    NgtSobaIcosahedron,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtIcosahedronGeometryModule, CommonModule],\n})\nexport class NgtSobaIcosahedronModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtExtrudeGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-extrude',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-extrude-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-extrude-geometry>\n      <ng-template #withoutArgs>\n        <ngt-extrude-geometry></ngt-extrude-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaExtrude },\n  ],\n})\nexport class NgtSobaExtrude extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.ExtrudeGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaExtrude],\n  exports: [\n    NgtSobaExtrude,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtExtrudeGeometryModule, CommonModule],\n})\nexport class NgtSobaExtrudeModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtLatheGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-lathe',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-lathe-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-lathe-geometry>\n      <ng-template #withoutArgs>\n        <ngt-lathe-geometry></ngt-lathe-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaLathe },\n  ],\n})\nexport class NgtSobaLathe extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.LatheGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaLathe],\n  exports: [\n    NgtSobaLathe,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtLatheGeometryModule, CommonModule],\n})\nexport class NgtSobaLatheModule {}\n","// GENERATED\nimport {\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtContentMaterialController,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtObject3dInputsControllerModule,\n  NgtContentMaterialControllerModule,\n} from '@angular-three/core';\nimport { NgtTorusKnotGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-torus-knot',\n  template: `\n    <ngt-mesh\n      (ready)=\"object = $event\"\n      [object3dInputsController]=\"objectInputsController\"\n      [contentMaterialController]=\"contentMaterialController\"\n    >\n      <ngt-torus-knot-geometry\n        *ngIf=\"args; else withoutArgs\"\n        [args]=\"args\"\n      ></ngt-torus-knot-geometry>\n      <ng-template #withoutArgs>\n        <ngt-torus-knot-geometry></ngt-torus-knot-geometry>\n      </ng-template>\n    </ngt-mesh>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaTorusKnot },\n  ],\n})\nexport class NgtSobaTorusKnot extends NgtSobaExtender<THREE.Mesh> {\n  @Input() args?: ConstructorParameters<typeof THREE.TorusKnotGeometry>;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    public contentMaterialController: NgtContentMaterialController\n  ) {\n    super();\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaTorusKnot],\n  exports: [\n    NgtSobaTorusKnot,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtTorusKnotGeometryModule, CommonModule],\n})\nexport class NgtSobaTorusKnotModule {}\n","// GENERATED\nexport * from './lib/plane/plane.component';\nexport * from './lib/box/box.component';\nexport * from './lib/cylinder/cylinder.component';\nexport * from './lib/cone/cone.component';\nexport * from './lib/circle/circle.component';\nexport * from './lib/sphere/sphere.component';\nexport * from './lib/tube/tube.component';\nexport * from './lib/torus/torus.component';\nexport * from './lib/tetrahedron/tetrahedron.component';\nexport * from './lib/ring/ring.component';\nexport * from './lib/polyhedron/polyhedron.component';\nexport * from './lib/octahedron/octahedron.component';\nexport * from './lib/dodecahedron/dodecahedron.component';\nexport * from './lib/icosahedron/icosahedron.component';\nexport * from './lib/extrude/extrude.component';\nexport * from './lib/lathe/lathe.component';\nexport * from './lib/torus-knot/torus-knot.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}