import { NgtColor, NgtContentMaterialController, NgtLoopService, NgtObject3dInputsController, NgtSobaExtender, NgtVector4 } from '@angular-three/core';
import { ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit } from '@angular/core';
import { Text as TextMeshImpl } from 'troika-three-text';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular-three/core/primitive";
import * as i3 from "@angular-three/core";
export declare class NgtSobaText extends NgtSobaExtender<TextMeshImpl> implements OnInit, OnChanges, OnDestroy {
    #private;
    objectInputsController: NgtObject3dInputsController;
    private contentMaterialController;
    private elRef;
    private ngZone;
    private loopService;
    color?: NgtColor;
    fontSize?: number;
    maxWidth?: number;
    lineHeight?: number;
    letterSpacing?: number;
    textAlign?: 'left' | 'right' | 'center' | 'justify';
    font?: string;
    anchorX: number | 'left' | 'center' | 'right';
    anchorY: number | 'top' | 'top-baseline' | 'middle' | 'bottom-baseline' | 'bottom';
    clipRect?: NgtVector4;
    depthOffset?: number;
    direction?: 'auto' | 'ltr' | 'rtl';
    overflowWrap?: 'normal' | 'break-word';
    whiteSpace?: 'normal' | 'overflowWrap' | 'overflowWrap';
    outlineWidth?: number | string;
    outlineOffsetX?: number | string;
    outlineOffsetY?: number | string;
    outlineBlur?: number | string;
    outlineColor?: NgtColor;
    outlineOpacity?: number;
    strokeWidth?: number | string;
    strokeColor?: NgtColor;
    strokeOpacity?: number;
    fillOpacity?: number;
    debugSDF?: boolean;
    sync: EventEmitter<TextMeshImpl>;
    get text(): string;
    set text(value: string);
    constructor(objectInputsController: NgtObject3dInputsController, contentMaterialController: NgtContentMaterialController, elRef: ElementRef<HTMLElement>, ngZone: NgZone, loopService: NgtLoopService);
    ngOnChanges(): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    onTroikaTextReady(troikaText: TextMeshImpl): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtSobaText, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgtSobaText, "ngt-soba-text", never, { "color": "color"; "fontSize": "fontSize"; "maxWidth": "maxWidth"; "lineHeight": "lineHeight"; "letterSpacing": "letterSpacing"; "textAlign": "textAlign"; "font": "font"; "anchorX": "anchorX"; "anchorY": "anchorY"; "clipRect": "clipRect"; "depthOffset": "depthOffset"; "direction": "direction"; "overflowWrap": "overflowWrap"; "whiteSpace": "whiteSpace"; "outlineWidth": "outlineWidth"; "outlineOffsetX": "outlineOffsetX"; "outlineOffsetY": "outlineOffsetY"; "outlineBlur": "outlineBlur"; "outlineColor": "outlineColor"; "outlineOpacity": "outlineOpacity"; "strokeWidth": "strokeWidth"; "strokeColor": "strokeColor"; "strokeOpacity": "strokeOpacity"; "fillOpacity": "fillOpacity"; "debugSDF": "debugSDF"; }, { "sync": "sync"; }, never, ["*"]>;
}
export declare class NgtSobaTextModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtSobaTextModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgtSobaTextModule, [typeof NgtSobaText], [typeof i1.CommonModule, typeof i2.NgtPrimitiveModule], [typeof NgtSobaText, typeof i3.NgtObject3dInputsControllerModule, typeof i3.NgtContentMaterialControllerModule]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgtSobaTextModule>;
}
