import { EnhancedRxState, NgtEvent, NgtObject3dInputsController, NgtSobaExtender, NgtStore } from '@angular-three/core';
import { EventEmitter } from '@angular/core';
import * as THREE from 'three';
import { NgtSobaGizmoHelperStore } from './gizmo-helper.store';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular-three/core/group";
import * as i3 from "@angular-three/soba/shapes";
import * as i4 from "@angular-three/core/materials";
import * as i5 from "@angular-three/core/sprites";
import * as i6 from "@angular-three/core";
import * as i7 from "@angular-three/core/lights";
export declare class NgtSobaGizmoViewport extends NgtSobaExtender<THREE.Group> {
    objectInputsController: NgtObject3dInputsController;
    private gizmoHelperStore;
    axisColors: [string, string, string];
    labels: [string, string, string];
    labelColor: string;
    font: string;
    axisHeadScale: number;
    hideNegativeAxes: boolean;
    hideAxisHeads: boolean;
    disabled: boolean;
    axisScale?: [number, number, number];
    click: EventEmitter<NgtEvent<PointerEvent>>;
    readonly gizmo$: import("rxjs").Observable<THREE.Group>;
    readonly raycast$: import("rxjs").Observable<(raycaster: THREE.Raycaster, intersects: THREE.Intersection<THREE.Object3D<THREE.Event>>[]) => void>;
    constructor(objectInputsController: NgtObject3dInputsController, gizmoHelperStore: NgtSobaGizmoHelperStore);
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtSobaGizmoViewport, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgtSobaGizmoViewport, "ngt-soba-gizmo-viewport", never, { "axisColors": "axisColors"; "labels": "labels"; "labelColor": "labelColor"; "font": "font"; "axisHeadScale": "axisHeadScale"; "hideNegativeAxes": "hideNegativeAxes"; "hideAxisHeads": "hideAxisHeads"; "disabled": "disabled"; "axisScale": "axisScale"; }, { "click": "click"; }, never, never>;
}
export declare class NgtSobaGizmoAxis extends NgtSobaExtender<THREE.Group> {
    #private;
    color: string;
    rotation: [number, number, number];
    set scale(v: [number, number, number] | undefined);
    get scale(): [number, number, number] | undefined;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtSobaGizmoAxis, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgtSobaGizmoAxis, "ngt-soba-gizmo-axis[color][rotation]", never, { "color": "color"; "rotation": "rotation"; "scale": "scale"; }, {}, never, never>;
}
export declare class NgtSobaGizmoAxisHead extends NgtSobaExtender<THREE.Sprite> {
    #private;
    objectInputsController: NgtObject3dInputsController;
    private gizmoViewport;
    private gizmoHelperStore;
    private store;
    private state;
    set arcStyle(arcStyle: string);
    set label(label: string);
    set labelColor(labelColor: string);
    set axisHeadScale(axisHeadScale: number);
    set disabled(disabled: boolean);
    set font(font: string);
    readonly vm$: import("rxjs").Observable<{
        texture: THREE.CanvasTexture;
        scale: number;
        opacity: number;
    }>;
    constructor(objectInputsController: NgtObject3dInputsController, document: Document, gizmoViewport: NgtSobaGizmoViewport, gizmoHelperStore: NgtSobaGizmoHelperStore, store: NgtStore, state: EnhancedRxState<{
        arcStyle: string;
        labelColor: string;
        axisHeadScale: number;
        disabled: boolean;
        font: string;
        texture: THREE.CanvasTexture;
        active: boolean;
        label: string;
    }>);
    onAxisHeadPointerOver($event: NgtEvent<PointerEvent>): void;
    onAxisHeadPointerOut($event: NgtEvent<PointerEvent>): void;
    onAxisHeadPointerDown($event: NgtEvent<PointerEvent>): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtSobaGizmoAxisHead, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgtSobaGizmoAxisHead, "ngt-soba-gizmo-axis-head", never, { "arcStyle": "arcStyle"; "label": "label"; "labelColor": "labelColor"; "axisHeadScale": "axisHeadScale"; "disabled": "disabled"; "font": "font"; }, {}, never, never>;
}
export declare class NgtSobaGizmoViewportModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<NgtSobaGizmoViewportModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgtSobaGizmoViewportModule, [typeof NgtSobaGizmoViewport, typeof NgtSobaGizmoAxis, typeof NgtSobaGizmoAxisHead], [typeof i1.CommonModule, typeof i2.NgtGroupModule, typeof i3.NgtSobaBoxModule, typeof i4.NgtMeshBasicMaterialModule, typeof i5.NgtSpriteModule, typeof i4.NgtSpriteMaterialModule, typeof i6.NgtMathPipeModule, typeof i7.NgtAmbientLightModule, typeof i7.NgtPointLightModule], [typeof NgtSobaGizmoViewport]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgtSobaGizmoViewportModule>;
}
