import { EnhancedRxState, NGT_AUDIO_CONTROLLER_PROVIDER, NGT_AUDIO_WATCHED_CONTROLLER, NgtAudioController, NgtAudioControllerModule, NgtLoaderService, NgtSobaExtender, NgtStore, } from '@angular-three/core';
import { NgtPositionalAudioModule } from '@angular-three/core/audios';
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, Inject, Injectable, Input, NgModule, } from '@angular/core';
import { selectSlice } from '@rx-angular/state';
import { combineLatest, distinctUntilChanged, map, startWith, switchMap, } from 'rxjs';
import * as THREE from 'three';
import * as i0 from "@angular/core";
import * as i1 from "@angular-three/core";
import * as i2 from "@angular/common";
import * as i3 from "@angular-three/core/audios";
export class NgtSobaPositionalAudioStore extends EnhancedRxState {
    constructor(loaderService, store) {
        super();
        this.loaderService = loaderService;
        this.store = store;
        this.buffer$ = this.select('url').pipe(switchMap((url) => this.loaderService.use(THREE.AudioLoader, url)));
        this.changes$ = combineLatest([
            this.buffer$,
            this.select(selectSlice(['distance', 'loop'])),
        ]).pipe(map(([buffer, { loop, distance }]) => ({ buffer, loop, distance })));
        this.set({ listener: new THREE.AudioListener(), distance: 1, loop: true });
        this.hold(this.changes$, ({ buffer, loop, distance }) => {
            const { autoplay, audio } = this.get();
            if (audio) {
                audio.setBuffer(buffer);
                audio.setRefDistance(distance);
                audio.setLoop(loop);
                if (autoplay && !audio.isPlaying)
                    audio.play();
            }
        });
        this.holdEffect(this.select('autoplay'), () => {
            const { audio, listener } = this.get();
            const camera = this.store.get('camera');
            if (camera) {
                camera.add(listener);
            }
            return () => {
                if (camera) {
                    camera.remove(listener);
                }
                if (audio) {
                    if (audio.isPlaying)
                        audio.stop();
                    if (audio.source &&
                        audio.source._connected) {
                        audio.disconnect();
                    }
                }
            };
        });
    }
}
NgtSobaPositionalAudioStore.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaPositionalAudioStore, deps: [{ token: i1.NgtLoaderService }, { token: i1.NgtStore }], target: i0.ɵɵFactoryTarget.Injectable });
NgtSobaPositionalAudioStore.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaPositionalAudioStore });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaPositionalAudioStore, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.NgtLoaderService }, { type: i1.NgtStore }]; } });
export class NgtSobaPositionalAudio extends NgtSobaExtender {
    constructor(audioController, sobaPositionalAudioStore) {
        super();
        this.audioController = audioController;
        this.sobaPositionalAudioStore = sobaPositionalAudioStore;
        this.listener$ = this.sobaPositionalAudioStore.select('listener');
        sobaPositionalAudioStore.connect('autoplay', audioController.change$.pipe(map(() => audioController.autoplay || false), startWith(audioController.autoplay || false), distinctUntilChanged()));
    }
    set url(url) {
        this.sobaPositionalAudioStore.set({ url });
    }
    set distance(distance) {
        this.sobaPositionalAudioStore.set({ distance });
    }
    set loop(loop) {
        this.sobaPositionalAudioStore.set({ loop });
    }
    onPositionalAudioReady(audio) {
        this.object = audio;
        this.sobaPositionalAudioStore.set({ audio });
    }
}
NgtSobaPositionalAudio.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaPositionalAudio, deps: [{ token: NGT_AUDIO_WATCHED_CONTROLLER }, { token: NgtSobaPositionalAudioStore }], target: i0.ɵɵFactoryTarget.Component });
NgtSobaPositionalAudio.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: NgtSobaPositionalAudio, selector: "ngt-soba-positional-audio", inputs: { url: "url", distance: "distance", loop: "loop" }, providers: [
        NGT_AUDIO_CONTROLLER_PROVIDER,
        NgtSobaPositionalAudioStore,
        { provide: NgtSobaExtender, useExisting: NgtSobaPositionalAudio },
    ], usesInheritance: true, ngImport: i0, template: `
    <ngt-positional-audio
      *ngIf="listener$ | async as listener"
      (ready)="onPositionalAudioReady($event)"
      [listener]="listener"
      [audioController]="audioController"
    ></ngt-positional-audio>
  `, isInline: true, directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgtPositionalAudio, selector: "ngt-positional-audio", exportAs: ["ngtPositionalAudio"] }, { type: i1.NgtAudioController, selector: "    ngt-audio,    ngt-positional-audio,    ngt-soba-positional-audio,  ", inputs: ["autoplay", "buffer", "detune", "loop", "loopStart", "loopEnd", "offset", "duration", "playbackRate", "isPlaying", "hasPlaybackControl", "sourceType", "source", "filters", "audioController"], exportAs: ["ngtAudioController"] }, { type: i1.NgtObject3dController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera  ", exportAs: ["ngtObject3dController"] }, { type: i1.NgtObject3dInputsController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-billboard,    ngt-soba-detailed,    ngt-soba-line,    ngt-soba-quadratic-bezier-line,    ngt-soba-cubic-bezier-line,    ngt-soba-orthographic-camera,    ngt-soba-gizmo-helper,    ngt-soba-gizmo-viewport,    ngt-soba-gizmo-axis-head,    ngt-soba-text  ", inputs: ["name", "position", "rotation", "quaternion", "scale", "color", "userData", "castShadow", "receiveShadow", "visible", "matrixAutoUpdate", "dispose", "raycast", "appendMode", "appendTo", "object3dInputsController"], outputs: ["click", "contextmenu", "dblclick", "pointerup", "pointerdown", "pointerover", "pointerout", "pointerenter", "pointerleave", "pointermove", "pointermissed", "pointercancel", "wheel"], exportAs: ["ngtObject3dInputsController"] }], pipes: { "async": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaPositionalAudio, decorators: [{
            type: Component,
            args: [{
                    selector: 'ngt-soba-positional-audio',
                    template: `
    <ngt-positional-audio
      *ngIf="listener$ | async as listener"
      (ready)="onPositionalAudioReady($event)"
      [listener]="listener"
      [audioController]="audioController"
    ></ngt-positional-audio>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        NGT_AUDIO_CONTROLLER_PROVIDER,
                        NgtSobaPositionalAudioStore,
                        { provide: NgtSobaExtender, useExisting: NgtSobaPositionalAudio },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i1.NgtAudioController, decorators: [{
                    type: Inject,
                    args: [NGT_AUDIO_WATCHED_CONTROLLER]
                }] }, { type: NgtSobaPositionalAudioStore }]; }, propDecorators: { url: [{
                type: Input
            }], distance: [{
                type: Input
            }], loop: [{
                type: Input
            }] } });
export class NgtSobaPositionalAudioModule {
}
NgtSobaPositionalAudioModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaPositionalAudioModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtSobaPositionalAudioModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaPositionalAudioModule, declarations: [NgtSobaPositionalAudio], imports: [NgtPositionalAudioModule, CommonModule], exports: [NgtSobaPositionalAudio, NgtAudioControllerModule] });
NgtSobaPositionalAudioModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaPositionalAudioModule, imports: [[NgtPositionalAudioModule, CommonModule], NgtAudioControllerModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaPositionalAudioModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtSobaPositionalAudio],
                    exports: [NgtSobaPositionalAudio, NgtAudioControllerModule],
                    imports: [NgtPositionalAudioModule, CommonModule],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9zaXRpb25hbC1hdWRpby5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9zb2JhL2Fic3RyYWN0aW9ucy9zcmMvcG9zaXRpb25hbC1hdWRpby9wb3NpdGlvbmFsLWF1ZGlvLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsZUFBZSxFQUNmLDZCQUE2QixFQUM3Qiw0QkFBNEIsRUFDNUIsa0JBQWtCLEVBQ2xCLHdCQUF3QixFQUN4QixnQkFBZ0IsRUFDaEIsZUFBZSxFQUNmLFFBQVEsR0FFVCxNQUFNLHFCQUFxQixDQUFDO0FBQzdCLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxNQUFNLEVBQ04sVUFBVSxFQUNWLEtBQUssRUFDTCxRQUFRLEdBQ1QsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2hELE9BQU8sRUFDTCxhQUFhLEVBQ2Isb0JBQW9CLEVBQ3BCLEdBQUcsRUFDSCxTQUFTLEVBQ1QsU0FBUyxHQUNWLE1BQU0sTUFBTSxDQUFDO0FBQ2QsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7Ozs7O0FBWS9CLE1BQU0sT0FBTywyQkFBNEIsU0FBUSxlQUE0QztJQVUzRixZQUNVLGFBQStCLEVBQy9CLEtBQWU7UUFFdkIsS0FBSyxFQUFFLENBQUM7UUFIQSxrQkFBYSxHQUFiLGFBQWEsQ0FBa0I7UUFDL0IsVUFBSyxHQUFMLEtBQUssQ0FBVTtRQVhoQixZQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQ3hDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxF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NkI7d0JBQzdCLDJCQUEyQjt3QkFDM0IsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsd0JBQXdCLEVBQUU7cUJBQ2xFO2lCQUNGOzswQkFpQkksTUFBTTsyQkFBQyw0QkFBNEI7OEJBRUYsMkJBQTJCLDBCQWpCbEQsR0FBRztzQkFBZixLQUFLO2dCQUlPLFFBQVE7c0JBQXBCLEtBQUs7Z0JBSU8sSUFBSTtzQkFBaEIsS0FBSzs7QUFpQ1IsTUFBTSxPQUFPLDRCQUE0Qjs7eUhBQTVCLDRCQUE0QjswSEFBNUIsNEJBQTRCLGlCQTFDNUIsc0JBQXNCLGFBd0N2Qix3QkFBd0IsRUFBRSxZQUFZLGFBeENyQyxzQkFBc0IsRUF1Q0Msd0JBQXdCOzBIQUcvQyw0QkFBNEIsWUFGOUIsQ0FBQyx3QkFBd0IsRUFBRSxZQUFZLENBQUMsRUFEZix3QkFBd0I7MkZBRy9DLDRCQUE0QjtrQkFMeEMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztvQkFDdEMsT0FBTyxFQUFFLENBQUMsc0JBQXNCLEVBQUUsd0JBQXdCLENBQUM7b0JBQzNELE9BQU8sRUFBRSxDQUFDLHdCQUF3QixFQUFFLFlBQVksQ0FBQztpQkFDbEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBFbmhhbmNlZFJ4U3RhdGUsXG4gIE5HVF9BVURJT19DT05UUk9MTEVSX1BST1ZJREVSLFxuICBOR1RfQVVESU9fV0FUQ0hFRF9DT05UUk9MTEVSLFxuICBOZ3RBdWRpb0NvbnRyb2xsZXIsXG4gIE5ndEF1ZGlvQ29udHJvbGxlck1vZHVsZSxcbiAgTmd0TG9hZGVyU2VydmljZSxcbiAgTmd0U29iYUV4dGVuZGVyLFxuICBOZ3RTdG9yZSxcbiAgVW5rbm93blJlY29yZCxcbn0gZnJvbSAnQGFuZ3VsYXItdGhyZWUvY29yZSc7XG5pbXBvcnQgeyBOZ3RQb3NpdGlvbmFsQXVkaW9Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci10aHJlZS9jb3JlL2F1ZGlvcyc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgSW5qZWN0LFxuICBJbmplY3RhYmxlLFxuICBJbnB1dCxcbiAgTmdNb2R1bGUsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgc2VsZWN0U2xpY2UgfSBmcm9tICdAcngtYW5ndWxhci9zdGF0ZSc7XG5pbXBvcnQge1xuICBjb21iaW5lTGF0ZXN0LFxuICBkaXN0aW5jdFVudGlsQ2hhbmdlZCxcbiAgbWFwLFxuICBzdGFydFdpdGgsXG4gIHN3aXRjaE1hcCxcbn0gZnJvbSAncnhqcyc7XG5pbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmd0U29iYVBvc2l0aW9uYWxBdWRpb1N0YXRlIHtcbiAgdXJsOiBzdHJpbmc7XG4gIGRpc3RhbmNlOiBudW1iZXI7XG4gIGxvb3A6IGJvb2xlYW47XG4gIGF1ZGlvOiBUSFJFRS5Qb3NpdGlvbmFsQXVkaW87XG4gIGxpc3RlbmVyOiBUSFJFRS5BdWRpb0xpc3RlbmVyO1xuICBhdXRvcGxheTogYm9vbGVhbjtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE5ndFNvYmFQb3NpdGlvbmFsQXVkaW9TdG9yZSBleHRlbmRzIEVuaGFuY2VkUnhTdGF0ZTxOZ3RTb2JhUG9zaXRpb25hbEF1ZGlvU3RhdGU+IHtcbiAgcmVhZG9ubHkgYnVmZmVyJCA9IHRoaXMuc2VsZWN0KCd1cmwnKS5waXBlKFxuICAgIHN3aXRjaE1hcCgodXJsKSA9PiB0aGlzLmxvYWRlclNlcnZpY2UudXNlKFRIUkVFLkF1ZGlvTG9hZGVyLCB1cmwpKVxuICApO1xuXG4gIHJlYWRvbmx5IGNoYW5nZXMkID0gY29tYmluZUxhdGVzdChbXG4gICAgdGhpcy5idWZmZXIkLFxuICAgIHRoaXMuc2VsZWN0KHNlbGVjdFNsaWNlKFsnZGlzdGFuY2UnLCAnbG9vcCddKSksXG4gIF0pLnBpcGUobWFwKChbYnVmZmVyLCB7IGxvb3AsIGRpc3RhbmNlIH1dKSA9PiAoeyBidWZmZXIsIGxvb3AsIGRpc3RhbmNlIH0pKSk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBsb2FkZXJTZXJ2aWNlOiBOZ3RMb2FkZXJTZXJ2aWNlLFxuICAgIHByaXZhdGUgc3RvcmU6IE5ndFN0b3JlXG4gICkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5zZXQoeyBsaXN0ZW5lcjogbmV3IFRIUkVFLkF1ZGlvTGlzdGVuZXIoKSwgZGlzdGFuY2U6IDEsIGxvb3A6IHRydWUgfSk7XG4gICAgdGhpcy5ob2xkKHRoaXMuY2hhbmdlcyQsICh7IGJ1ZmZlciwgbG9vcCwgZGlzdGFuY2UgfSkgPT4ge1xuICAgICAgY29uc3QgeyBhdXRvcGxheSwgYXVkaW8gfSA9IHRoaXMuZ2V0KCk7XG4gICAgICBpZiAoYXVkaW8pIHtcbiAgICAgICAgYXVkaW8uc2V0QnVmZmVyKGJ1ZmZlcik7XG4gICAgICAgIGF1ZGlvLnNldFJlZkRpc3RhbmNlKGRpc3RhbmNlKTtcbiAgICAgICAgYXVkaW8uc2V0TG9vcChsb29wKTtcbiAgICAgICAgaWYgKGF1dG9wbGF5ICYmICFhdWRpby5pc1BsYXlpbmcpIGF1ZGlvLnBsYXkoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHRoaXMuaG9sZEVmZmVjdCh0aGlzLnNlbGVjdCgnYXV0b3BsYXknKSwgKCkgPT4ge1xuICAgICAgY29uc3QgeyBhdWRpbywgbGlzdGVuZXIgfSA9IHRoaXMuZ2V0KCk7XG4gICAgICBjb25zdCBjYW1lcmEgPSB0aGlzLnN0b3JlLmdldCgnY2FtZXJhJyk7XG4gICAgICBpZiAoY2FtZXJhKSB7XG4gICAgICAgIGNhbWVyYS5hZGQobGlzdGVuZXIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBpZiAoY2FtZXJhKSB7XG4gICAgICAgICAgY2FtZXJhLnJlbW92ZShsaXN0ZW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGF1ZGlvKSB7XG4gICAgICAgICAgaWYgKGF1ZGlvLmlzUGxheWluZykgYXVkaW8uc3RvcCgpO1xuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIGF1ZGlvLnNvdXJjZSAmJlxuICAgICAgICAgICAgKGF1ZGlvLnNvdXJjZSBhcyB1bmtub3duIGFzIFVua25vd25SZWNvcmQpLl9jb25uZWN0ZWRcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIGF1ZGlvLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSk7XG4gIH1cbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmd0LXNvYmEtcG9zaXRpb25hbC1hdWRpbycsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5ndC1wb3NpdGlvbmFsLWF1ZGlvXG4gICAgICAqbmdJZj1cImxpc3RlbmVyJCB8IGFzeW5jIGFzIGxpc3RlbmVyXCJcbiAgICAgIChyZWFkeSk9XCJvblBvc2l0aW9uYWxBdWRpb1JlYWR5KCRldmVudClcIlxuICAgICAgW2xpc3RlbmVyXT1cImxpc3RlbmVyXCJcbiAgICAgIFthdWRpb0NvbnRyb2xsZXJdPVwiYXVkaW9Db250cm9sbGVyXCJcbiAgICA+PC9uZ3QtcG9zaXRpb25hbC1hdWRpbz5cbiAgYCxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByb3ZpZGVyczogW1xuICAgIE5HVF9BVURJT19DT05UUk9MTEVSX1BST1ZJREVSLFxuICAgIE5ndFNvYmFQb3NpdGlvbmFsQXVkaW9TdG9yZSxcbiAgICB7IHByb3ZpZGU6IE5ndFNvYmFFeHRlbmRlciwgdXNlRXhpc3Rpbmc6IE5ndFNvYmFQb3NpdGlvbmFsQXVkaW8gfSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgTmd0U29iYVBvc2l0aW9uYWxBdWRpbyBleHRlbmRzIE5ndFNvYmFFeHRlbmRlcjxUSFJFRS5Qb3NpdGlvbmFsQXVkaW8+IHtcbiAgQElucHV0KCkgc2V0IHVybCh1cmw6IHN0cmluZykge1xuICAgIHRoaXMuc29iYVBvc2l0aW9uYWxBdWRpb1N0b3JlLnNldCh7IHVybCB9KTtcbiAgfVxuXG4gIEBJbnB1dCgpIHNldCBkaXN0YW5jZShkaXN0YW5jZTogbnVtYmVyKSB7XG4gICAgdGhpcy5zb2JhUG9zaXRpb25hbEF1ZGlvU3RvcmUuc2V0KHsgZGlzdGFuY2UgfSk7XG4gIH1cblxuICBASW5wdXQoKSBzZXQgbG9vcChsb29wOiBib29sZWFuKSB7XG4gICAgdGhpcy5zb2JhUG9zaXRpb25hbEF1ZGlvU3RvcmUuc2V0KHsgbG9vcCB9KTtcbiAgfVxuXG4gIHJlYWRvbmx5IGxpc3RlbmVyJCA9IHRoaXMuc29iYVBvc2l0aW9uYWxBdWRpb1N0b3JlLnNlbGVjdCgnbGlzdGVuZXInKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KE5HVF9BVURJT19XQVRDSEVEX0NPTlRST0xMRVIpXG4gICAgcHVibGljIGF1ZGlvQ29udHJvbGxlcjogTmd0QXVkaW9Db250cm9sbGVyLFxuICAgIHByaXZhdGUgc29iYVBvc2l0aW9uYWxBdWRpb1N0b3JlOiBOZ3RTb2JhUG9zaXRpb25hbEF1ZGlvU3RvcmVcbiAgKSB7XG4gICAgc3VwZXIoKTtcbiAgICBzb2JhUG9zaXRpb25hbEF1ZGlvU3RvcmUuY29ubmVjdChcbiAgICAgICdhdXRvcGxheScsXG4gICAgICBhdWRpb0NvbnRyb2xsZXIuY2hhbmdlJC5waXBlKFxuICAgICAgICBtYXAoKCkgPT4gYXVkaW9Db250cm9sbGVyLmF1dG9wbGF5IHx8IGZhbHNlKSxcbiAgICAgICAgc3RhcnRXaXRoKGF1ZGlvQ29udHJvbGxlci5hdXRvcGxheSB8fCBmYWxzZSksXG4gICAgICAgIGRpc3RpbmN0VW50aWxDaGFuZ2VkKClcbiAgICAgIClcbiAgICApO1xuICB9XG5cbiAgb25Qb3NpdGlvbmFsQXVkaW9SZWFkeShhdWRpbzogVEhSRUUuUG9zaXRpb25hbEF1ZGlvKSB7XG4gICAgdGhpcy5vYmplY3QgPSBhdWRpbztcbiAgICB0aGlzLnNvYmFQb3NpdGlvbmFsQXVkaW9TdG9yZS5zZXQoeyBhdWRpbyB9KTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtOZ3RTb2JhUG9zaXRpb25hbEF1ZGlvXSxcbiAgZXhwb3J0czogW05ndFNvYmFQb3NpdGlvbmFsQXVkaW8sIE5ndEF1ZGlvQ29udHJvbGxlck1vZHVsZV0sXG4gIGltcG9ydHM6IFtOZ3RQb3NpdGlvbmFsQXVkaW9Nb2R1bGUsIENvbW1vbk1vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIE5ndFNvYmFQb3NpdGlvbmFsQXVkaW9Nb2R1bGUge31cbiJdfQ==