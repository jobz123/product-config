import { NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER, NgtCoreModule, NgtSobaExtender, } from '@angular-three/core';
import { NgtGroupModule } from '@angular-three/core/group';
import { NgtSobaOrthographicCameraModule } from '@angular-three/soba/cameras';
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input, NgModule, } from '@angular/core';
import { NgtSobaGizmoHelperStore } from './gizmo-helper.store';
import * as i0 from "@angular/core";
import * as i1 from "./gizmo-helper.store";
import * as i2 from "@angular-three/soba/cameras";
import * as i3 from "@angular/common";
import * as i4 from "@angular-three/core/group";
import * as i5 from "@angular-three/core";
export class NgtSobaGizmoHelper extends NgtSobaExtender {
    constructor(sobaGizmoHelperStore) {
        super();
        this.sobaGizmoHelperStore = sobaGizmoHelperStore;
        this.gizmoProps$ = this.sobaGizmoHelperStore.gizmoProps$;
        this.virtualScene$ = this.sobaGizmoHelperStore.select('virtualScene');
    }
    set alignment(alignment) {
        this.sobaGizmoHelperStore.set({ alignment });
    }
    set margin(margin) {
        this.sobaGizmoHelperStore.set({ margin });
    }
    set renderPriority(renderPriority) {
        this.sobaGizmoHelperStore.set({ renderPriority });
    }
    ngOnInit() {
        this.sobaGizmoHelperStore.actions.init();
    }
    onCameraReady(camera) {
        this.sobaGizmoHelperStore.set({ virtualCamera: camera });
    }
    onGizmoReady(gizmo) {
        this.sobaGizmoHelperStore.set({ gizmo });
        this.object = gizmo;
    }
}
NgtSobaGizmoHelper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoHelper, deps: [{ token: i1.NgtSobaGizmoHelperStore }], target: i0.ɵɵFactoryTarget.Component });
NgtSobaGizmoHelper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: NgtSobaGizmoHelper, selector: "ngt-soba-gizmo-helper", inputs: { alignment: "alignment", margin: "margin", renderPriority: "renderPriority" }, providers: [
        NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,
        NgtSobaGizmoHelperStore,
        {
            provide: NgtSobaExtender,
            useExisting: NgtSobaGizmoHelper,
        },
    ], usesInheritance: true, ngImport: i0, template: `
    <ng-container *ngIf="virtualScene$ | async as virtualScene">
      <ngt-group
        *ngIf="gizmoProps$ | async as gizmoProps"
        (ready)="onGizmoReady($event)"
        [appendTo]="virtualScene"
        [position]="[gizmoProps.x, gizmoProps.y, 0]"
        [object3dInputsController]="gizmoProps.objectInputsController"
      ></ngt-group>
      <ngt-soba-orthographic-camera
        [appendTo]="virtualScene"
        [makeDefault]="false"
        [position]="[0, 0, 200]"
        (ready)="onCameraReady($event)"
      ></ngt-soba-orthographic-camera>
      <ng-content></ng-content>
    </ng-container>
  `, isInline: true, components: [{ type: i2.NgtSobaOrthographicCamera, selector: "ngt-soba-orthographic-camera", inputs: ["makeDefault", "manual", "near", "far"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgtGroup, selector: "ngt-group", outputs: ["ready"], exportAs: ["ngtGroup"] }, { type: i5.NgtObject3dController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera  ", exportAs: ["ngtObject3dController"] }, { type: i5.NgtObject3dInputsController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-billboard,    ngt-soba-detailed,    ngt-soba-line,    ngt-soba-quadratic-bezier-line,    ngt-soba-cubic-bezier-line,    ngt-soba-orthographic-camera,    ngt-soba-gizmo-helper,    ngt-soba-gizmo-viewport,    ngt-soba-gizmo-axis-head,    ngt-soba-text  ", inputs: ["name", "position", "rotation", "quaternion", "scale", "color", "userData", "castShadow", "receiveShadow", "visible", "matrixAutoUpdate", "dispose", "raycast", "appendMode", "appendTo", "object3dInputsController"], outputs: ["click", "contextmenu", "dblclick", "pointerup", "pointerdown", "pointerover", "pointerout", "pointerenter", "pointerleave", "pointermove", "pointermissed", "pointercancel", "wheel"], exportAs: ["ngtObject3dInputsController"] }], pipes: { "async": i3.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoHelper, decorators: [{
            type: Component,
            args: [{
                    selector: 'ngt-soba-gizmo-helper',
                    template: `
    <ng-container *ngIf="virtualScene$ | async as virtualScene">
      <ngt-group
        *ngIf="gizmoProps$ | async as gizmoProps"
        (ready)="onGizmoReady($event)"
        [appendTo]="virtualScene"
        [position]="[gizmoProps.x, gizmoProps.y, 0]"
        [object3dInputsController]="gizmoProps.objectInputsController"
      ></ngt-group>
      <ngt-soba-orthographic-camera
        [appendTo]="virtualScene"
        [makeDefault]="false"
        [position]="[0, 0, 200]"
        (ready)="onCameraReady($event)"
      ></ngt-soba-orthographic-camera>
      <ng-content></ng-content>
    </ng-container>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,
                        NgtSobaGizmoHelperStore,
                        {
                            provide: NgtSobaExtender,
                            useExisting: NgtSobaGizmoHelper,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i1.NgtSobaGizmoHelperStore }]; }, propDecorators: { alignment: [{
                type: Input
            }], margin: [{
                type: Input
            }], renderPriority: [{
                type: Input
            }] } });
export class NgtSobaGizmoHelperModule {
}
NgtSobaGizmoHelperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoHelperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtSobaGizmoHelperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoHelperModule, declarations: [NgtSobaGizmoHelper], imports: [NgtCoreModule,
        NgtGroupModule,
        NgtSobaOrthographicCameraModule,
        CommonModule], exports: [NgtSobaGizmoHelper] });
NgtSobaGizmoHelperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoHelperModule, imports: [[
            NgtCoreModule,
            NgtGroupModule,
            NgtSobaOrthographicCameraModule,
            CommonModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoHelperModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtSobaGizmoHelper],
                    exports: [NgtSobaGizmoHelper],
                    imports: [
                        NgtCoreModule,
                        NgtGroupModule,
                        NgtSobaOrthographicCameraModule,
                        CommonModule,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2l6bW8taGVscGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3NvYmEvYWJzdHJhY3Rpb25zL3NyYy9naXptby1oZWxwZXIvZ2l6bW8taGVscGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wscUNBQXFDLEVBQ3JDLGFBQWEsRUFDYixlQUFlLEdBQ2hCLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzNELE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzlFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxLQUFLLEVBQ0wsUUFBUSxHQUVULE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDOzs7Ozs7O0FBZ0MvRCxNQUFNLE9BQU8sa0JBQ1gsU0FBUSxlQUE0QjtJQW9CcEMsWUFBb0Isb0JBQTZDO1FBQy9ELEtBQUssRUFBRSxDQUFDO1FBRFUseUJBQW9CLEdBQXBCLG9CQUFvQixDQUF5QjtRQUh4RCxnQkFBVyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxXQUFXLENBQUM7UUFDcEQsa0JBQWEsR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBSTFFLENBQUM7SUFuQkQsSUFBYSxTQUFTLENBQ3BCLFNBQW9FO1FBRXBFLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRCxJQUFhLE1BQU0sQ0FBQyxNQUF3QjtRQUMxQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQsSUFBYSxjQUFjLENBQUMsY0FBc0I7UUFDaEQsSUFBSSxDQUFDLG9CQUFvQixDQUFDLEdBQUcsQ0FBQyxFQUFFLGNBQWMsRUFBRSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQVNELFFBQVE7UUFDTixJQUFJLENBQUMsb0JBQW9CLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzNDLENBQUM7SUFFRCxhQUFhLENBQUMsTUFBZ0M7UUFDNUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLEdBQUcsQ0FBQyxFQUFFLGFBQWEsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFRCxZQUFZLENBQUMsS0FBa0I7UUFDN0IsSUFBSSxDQUFDLG9CQUFvQixDQUFDLEdBQUcsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDdEIsQ0FBQzs7K0dBcENVLGtCQUFrQjttR0FBbEIsa0JBQWtCLHdJQVRsQjtRQUNULHFDQUFxQztRQUNyQyx1QkFBdUI7UUFDdkI7WUFDRSxPQUFPLEVBQUUsZUFBZTtZQUN4QixXQUFXLEVBQUUsa0JBQWtCO1NBQ2hDO0tBQ0YsaURBMUJTOzs7Ozs7Ozs7Ozs7Ozs7OztHQWlCVDsyRkFXVSxrQkFBa0I7a0JBOUI5QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQlQ7b0JBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFNBQVMsRUFBRTt3QkFDVCxxQ0FBcUM7d0JBQ3JDLHVCQUF1Qjt3QkFDdkI7NEJBQ0UsT0FBTyxFQUFFLGVBQWU7NEJBQ3hCLFdBQVcsb0JBQW9CO3lCQUNoQztxQkFDRjtpQkFDRjs4R0FLYyxTQUFTO3NCQUFyQixLQUFLO2dCQU1PLE1BQU07c0JBQWxCLEtBQUs7Z0JBSU8sY0FBYztzQkFBMUIsS0FBSzs7QUFtQ1IsTUFBTSxPQUFPLHdCQUF3Qjs7cUhBQXhCLHdCQUF3QjtzSEFBeEIsd0JBQXdCLGlCQWpEeEIsa0JBQWtCLGFBMkMzQixhQUFhO1FBQ2IsY0FBYztRQUNkLCtCQUErQjtRQUMvQixZQUFZLGFBOUNILGtCQUFrQjtzSEFpRGxCLHdCQUF3QixZQVAxQjtZQUNQLGFBQWE7WUFDYixjQUFjO1lBQ2QsK0JBQStCO1lBQy9CLFlBQVk7U0FDYjsyRkFFVSx3QkFBd0I7a0JBVnBDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsa0JBQWtCLENBQUM7b0JBQ2xDLE9BQU8sRUFBRSxDQUFDLGtCQUFrQixDQUFDO29CQUM3QixPQUFPLEVBQUU7d0JBQ1AsYUFBYTt3QkFDYixjQUFjO3dCQUNkLCtCQUErQjt3QkFDL0IsWUFBWTtxQkFDYjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIE5HVF9PQkpFQ1RfSU5QVVRTX0NPTlRST0xMRVJfUFJPVklERVIsXG4gIE5ndENvcmVNb2R1bGUsXG4gIE5ndFNvYmFFeHRlbmRlcixcbn0gZnJvbSAnQGFuZ3VsYXItdGhyZWUvY29yZSc7XG5pbXBvcnQgeyBOZ3RHcm91cE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyLXRocmVlL2NvcmUvZ3JvdXAnO1xuaW1wb3J0IHsgTmd0U29iYU9ydGhvZ3JhcGhpY0NhbWVyYU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyLXRocmVlL3NvYmEvY2FtZXJhcyc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIE5nTW9kdWxlLFxuICBPbkluaXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuaW1wb3J0IHsgTmd0U29iYUdpem1vSGVscGVyU3RvcmUgfSBmcm9tICcuL2dpem1vLWhlbHBlci5zdG9yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25ndC1zb2JhLWdpem1vLWhlbHBlcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInZpcnR1YWxTY2VuZSQgfCBhc3luYyBhcyB2aXJ0dWFsU2NlbmVcIj5cbiAgICAgIDxuZ3QtZ3JvdXBcbiAgICAgICAgKm5nSWY9XCJnaXptb1Byb3BzJCB8IGFzeW5jIGFzIGdpem1vUHJvcHNcIlxuICAgICAgICAocmVhZHkpPVwib25HaXptb1JlYWR5KCRldmVudClcIlxuICAgICAgICBbYXBwZW5kVG9dPVwidmlydHVhbFNjZW5lXCJcbiAgICAgICAgW3Bvc2l0aW9uXT1cIltnaXptb1Byb3BzLngsIGdpem1vUHJvcHMueSwgMF1cIlxuICAgICAgICBbb2JqZWN0M2RJbnB1dHNDb250cm9sbGVyXT1cImdpem1vUHJvcHMub2JqZWN0SW5wdXRzQ29udHJvbGxlclwiXG4gICAgICA+PC9uZ3QtZ3JvdXA+XG4gICAgICA8bmd0LXNvYmEtb3J0aG9ncmFwaGljLWNhbWVyYVxuICAgICAgICBbYXBwZW5kVG9dPVwidmlydHVhbFNjZW5lXCJcbiAgICAgICAgW21ha2VEZWZhdWx0XT1cImZhbHNlXCJcbiAgICAgICAgW3Bvc2l0aW9uXT1cIlswLCAwLCAyMDBdXCJcbiAgICAgICAgKHJlYWR5KT1cIm9uQ2FtZXJhUmVhZHkoJGV2ZW50KVwiXG4gICAgICA+PC9uZ3Qtc29iYS1vcnRob2dyYXBoaWMtY2FtZXJhPlxuICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgIDwvbmctY29udGFpbmVyPlxuICBgLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgcHJvdmlkZXJzOiBbXG4gICAgTkdUX09CSkVDVF9JTlBVVFNfQ09OVFJPTExFUl9QUk9WSURFUixcbiAgICBOZ3RTb2JhR2l6bW9IZWxwZXJTdG9yZSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBOZ3RTb2JhRXh0ZW5kZXIsXG4gICAgICB1c2VFeGlzdGluZzogTmd0U29iYUdpem1vSGVscGVyLFxuICAgIH0sXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE5ndFNvYmFHaXptb0hlbHBlclxuICBleHRlbmRzIE5ndFNvYmFFeHRlbmRlcjxUSFJFRS5Hcm91cD5cbiAgaW1wbGVtZW50cyBPbkluaXRcbntcbiAgQElucHV0KCkgc2V0IGFsaWdubWVudChcbiAgICBhbGlnbm1lbnQ6ICd0b3AtbGVmdCcgfCAndG9wLXJpZ2h0JyB8ICdib3R0b20tcmlnaHQnIHwgJ2JvdHRvbS1sZWZ0J1xuICApIHtcbiAgICB0aGlzLnNvYmFHaXptb0hlbHBlclN0b3JlLnNldCh7IGFsaWdubWVudCB9KTtcbiAgfVxuXG4gIEBJbnB1dCgpIHNldCBtYXJnaW4obWFyZ2luOiBbbnVtYmVyLCBudW1iZXJdKSB7XG4gICAgdGhpcy5zb2JhR2l6bW9IZWxwZXJTdG9yZS5zZXQoeyBtYXJnaW4gfSk7XG4gIH1cblxuICBASW5wdXQoKSBzZXQgcmVuZGVyUHJpb3JpdHkocmVuZGVyUHJpb3JpdHk6IG51bWJlcikge1xuICAgIHRoaXMuc29iYUdpem1vSGVscGVyU3RvcmUuc2V0KHsgcmVuZGVyUHJpb3JpdHkgfSk7XG4gIH1cblxuICByZWFkb25seSBnaXptb1Byb3BzJCA9IHRoaXMuc29iYUdpem1vSGVscGVyU3RvcmUuZ2l6bW9Qcm9wcyQ7XG4gIHJlYWRvbmx5IHZpcnR1YWxTY2VuZSQgPSB0aGlzLnNvYmFHaXptb0hlbHBlclN0b3JlLnNlbGVjdCgndmlydHVhbFNjZW5lJyk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzb2JhR2l6bW9IZWxwZXJTdG9yZTogTmd0U29iYUdpem1vSGVscGVyU3RvcmUpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zb2JhR2l6bW9IZWxwZXJTdG9yZS5hY3Rpb25zLmluaXQoKTtcbiAgfVxuXG4gIG9uQ2FtZXJhUmVhZHkoY2FtZXJhOiBUSFJFRS5PcnRob2dyYXBoaWNDYW1lcmEpIHtcbiAgICB0aGlzLnNvYmFHaXptb0hlbHBlclN0b3JlLnNldCh7IHZpcnR1YWxDYW1lcmE6IGNhbWVyYSB9KTtcbiAgfVxuXG4gIG9uR2l6bW9SZWFkeShnaXptbzogVEhSRUUuR3JvdXApIHtcbiAgICB0aGlzLnNvYmFHaXptb0hlbHBlclN0b3JlLnNldCh7IGdpem1vIH0pO1xuICAgIHRoaXMub2JqZWN0ID0gZ2l6bW87XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbTmd0U29iYUdpem1vSGVscGVyXSxcbiAgZXhwb3J0czogW05ndFNvYmFHaXptb0hlbHBlcl0sXG4gIGltcG9ydHM6IFtcbiAgICBOZ3RDb3JlTW9kdWxlLFxuICAgIE5ndEdyb3VwTW9kdWxlLFxuICAgIE5ndFNvYmFPcnRob2dyYXBoaWNDYW1lcmFNb2R1bGUsXG4gICAgQ29tbW9uTW9kdWxlLFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ3RTb2JhR2l6bW9IZWxwZXJNb2R1bGUge31cbiJdfQ==