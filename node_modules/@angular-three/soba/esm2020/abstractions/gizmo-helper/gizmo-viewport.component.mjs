var _NgtSobaGizmoAxis_scale, _NgtSobaGizmoAxisHead_changes$;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { EnhancedRxState, NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER, NGT_OBJECT_INPUTS_WATCHED_CONTROLLER, NgtMathPipeModule, NgtObject3dInputsController, NgtSobaExtender, NgtStore, } from '@angular-three/core';
import { NgtGroupModule } from '@angular-three/core/group';
import { NgtAmbientLightModule, NgtPointLightModule, } from '@angular-three/core/lights';
import { NgtMeshBasicMaterialModule, NgtSpriteMaterialModule, } from '@angular-three/core/materials';
import { NgtSpriteModule } from '@angular-three/core/sprites';
import { NgtSobaBoxModule } from '@angular-three/soba/shapes';
import { CommonModule, DOCUMENT } from '@angular/common';
import { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, NgModule, Output, } from '@angular/core';
import { selectSlice } from '@rx-angular/state';
import { combineLatest, map } from 'rxjs';
import * as THREE from 'three';
import { NgtSobaGizmoHelperStore } from './gizmo-helper.store';
import * as i0 from "@angular/core";
import * as i1 from "./gizmo-helper.store";
import * as i2 from "@angular/common";
import * as i3 from "@angular-three/core/group";
import * as i4 from "@angular-three/core";
import * as i5 from "@angular-three/core/lights";
import * as i6 from "@angular-three/soba/shapes";
import * as i7 from "@angular-three/core/materials";
import * as i8 from "@angular-three/core/sprites";
export class NgtSobaGizmoViewport extends NgtSobaExtender {
    constructor(objectInputsController, gizmoHelperStore) {
        super();
        this.objectInputsController = objectInputsController;
        this.gizmoHelperStore = gizmoHelperStore;
        this.axisColors = [
            '#ff3653',
            '#0adb50',
            '#2c8fdf',
        ];
        this.labels = ['X', 'Y', 'Z'];
        this.labelColor = '#000';
        this.font = '18px Inter var, Arial, sans-serif';
        this.axisHeadScale = 1;
        this.hideNegativeAxes = false;
        this.hideAxisHeads = false;
        this.disabled = false;
        this.click = new EventEmitter();
        this.gizmo$ = this.gizmoHelperStore.select('gizmo');
        this.raycast$ = this.gizmoHelperStore.select('raycast');
    }
}
NgtSobaGizmoViewport.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoViewport, deps: [{ token: NGT_OBJECT_INPUTS_WATCHED_CONTROLLER }, { token: i1.NgtSobaGizmoHelperStore }], target: i0.ɵɵFactoryTarget.Component });
NgtSobaGizmoViewport.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: NgtSobaGizmoViewport, selector: "ngt-soba-gizmo-viewport", inputs: { axisColors: "axisColors", labels: "labels", labelColor: "labelColor", font: "font", axisHeadScale: "axisHeadScale", hideNegativeAxes: "hideNegativeAxes", hideAxisHeads: "hideAxisHeads", disabled: "disabled", axisScale: "axisScale" }, outputs: { click: "click" }, providers: [
        NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,
        { provide: NgtSobaExtender, useExisting: NgtSobaGizmoViewport },
    ], usesInheritance: true, ngImport: i0, template: `
    <ngt-group
      *ngIf="gizmo$ | async as gizmo"
      (ready)="object = $event; object.scale.set(40, 40, 40)"
      [appendTo]="gizmo"
      [object3dInputsController]="objectInputsController"
    >
      <ngt-soba-gizmo-axis
        [color]="axisColors[0]"
        [rotation]="[0, 0, 0]"
        [scale]="axisScale"
      ></ngt-soba-gizmo-axis>
      <ngt-soba-gizmo-axis
        [color]="axisColors[1]"
        [rotation]="[0, 0, 0.5 | mathConst: 'PI']"
        [scale]="axisScale"
      ></ngt-soba-gizmo-axis>
      <ngt-soba-gizmo-axis
        [color]="axisColors[2]"
        [rotation]="[0, -0.5 | mathConst: 'PI', 0]"
        [scale]="axisScale"
      ></ngt-soba-gizmo-axis>
      <ng-container *ngIf="!hideAxisHeads">
        <ng-container *ngIf="{ raycast: raycast$ | async } as vm">
          <ngt-soba-gizmo-axis-head
            [arcStyle]="axisColors[0]"
            [position]="[1, 0, 0]"
            [label]="labels[0]"
            [font]="font"
            [disabled]="disabled"
            [labelColor]="labelColor"
            [raycast]="vm.raycast"
            [axisHeadScale]="axisHeadScale"
          ></ngt-soba-gizmo-axis-head>
          <ngt-soba-gizmo-axis-head
            [arcStyle]="axisColors[1]"
            [position]="[0, 1, 0]"
            [label]="labels[1]"
            [font]="font"
            [disabled]="disabled"
            [labelColor]="labelColor"
            [raycast]="vm.raycast"
            [axisHeadScale]="axisHeadScale"
          ></ngt-soba-gizmo-axis-head>
          <ngt-soba-gizmo-axis-head
            [arcStyle]="axisColors[2]"
            [position]="[0, 0, 1]"
            [label]="labels[2]"
            [font]="font"
            [disabled]="disabled"
            [labelColor]="labelColor"
            [raycast]="vm.raycast"
            [axisHeadScale]="axisHeadScale"
          ></ngt-soba-gizmo-axis-head>

          <ng-container *ngIf="!hideNegativeAxes">
            <ngt-soba-gizmo-axis-head
              [arcStyle]="axisColors[0]"
              [position]="[-1, 0, 0]"
              [font]="font"
              [disabled]="disabled"
              [labelColor]="labelColor"
              [raycast]="vm.raycast"
              [axisHeadScale]="axisHeadScale"
            ></ngt-soba-gizmo-axis-head>
            <ngt-soba-gizmo-axis-head
              [arcStyle]="axisColors[1]"
              [position]="[0, -1, 0]"
              [font]="font"
              [disabled]="disabled"
              [labelColor]="labelColor"
              [raycast]="vm.raycast"
              [axisHeadScale]="axisHeadScale"
            ></ngt-soba-gizmo-axis-head>
            <ngt-soba-gizmo-axis-head
              [arcStyle]="axisColors[2]"
              [position]="[0, 0, -1]"
              [font]="font"
              [disabled]="disabled"
              [labelColor]="labelColor"
              [raycast]="vm.raycast"
              [axisHeadScale]="axisHeadScale"
            ></ngt-soba-gizmo-axis-head>
          </ng-container>
        </ng-container>
      </ng-container>
      <ngt-ambient-light [intensity]="0.5"></ngt-ambient-light>
      <ngt-point-light
        [intensity]="0.5"
        [position]="[10, 10, 10]"
      ></ngt-point-light>
    </ngt-group>
  `, isInline: true, components: [{ type: i0.forwardRef(function () { return NgtSobaGizmoAxis; }), selector: "ngt-soba-gizmo-axis[color][rotation]", inputs: ["color", "rotation", "scale"] }, { type: i0.forwardRef(function () { return NgtSobaGizmoAxisHead; }), selector: "ngt-soba-gizmo-axis-head", inputs: ["arcStyle", "label", "labelColor", "axisHeadScale", "disabled", "font"] }], directives: [{ type: i0.forwardRef(function () { return i2.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i3.NgtGroup; }), selector: "ngt-group", outputs: ["ready"], exportAs: ["ngtGroup"] }, { type: i0.forwardRef(function () { return i4.NgtObject3dController; }), selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera  ", exportAs: ["ngtObject3dController"] }, { type: i0.forwardRef(function () { return i4.NgtObject3dInputsController; }), selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-billboard,    ngt-soba-detailed,    ngt-soba-line,    ngt-soba-quadratic-bezier-line,    ngt-soba-cubic-bezier-line,    ngt-soba-orthographic-camera,    ngt-soba-gizmo-helper,    ngt-soba-gizmo-viewport,    ngt-soba-gizmo-axis-head,    ngt-soba-text  ", inputs: ["name", "position", "rotation", "quaternion", "scale", "color", "userData", "castShadow", "receiveShadow", "visible", "matrixAutoUpdate", "dispose", "raycast", "appendMode", "appendTo", "object3dInputsController"], outputs: ["click", "contextmenu", "dblclick", "pointerup", "pointerdown", "pointerover", "pointerout", "pointerenter", "pointerleave", "pointermove", "pointermissed", "pointercancel", "wheel"], exportAs: ["ngtObject3dInputsController"] }, { type: i0.forwardRef(function () { return i5.NgtAmbientLight; }), selector: "ngt-ambient-light", inputs: ["args"], exportAs: ["ngtAmbientLight"] }, { type: i0.forwardRef(function () { return i5.NgtPointLight; }), selector: "ngt-point-light", inputs: ["args"], exportAs: ["ngtPointLight"] }], pipes: { "async": i0.forwardRef(function () { return i2.AsyncPipe; }), "mathConst": i0.forwardRef(function () { return i4.NgtMathConstantPipe; }) }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoViewport, decorators: [{
            type: Component,
            args: [{
                    selector: 'ngt-soba-gizmo-viewport',
                    template: `
    <ngt-group
      *ngIf="gizmo$ | async as gizmo"
      (ready)="object = $event; object.scale.set(40, 40, 40)"
      [appendTo]="gizmo"
      [object3dInputsController]="objectInputsController"
    >
      <ngt-soba-gizmo-axis
        [color]="axisColors[0]"
        [rotation]="[0, 0, 0]"
        [scale]="axisScale"
      ></ngt-soba-gizmo-axis>
      <ngt-soba-gizmo-axis
        [color]="axisColors[1]"
        [rotation]="[0, 0, 0.5 | mathConst: 'PI']"
        [scale]="axisScale"
      ></ngt-soba-gizmo-axis>
      <ngt-soba-gizmo-axis
        [color]="axisColors[2]"
        [rotation]="[0, -0.5 | mathConst: 'PI', 0]"
        [scale]="axisScale"
      ></ngt-soba-gizmo-axis>
      <ng-container *ngIf="!hideAxisHeads">
        <ng-container *ngIf="{ raycast: raycast$ | async } as vm">
          <ngt-soba-gizmo-axis-head
            [arcStyle]="axisColors[0]"
            [position]="[1, 0, 0]"
            [label]="labels[0]"
            [font]="font"
            [disabled]="disabled"
            [labelColor]="labelColor"
            [raycast]="vm.raycast"
            [axisHeadScale]="axisHeadScale"
          ></ngt-soba-gizmo-axis-head>
          <ngt-soba-gizmo-axis-head
            [arcStyle]="axisColors[1]"
            [position]="[0, 1, 0]"
            [label]="labels[1]"
            [font]="font"
            [disabled]="disabled"
            [labelColor]="labelColor"
            [raycast]="vm.raycast"
            [axisHeadScale]="axisHeadScale"
          ></ngt-soba-gizmo-axis-head>
          <ngt-soba-gizmo-axis-head
            [arcStyle]="axisColors[2]"
            [position]="[0, 0, 1]"
            [label]="labels[2]"
            [font]="font"
            [disabled]="disabled"
            [labelColor]="labelColor"
            [raycast]="vm.raycast"
            [axisHeadScale]="axisHeadScale"
          ></ngt-soba-gizmo-axis-head>

          <ng-container *ngIf="!hideNegativeAxes">
            <ngt-soba-gizmo-axis-head
              [arcStyle]="axisColors[0]"
              [position]="[-1, 0, 0]"
              [font]="font"
              [disabled]="disabled"
              [labelColor]="labelColor"
              [raycast]="vm.raycast"
              [axisHeadScale]="axisHeadScale"
            ></ngt-soba-gizmo-axis-head>
            <ngt-soba-gizmo-axis-head
              [arcStyle]="axisColors[1]"
              [position]="[0, -1, 0]"
              [font]="font"
              [disabled]="disabled"
              [labelColor]="labelColor"
              [raycast]="vm.raycast"
              [axisHeadScale]="axisHeadScale"
            ></ngt-soba-gizmo-axis-head>
            <ngt-soba-gizmo-axis-head
              [arcStyle]="axisColors[2]"
              [position]="[0, 0, -1]"
              [font]="font"
              [disabled]="disabled"
              [labelColor]="labelColor"
              [raycast]="vm.raycast"
              [axisHeadScale]="axisHeadScale"
            ></ngt-soba-gizmo-axis-head>
          </ng-container>
        </ng-container>
      </ng-container>
      <ngt-ambient-light [intensity]="0.5"></ngt-ambient-light>
      <ngt-point-light
        [intensity]="0.5"
        [position]="[10, 10, 10]"
      ></ngt-point-light>
    </ngt-group>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,
                        { provide: NgtSobaExtender, useExisting: NgtSobaGizmoViewport },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i4.NgtObject3dInputsController, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_INPUTS_WATCHED_CONTROLLER]
                }] }, { type: i1.NgtSobaGizmoHelperStore }]; }, propDecorators: { axisColors: [{
                type: Input
            }], labels: [{
                type: Input
            }], labelColor: [{
                type: Input
            }], font: [{
                type: Input
            }], axisHeadScale: [{
                type: Input
            }], hideNegativeAxes: [{
                type: Input
            }], hideAxisHeads: [{
                type: Input
            }], disabled: [{
                type: Input
            }], axisScale: [{
                type: Input
            }], click: [{
                type: Output
            }] } });
export class NgtSobaGizmoAxis extends NgtSobaExtender {
    constructor() {
        super(...arguments);
        _NgtSobaGizmoAxis_scale.set(this, [0.8, 0.05, 0.05]);
    }
    set scale(v) {
        __classPrivateFieldSet(this, _NgtSobaGizmoAxis_scale, v || __classPrivateFieldGet(this, _NgtSobaGizmoAxis_scale, "f"), "f");
    }
    get scale() {
        return __classPrivateFieldGet(this, _NgtSobaGizmoAxis_scale, "f");
    }
}
_NgtSobaGizmoAxis_scale = new WeakMap();
NgtSobaGizmoAxis.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoAxis, deps: null, target: i0.ɵɵFactoryTarget.Component });
NgtSobaGizmoAxis.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: NgtSobaGizmoAxis, selector: "ngt-soba-gizmo-axis[color][rotation]", inputs: { color: "color", rotation: "rotation", scale: "scale" }, providers: [{ provide: NgtSobaExtender, useExisting: NgtSobaGizmoAxis }], usesInheritance: true, ngImport: i0, template: `
    <ngt-group (ready)="object = $event" [rotation]="rotation">
      <ngt-soba-box [args]="scale" [position]="[0.4, 0, 0]">
        <ngt-mesh-basic-material
          [parameters]="{ color, toneMapped: false }"
        ></ngt-mesh-basic-material>
      </ngt-soba-box>
    </ngt-group>
  `, isInline: true, components: [{ type: i6.NgtSobaBox, selector: "ngt-soba-box", inputs: ["args"] }], directives: [{ type: i3.NgtGroup, selector: "ngt-group", outputs: ["ready"], exportAs: ["ngtGroup"] }, { type: i4.NgtObject3dController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera  ", exportAs: ["ngtObject3dController"] }, { type: i4.NgtObject3dInputsController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-billboard,    ngt-soba-detailed,    ngt-soba-line,    ngt-soba-quadratic-bezier-line,    ngt-soba-cubic-bezier-line,    ngt-soba-orthographic-camera,    ngt-soba-gizmo-helper,    ngt-soba-gizmo-viewport,    ngt-soba-gizmo-axis-head,    ngt-soba-text  ", inputs: ["name", "position", "rotation", "quaternion", "scale", "color", "userData", "castShadow", "receiveShadow", "visible", "matrixAutoUpdate", "dispose", "raycast", "appendMode", "appendTo", "object3dInputsController"], outputs: ["click", "contextmenu", "dblclick", "pointerup", "pointerdown", "pointerover", "pointerout", "pointerenter", "pointerleave", "pointermove", "pointermissed", "pointercancel", "wheel"], exportAs: ["ngtObject3dInputsController"] }, { type: i4.NgtContentMaterialController, selector: "    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-text,,    ngt-points  ", inputs: ["material", "isMaterialArray", "contentMaterialController"], exportAs: ["ngtContentMaterialController"] }, { type: i7.NgtMeshBasicMaterial, selector: "ngt-mesh-basic-material", exportAs: ["ngtMeshBasicMaterial"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoAxis, decorators: [{
            type: Component,
            args: [{
                    selector: 'ngt-soba-gizmo-axis[color][rotation]',
                    template: `
    <ngt-group (ready)="object = $event" [rotation]="rotation">
      <ngt-soba-box [args]="scale" [position]="[0.4, 0, 0]">
        <ngt-mesh-basic-material
          [parameters]="{ color, toneMapped: false }"
        ></ngt-mesh-basic-material>
      </ngt-soba-box>
    </ngt-group>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [{ provide: NgtSobaExtender, useExisting: NgtSobaGizmoAxis }],
                }]
        }], propDecorators: { color: [{
                type: Input
            }], rotation: [{
                type: Input
            }], scale: [{
                type: Input
            }] } });
export class NgtSobaGizmoAxisHead extends NgtSobaExtender {
    constructor(objectInputsController, document, gizmoViewport, gizmoHelperStore, store, state) {
        super();
        this.objectInputsController = objectInputsController;
        this.gizmoViewport = gizmoViewport;
        this.gizmoHelperStore = gizmoHelperStore;
        this.store = store;
        this.state = state;
        _NgtSobaGizmoAxisHead_changes$.set(this, this.state.select(selectSlice(['arcStyle', 'label', 'labelColor', 'font'])));
        this.vm$ = combineLatest([
            this.state.select(selectSlice(['active', 'label', 'axisHeadScale', 'texture'])),
            this.store.select('renderer'),
        ]).pipe(map(([{ texture, label, active, axisHeadScale }, renderer]) => {
            texture.anisotropy = renderer.capabilities.getMaxAnisotropy() || 1;
            return {
                texture,
                scale: (label ? 1 : 0.75) * (active ? 1.2 : 1) * axisHeadScale,
                opacity: label ? 1 : 0.75,
            };
        }));
        this.state.set({
            label: '',
            active: false,
            disabled: false,
        });
        this.state.connect('texture', __classPrivateFieldGet(this, _NgtSobaGizmoAxisHead_changes$, "f"), (_, { label, labelColor, arcStyle, font }) => {
            const canvas = document.createElement('canvas');
            canvas.width = 64;
            canvas.height = 64;
            const context = canvas.getContext('2d');
            context.beginPath();
            context.arc(32, 32, 16, 0, 2 * Math.PI);
            context.closePath();
            context.fillStyle = arcStyle;
            context.fill();
            if (label) {
                context.font = font;
                context.textAlign = 'center';
                context.fillStyle = labelColor;
                context.fillText(label, 32, 41);
            }
            return new THREE.CanvasTexture(canvas);
        });
    }
    set arcStyle(arcStyle) {
        this.state.set({ arcStyle });
    }
    set label(label) {
        this.state.set({ label });
    }
    set labelColor(labelColor) {
        this.state.set({ labelColor });
    }
    set axisHeadScale(axisHeadScale) {
        this.state.set({ axisHeadScale });
    }
    set disabled(disabled) {
        this.state.set({ disabled: disabled || false });
    }
    set font(font) {
        this.state.set({ font });
    }
    onAxisHeadPointerOver($event) {
        if (!this.state.get('disabled')) {
            $event.stopPropagation();
            this.state.set({ active: true });
        }
    }
    onAxisHeadPointerOut($event) {
        if (!this.state.get('disabled')) {
            if (this.gizmoViewport.click.observed) {
                this.gizmoViewport.click.emit($event);
            }
            else {
                $event.stopPropagation();
                this.state.set({ active: false });
            }
        }
    }
    onAxisHeadPointerDown($event) {
        if (!this.state.get('disabled')) {
            $event.stopPropagation();
            this.gizmoHelperStore.tweenCamera($event.object.position);
        }
    }
}
_NgtSobaGizmoAxisHead_changes$ = new WeakMap();
NgtSobaGizmoAxisHead.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoAxisHead, deps: [{ token: NGT_OBJECT_INPUTS_WATCHED_CONTROLLER }, { token: DOCUMENT }, { token: NgtSobaGizmoViewport }, { token: i1.NgtSobaGizmoHelperStore }, { token: i4.NgtStore }, { token: i4.EnhancedRxState }], target: i0.ɵɵFactoryTarget.Component });
NgtSobaGizmoAxisHead.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: NgtSobaGizmoAxisHead, selector: "ngt-soba-gizmo-axis-head", inputs: { arcStyle: "arcStyle", label: "label", labelColor: "labelColor", axisHeadScale: "axisHeadScale", disabled: "disabled", font: "font" }, providers: [
        NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,
        EnhancedRxState,
        { provide: NgtSobaExtender, useExisting: NgtSobaGizmoAxisHead },
    ], usesInheritance: true, ngImport: i0, template: `
    <ng-container *ngIf="vm$ | async as vm">
      <ngt-sprite-material
        #spriteMaterial="ngtSpriteMaterial"
        [parameters]="{
          map: vm.texture,
          opacity: vm.opacity,
          toneMapped: false,
          alphaTest: 0.3
        }"
      ></ngt-sprite-material>
      <ngt-sprite
        (ready)="object = $event"
        (pointerover)="onAxisHeadPointerOver($event)"
        (pointerout)="onAxisHeadPointerOut($event)"
        (pointerdown)="onAxisHeadPointerDown($event)"
        [scale]="vm.scale"
        [material]="spriteMaterial.material"
        [object3dInputsController]="objectInputsController"
      ></ngt-sprite>
    </ng-container>
  `, isInline: true, directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i7.NgtSpriteMaterial, selector: "ngt-sprite-material", exportAs: ["ngtSpriteMaterial"] }, { type: i4.NgtObject3dController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera  ", exportAs: ["ngtObject3dController"] }, { type: i4.NgtObject3dInputsController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-billboard,    ngt-soba-detailed,    ngt-soba-line,    ngt-soba-quadratic-bezier-line,    ngt-soba-cubic-bezier-line,    ngt-soba-orthographic-camera,    ngt-soba-gizmo-helper,    ngt-soba-gizmo-viewport,    ngt-soba-gizmo-axis-head,    ngt-soba-text  ", inputs: ["name", "position", "rotation", "quaternion", "scale", "color", "userData", "castShadow", "receiveShadow", "visible", "matrixAutoUpdate", "dispose", "raycast", "appendMode", "appendTo", "object3dInputsController"], outputs: ["click", "contextmenu", "dblclick", "pointerup", "pointerdown", "pointerover", "pointerout", "pointerenter", "pointerleave", "pointermove", "pointermissed", "pointercancel", "wheel"], exportAs: ["ngtObject3dInputsController"] }, { type: i8.NgtSprite, selector: "ngt-sprite", exportAs: ["ngtSprite"] }], pipes: { "async": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoAxisHead, decorators: [{
            type: Component,
            args: [{
                    selector: 'ngt-soba-gizmo-axis-head',
                    template: `
    <ng-container *ngIf="vm$ | async as vm">
      <ngt-sprite-material
        #spriteMaterial="ngtSpriteMaterial"
        [parameters]="{
          map: vm.texture,
          opacity: vm.opacity,
          toneMapped: false,
          alphaTest: 0.3
        }"
      ></ngt-sprite-material>
      <ngt-sprite
        (ready)="object = $event"
        (pointerover)="onAxisHeadPointerOver($event)"
        (pointerout)="onAxisHeadPointerOut($event)"
        (pointerdown)="onAxisHeadPointerDown($event)"
        [scale]="vm.scale"
        [material]="spriteMaterial.material"
        [object3dInputsController]="objectInputsController"
      ></ngt-sprite>
    </ng-container>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,
                        EnhancedRxState,
                        { provide: NgtSobaExtender, useExisting: NgtSobaGizmoAxisHead },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i4.NgtObject3dInputsController, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_INPUTS_WATCHED_CONTROLLER]
                }] }, { type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: NgtSobaGizmoViewport }, { type: i1.NgtSobaGizmoHelperStore }, { type: i4.NgtStore }, { type: i4.EnhancedRxState }]; }, propDecorators: { arcStyle: [{
                type: Input
            }], label: [{
                type: Input
            }], labelColor: [{
                type: Input
            }], axisHeadScale: [{
                type: Input
            }], disabled: [{
                type: Input
            }], font: [{
                type: Input
            }] } });
export class NgtSobaGizmoViewportModule {
}
NgtSobaGizmoViewportModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoViewportModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtSobaGizmoViewportModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoViewportModule, declarations: [NgtSobaGizmoViewport, NgtSobaGizmoAxis, NgtSobaGizmoAxisHead], imports: [CommonModule,
        NgtGroupModule,
        NgtSobaBoxModule,
        NgtMeshBasicMaterialModule,
        NgtSpriteModule,
        NgtSpriteMaterialModule,
        NgtMathPipeModule,
        NgtAmbientLightModule,
        NgtPointLightModule], exports: [NgtSobaGizmoViewport] });
NgtSobaGizmoViewportModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoViewportModule, imports: [[
            CommonModule,
            NgtGroupModule,
            NgtSobaBoxModule,
            NgtMeshBasicMaterialModule,
            NgtSpriteModule,
            NgtSpriteMaterialModule,
            NgtMathPipeModule,
            NgtAmbientLightModule,
            NgtPointLightModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoViewportModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtSobaGizmoViewport, NgtSobaGizmoAxis, NgtSobaGizmoAxisHead],
                    exports: [NgtSobaGizmoViewport],
                    imports: [
                        CommonModule,
                        NgtGroupModule,
                        NgtSobaBoxModule,
                        NgtMeshBasicMaterialModule,
                        NgtSpriteModule,
                        NgtSpriteMaterialModule,
                        NgtMathPipeModule,
                        NgtAmbientLightModule,
                        NgtPointLightModule,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,