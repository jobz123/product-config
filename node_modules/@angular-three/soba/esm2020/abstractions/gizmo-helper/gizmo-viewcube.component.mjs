var _NgtSobaGizmoFaceMaterial_change$;
import { __classPrivateFieldGet } from "tslib";
import { Controller, createControllerProviderFactory, EnhancedRxState, NgtRepeatModule, NgtSobaExtender, NgtStore, } from '@angular-three/core';
import { NgtGroupModule } from '@angular-three/core/group';
import { NgtAmbientLightModule, NgtPointLightModule, } from '@angular-three/core/lights';
import { NgtMeshBasicMaterialModule, NgtMeshLambertMaterialModule, } from '@angular-three/core/materials';
import { NgtSobaBoxModule } from '@angular-three/soba/shapes';
import { CommonModule, DOCUMENT } from '@angular/common';
import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Inject, Input, NgModule, NgZone, Output, } from '@angular/core';
import { selectSlice } from '@rx-angular/state';
import { combineLatest, map, startWith } from 'rxjs';
import * as THREE from 'three';
import { NgtSobaGizmoHelperStore } from './gizmo-helper.store';
import * as i0 from "@angular/core";
import * as i1 from "@angular-three/core";
import * as i2 from "./gizmo-helper.store";
import * as i3 from "@angular/common";
import * as i4 from "@angular-three/core/group";
import * as i5 from "@angular-three/core/lights";
import * as i6 from "@angular-three/soba/shapes";
import * as i7 from "@angular-three/core/materials";
const colors = { bg: '#f0f0f0', hover: '#999', text: 'black', stroke: 'black' };
const defaultFaces = ['Right', 'Left', 'Top', 'Bottom', 'Front', 'Back'];
const makePositionVector = (xyz) => new THREE.Vector3(...xyz).multiplyScalar(0.38);
const corners = [
    [1, 1, 1],
    [1, 1, -1],
    [1, -1, 1],
    [1, -1, -1],
    [-1, 1, 1],
    [-1, 1, -1],
    [-1, -1, 1],
    [-1, -1, -1],
].map(makePositionVector);
const cornerDimensions = [0.25, 0.25, 0.25];
const edges = [
    [1, 1, 0],
    [1, 0, 1],
    [1, 0, -1],
    [1, -1, 0],
    [0, 1, 1],
    [0, 1, -1],
    [0, -1, 1],
    [0, -1, -1],
    [-1, 1, 0],
    [-1, 0, 1],
    [-1, 0, -1],
    [-1, -1, 0],
].map(makePositionVector);
const edgeDimensions = edges.map((edge) => edge
    .toArray()
    .map((axis) => (axis == 0 ? 0.5 : 0.25)));
export class GenericController extends Controller {
    constructor(ngZone, state) {
        super(ngZone);
        this.state = state;
        this.click = new EventEmitter();
        this.state.set({
            font: '20px Inter var, Arial, sans-serif',
            faces: defaultFaces,
            color: colors.bg,
            hoverColor: colors.hover,
            textColor: colors.text,
            strokeColor: colors.stroke,
            opacity: 1,
        });
    }
    get props() {
        return [
            'font',
            'opacity',
            'color',
            'hoverColor',
            'textColor',
            'strokeColor',
            'faces',
            'click',
        ];
    }
    get controller() {
        return this.genericController;
    }
    set font(font) {
        this.state.set({ font });
    }
    set opacity(opacity) {
        this.state.set({ opacity });
    }
    set color(color) {
        this.state.set({ color });
    }
    set hoverColor(hoverColor) {
        this.state.set({ hoverColor });
    }
    set textColor(textColor) {
        this.state.set({ textColor });
    }
    set strokeColor(strokeColor) {
        this.state.set({ strokeColor });
    }
    set faces(faces) {
        this.state.set({ faces });
    }
    get rxState() {
        return this.genericController?.rxState || this.state;
    }
    get clickOutput() {
        return this.genericController?.click || this.click;
    }
}
GenericController.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: GenericController, deps: [{ token: i0.NgZone }, { token: i1.EnhancedRxState }], target: i0.ɵɵFactoryTarget.Directive });
GenericController.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.1.1", type: GenericController, selector: "\n    ngt-soba-gizmo-viewcube,\n    ngt-soba-gizmo-edgecube,\n    ngt-soba-gizmo-facecube,\n    ngt-soba-gizmo-face-material\n  ", inputs: { genericController: "genericController", font: "font", opacity: "opacity", color: "color", hoverColor: "hoverColor", textColor: "textColor", strokeColor: "strokeColor", faces: "faces" }, outputs: { click: "click" }, providers: [EnhancedRxState], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: GenericController, decorators: [{
            type: Directive,
            args: [{
                    selector: `
    ngt-soba-gizmo-viewcube,
    ngt-soba-gizmo-edgecube,
    ngt-soba-gizmo-facecube,
    ngt-soba-gizmo-face-material
  `,
                    providers: [EnhancedRxState],
                }]
        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.EnhancedRxState }]; }, propDecorators: { genericController: [{
                type: Input
            }], font: [{
                type: Input
            }], opacity: [{
                type: Input
            }], color: [{
                type: Input
            }], hoverColor: [{
                type: Input
            }], textColor: [{
                type: Input
            }], strokeColor: [{
                type: Input
            }], faces: [{
                type: Input
            }], click: [{
                type: Output
            }] } });
export const [NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER, NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER,] = createControllerProviderFactory({
    watchedControllerTokenName: 'Viewcube Generic Controller',
    controller: GenericController,
});
export class NgtSobaGizmoViewcube extends NgtSobaExtender {
    constructor(genericController, gizmoHelperStore) {
        super();
        this.genericController = genericController;
        this.gizmoHelperStore = gizmoHelperStore;
        this.corners = corners;
        this.edges = edges;
        this.cornerDimensions = cornerDimensions;
        this.edgeDimensions = edgeDimensions;
        this.gizmo$ = this.gizmoHelperStore.select('gizmo');
    }
}
NgtSobaGizmoViewcube.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoViewcube, deps: [{ token: NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER }, { token: i2.NgtSobaGizmoHelperStore }], target: i0.ɵɵFactoryTarget.Component });
NgtSobaGizmoViewcube.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: NgtSobaGizmoViewcube, selector: "ngt-soba-gizmo-viewcube", providers: [
        NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER,
        {
            provide: NgtSobaExtender,
            useExisting: NgtSobaGizmoViewcube,
        },
    ], usesInheritance: true, ngImport: i0, template: `
    <ngt-group
      *ngIf="gizmo$ | async as gizmo"
      [appendTo]="gizmo"
      [scale]="[60, 60, 60]"
      (ready)="object = $event"
    >
      <ngt-soba-gizmo-facecube
        [genericController]="genericController"
      ></ngt-soba-gizmo-facecube>

      <ngt-soba-gizmo-edgecube
        *ngFor="let edge of edges; index as i"
        [position]="edge"
        [dimensions]="edgeDimensions[i]"
        [genericController]="genericController"
      ></ngt-soba-gizmo-edgecube>

      <ngt-soba-gizmo-edgecube
        *ngFor="let corner of corners"
        [position]="corner"
        [dimensions]="cornerDimensions"
        [genericController]="genericController"
      ></ngt-soba-gizmo-edgecube>

      <ngt-ambient-light [intensity]="0.5"></ngt-ambient-light>
      <ngt-point-light
        [intensity]="0.5"
        [position]="[10, 10, 10]"
      ></ngt-point-light>
    </ngt-group>
  `, isInline: true, components: [{ type: i0.forwardRef(function () { return NgtSobaGizmoFacecube; }), selector: "ngt-soba-gizmo-facecube" }, { type: i0.forwardRef(function () { return NgtSobaGizmoEdgecube; }), selector: "ngt-soba-gizmo-edgecube[dimensions][position]", inputs: ["dimensions", "position"] }], directives: [{ type: i0.forwardRef(function () { return i3.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i4.NgtGroup; }), selector: "ngt-group", outputs: ["ready"], exportAs: ["ngtGroup"] }, { type: i0.forwardRef(function () { return i1.NgtObject3dController; }), selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera  ", exportAs: ["ngtObject3dController"] }, { type: i0.forwardRef(function () { return i1.NgtObject3dInputsController; }), selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-billboard,    ngt-soba-detailed,    ngt-soba-line,    ngt-soba-quadratic-bezier-line,    ngt-soba-cubic-bezier-line,    ngt-soba-orthographic-camera,    ngt-soba-gizmo-helper,    ngt-soba-gizmo-viewport,    ngt-soba-gizmo-axis-head,    ngt-soba-text  ", inputs: ["name", "position", "rotation", "quaternion", "scale", "color", "userData", "castShadow", "receiveShadow", "visible", "matrixAutoUpdate", "dispose", "raycast", "appendMode", "appendTo", "object3dInputsController"], outputs: ["click", "contextmenu", "dblclick", "pointerup", "pointerdown", "pointerover", "pointerout", "pointerenter", "pointerleave", "pointermove", "pointermissed", "pointercancel", "wheel"], exportAs: ["ngtObject3dInputsController"] }, { type: i0.forwardRef(function () { return GenericController; }), selector: "\n    ngt-soba-gizmo-viewcube,\n    ngt-soba-gizmo-edgecube,\n    ngt-soba-gizmo-facecube,\n    ngt-soba-gizmo-face-material\n  ", inputs: ["genericController", "font", "opacity", "color", "hoverColor", "textColor", "strokeColor", "faces"], outputs: ["click"] }, { type: i0.forwardRef(function () { return i3.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i0.forwardRef(function () { return i5.NgtAmbientLight; }), selector: "ngt-ambient-light", inputs: ["args"], exportAs: ["ngtAmbientLight"] }, { type: i0.forwardRef(function () { return i5.NgtPointLight; }), selector: "ngt-point-light", inputs: ["args"], exportAs: ["ngtPointLight"] }], pipes: { "async": i0.forwardRef(function () { return i3.AsyncPipe; }) }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoViewcube, decorators: [{
            type: Component,
            args: [{
                    selector: 'ngt-soba-gizmo-viewcube',
                    template: `
    <ngt-group
      *ngIf="gizmo$ | async as gizmo"
      [appendTo]="gizmo"
      [scale]="[60, 60, 60]"
      (ready)="object = $event"
    >
      <ngt-soba-gizmo-facecube
        [genericController]="genericController"
      ></ngt-soba-gizmo-facecube>

      <ngt-soba-gizmo-edgecube
        *ngFor="let edge of edges; index as i"
        [position]="edge"
        [dimensions]="edgeDimensions[i]"
        [genericController]="genericController"
      ></ngt-soba-gizmo-edgecube>

      <ngt-soba-gizmo-edgecube
        *ngFor="let corner of corners"
        [position]="corner"
        [dimensions]="cornerDimensions"
        [genericController]="genericController"
      ></ngt-soba-gizmo-edgecube>

      <ngt-ambient-light [intensity]="0.5"></ngt-ambient-light>
      <ngt-point-light
        [intensity]="0.5"
        [position]="[10, 10, 10]"
      ></ngt-point-light>
    </ngt-group>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER,
                        {
                            provide: NgtSobaExtender,
                            useExisting: NgtSobaGizmoViewcube,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: GenericController, decorators: [{
                    type: Inject,
                    args: [NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER]
                }] }, { type: i2.NgtSobaGizmoHelperStore }]; } });
export class NgtSobaGizmoEdgecube extends NgtSobaExtender {
    constructor(genericController, gizmoHelperStore, state) {
        super();
        this.genericController = genericController;
        this.gizmoHelperStore = gizmoHelperStore;
        this.state = state;
        this.hover = false;
        this.raycast$ = this.gizmoHelperStore.select('raycast');
        this.vm$ = combineLatest([
            this.state.select(selectSlice(['dimensions', 'position'])),
            this.genericController.rxState
                .select('hoverColor')
                .pipe(startWith(this.genericController.rxState.get('hoverColor'))),
        ]).pipe(map(([{ dimensions, position }, hoverColor]) => ({
            dimensions,
            position,
            hoverColor,
        })));
    }
    set dimensions(dimensions) {
        this.state.set({ dimensions });
    }
    set position(position) {
        this.state.set({ position });
    }
    onEdgeClick($event) {
        if (this.genericController.clickOutput.observed) {
            this.genericController.clickOutput.emit($event);
        }
        else {
            $event.stopPropagation();
            this.gizmoHelperStore.tweenCamera(this.state.get('position'));
        }
    }
}
NgtSobaGizmoEdgecube.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoEdgecube, deps: [{ token: NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER }, { token: i2.NgtSobaGizmoHelperStore }, { token: i1.EnhancedRxState }], target: i0.ɵɵFactoryTarget.Component });
NgtSobaGizmoEdgecube.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: NgtSobaGizmoEdgecube, selector: "ngt-soba-gizmo-edgecube[dimensions][position]", inputs: { dimensions: "dimensions", position: "position" }, providers: [
        NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER,
        EnhancedRxState,
        {
            provide: NgtSobaExtender,
            useExisting: NgtSobaGizmoEdgecube,
        },
    ], usesInheritance: true, ngImport: i0, template: `
    <ng-container *ngIf="vm$ | async as vm">
      <ngt-soba-box
        [args]="vm.dimensions"
        [raycast]="raycast$ | async"
        [scale]="[1.01, 1.01, 1.01]"
        [position]="vm.position"
        (pointerover)="$event.stopPropagation(); hover = true"
        (pointerout)="$event.stopPropagation(); hover = false"
        (click)="onEdgeClick($event)"
      >
        <ngt-mesh-basic-material
          [parameters]="{
            color: hover ? vm.hoverColor : 'white',
            transparent: true,
            opacity: 0.6,
            visible: hover
          }"
        ></ngt-mesh-basic-material>
      </ngt-soba-box>
    </ng-container>
  `, isInline: true, components: [{ type: i6.NgtSobaBox, selector: "ngt-soba-box", inputs: ["args"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgtObject3dInputsController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-billboard,    ngt-soba-detailed,    ngt-soba-line,    ngt-soba-quadratic-bezier-line,    ngt-soba-cubic-bezier-line,    ngt-soba-orthographic-camera,    ngt-soba-gizmo-helper,    ngt-soba-gizmo-viewport,    ngt-soba-gizmo-axis-head,    ngt-soba-text  ", inputs: ["name", "position", "rotation", "quaternion", "scale", "color", "userData", "castShadow", "receiveShadow", "visible", "matrixAutoUpdate", "dispose", "raycast", "appendMode", "appendTo", "object3dInputsController"], outputs: ["click", "contextmenu", "dblclick", "pointerup", "pointerdown", "pointerover", "pointerout", "pointerenter", "pointerleave", "pointermove", "pointermissed", "pointercancel", "wheel"], exportAs: ["ngtObject3dInputsController"] }, { type: i1.NgtContentMaterialController, selector: "    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-text,,    ngt-points  ", inputs: ["material", "isMaterialArray", "contentMaterialController"], exportAs: ["ngtContentMaterialController"] }, { type: i7.NgtMeshBasicMaterial, selector: "ngt-mesh-basic-material", exportAs: ["ngtMeshBasicMaterial"] }], pipes: { "async": i3.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoEdgecube, decorators: [{
            type: Component,
            args: [{
                    selector: 'ngt-soba-gizmo-edgecube[dimensions][position]',
                    template: `
    <ng-container *ngIf="vm$ | async as vm">
      <ngt-soba-box
        [args]="vm.dimensions"
        [raycast]="raycast$ | async"
        [scale]="[1.01, 1.01, 1.01]"
        [position]="vm.position"
        (pointerover)="$event.stopPropagation(); hover = true"
        (pointerout)="$event.stopPropagation(); hover = false"
        (click)="onEdgeClick($event)"
      >
        <ngt-mesh-basic-material
          [parameters]="{
            color: hover ? vm.hoverColor : 'white',
            transparent: true,
            opacity: 0.6,
            visible: hover
          }"
        ></ngt-mesh-basic-material>
      </ngt-soba-box>
    </ng-container>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER,
                        EnhancedRxState,
                        {
                            provide: NgtSobaExtender,
                            useExisting: NgtSobaGizmoEdgecube,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: GenericController, decorators: [{
                    type: Inject,
                    args: [NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER]
                }] }, { type: i2.NgtSobaGizmoHelperStore }, { type: i1.EnhancedRxState }]; }, propDecorators: { dimensions: [{
                type: Input
            }], position: [{
                type: Input
            }] } });
export class NgtSobaGizmoFacecube extends NgtSobaExtender {
    constructor(genericController, gizmoHelperStore) {
        super();
        this.genericController = genericController;
        this.gizmoHelperStore = gizmoHelperStore;
        this.hover = null;
        this.raycast$ = this.gizmoHelperStore.select('raycast');
    }
    onFacePointerMove($event) {
        $event.stopPropagation();
        this.hover = Math.floor($event.faceIndex / 2);
    }
    onFacePointerOut($event) {
        $event.stopPropagation();
        this.hover = null;
    }
    onFaceClick($event) {
        if (this.genericController.clickOutput.observed) {
            this.genericController.clickOutput.emit($event);
        }
        else {
            $event.stopPropagation();
            this.gizmoHelperStore.tweenCamera($event.face.normal);
        }
    }
}
NgtSobaGizmoFacecube.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoFacecube, deps: [{ token: NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER }, { token: i2.NgtSobaGizmoHelperStore }], target: i0.ɵɵFactoryTarget.Component });
NgtSobaGizmoFacecube.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: NgtSobaGizmoFacecube, selector: "ngt-soba-gizmo-facecube", providers: [
        NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER,
        {
            provide: NgtSobaExtender,
            useExisting: NgtSobaGizmoFacecube,
        },
    ], usesInheritance: true, ngImport: i0, template: `
    <ngt-soba-box
      [isMaterialArray]="true"
      [raycast]="raycast$ | async"
      (ready)="object = $event"
      (click)="onFaceClick($event)"
      (pointermove)="onFacePointerMove($event)"
      (pointerout)="onFacePointerOut($event)"
    >
      <ngt-soba-gizmo-face-material
        *repeat="let index of 6"
        [hover]="hover === index"
        [index]="index"
        [genericController]="genericController"
      ></ngt-soba-gizmo-face-material>
    </ngt-soba-box>
  `, isInline: true, components: [{ type: i0.forwardRef(function () { return i6.NgtSobaBox; }), selector: "ngt-soba-box", inputs: ["args"] }, { type: i0.forwardRef(function () { return NgtSobaGizmoFaceMaterial; }), selector: "ngt-soba-gizmo-face-material[hover][index]", inputs: ["hover", "index"] }], directives: [{ type: i0.forwardRef(function () { return i1.NgtObject3dInputsController; }), selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-billboard,    ngt-soba-detailed,    ngt-soba-line,    ngt-soba-quadratic-bezier-line,    ngt-soba-cubic-bezier-line,    ngt-soba-orthographic-camera,    ngt-soba-gizmo-helper,    ngt-soba-gizmo-viewport,    ngt-soba-gizmo-axis-head,    ngt-soba-text  ", inputs: ["name", "position", "rotation", "quaternion", "scale", "color", "userData", "castShadow", "receiveShadow", "visible", "matrixAutoUpdate", "dispose", "raycast", "appendMode", "appendTo", "object3dInputsController"], outputs: ["click", "contextmenu", "dblclick", "pointerup", "pointerdown", "pointerover", "pointerout", "pointerenter", "pointerleave", "pointermove", "pointermissed", "pointercancel", "wheel"], exportAs: ["ngtObject3dInputsController"] }, { type: i0.forwardRef(function () { return i1.NgtContentMaterialController; }), selector: "    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-text,,    ngt-points  ", inputs: ["material", "isMaterialArray", "contentMaterialController"], exportAs: ["ngtContentMaterialController"] }, { type: i0.forwardRef(function () { return i1.NgtRepeat; }), selector: "[repeat][repeatOf]", inputs: ["repeatOf"] }, { type: i0.forwardRef(function () { return GenericController; }), selector: "\n    ngt-soba-gizmo-viewcube,\n    ngt-soba-gizmo-edgecube,\n    ngt-soba-gizmo-facecube,\n    ngt-soba-gizmo-face-material\n  ", inputs: ["genericController", "font", "opacity", "color", "hoverColor", "textColor", "strokeColor", "faces"], outputs: ["click"] }], pipes: { "async": i0.forwardRef(function () { return i3.AsyncPipe; }) }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoFacecube, decorators: [{
            type: Component,
            args: [{
                    selector: 'ngt-soba-gizmo-facecube',
                    template: `
    <ngt-soba-box
      [isMaterialArray]="true"
      [raycast]="raycast$ | async"
      (ready)="object = $event"
      (click)="onFaceClick($event)"
      (pointermove)="onFacePointerMove($event)"
      (pointerout)="onFacePointerOut($event)"
    >
      <ngt-soba-gizmo-face-material
        *repeat="let index of 6"
        [hover]="hover === index"
        [index]="index"
        [genericController]="genericController"
      ></ngt-soba-gizmo-face-material>
    </ngt-soba-box>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER,
                        {
                            provide: NgtSobaExtender,
                            useExisting: NgtSobaGizmoFacecube,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: GenericController, decorators: [{
                    type: Inject,
                    args: [NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER]
                }] }, { type: i2.NgtSobaGizmoHelperStore }]; } });
export class NgtSobaGizmoFaceMaterial {
    constructor(genericController, state, store, document) {
        this.genericController = genericController;
        this.state = state;
        this.store = store;
        this.parameter$ = combineLatest([
            this.state.select(selectSlice(['hover', 'index', 'texture'])),
            this.genericController.rxState.select(selectSlice(['hoverColor', 'opacity']), startWith({
                hoverColor: this.genericController.rxState.get('hoverColor'),
                opacity: this.genericController.rxState.get('opacity'),
            })),
            this.store.select('renderer'),
        ]).pipe(map(([{ texture, hover }, { hoverColor, opacity }, renderer]) => {
            texture.anisotropy = renderer.capabilities.getMaxAnisotropy() || 1;
            return {
                texture,
                color: hover ? hoverColor : 'white',
                opacity: opacity,
            };
        }));
        _NgtSobaGizmoFaceMaterial_change$.set(this, combineLatest([
            this.state.select('index'),
            this.genericController.rxState.select(selectSlice(['font', 'color', 'textColor', 'strokeColor'])),
        ]).pipe(map(([index, { font, color, textColor, strokeColor }]) => ({
            index,
            font,
            color,
            textColor,
            strokeColor,
        }))));
        this.state.connect('texture', __classPrivateFieldGet(this, _NgtSobaGizmoFaceMaterial_change$, "f"), (_, { index, font, color, textColor, strokeColor }) => {
            const faces = this.genericController.rxState.get('faces');
            const canvas = document.createElement('canvas');
            canvas.width = 128;
            canvas.height = 128;
            const context = canvas.getContext('2d');
            context.fillStyle = color;
            context.fillRect(0, 0, canvas.width, canvas.height);
            context.strokeStyle = strokeColor;
            context.strokeRect(0, 0, canvas.width, canvas.height);
            context.font = font;
            context.textAlign = 'center';
            context.fillStyle = textColor;
            context.fillText(faces[index].toUpperCase(), 64, 76);
            return new THREE.CanvasTexture(canvas);
        });
    }
    set hover(hover) {
        this.state.set({ hover });
    }
    set index(index) {
        this.state.set({ index });
    }
}
_NgtSobaGizmoFaceMaterial_change$ = new WeakMap();
NgtSobaGizmoFaceMaterial.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoFaceMaterial, deps: [{ token: NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER }, { token: i1.EnhancedRxState }, { token: i1.NgtStore }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });
NgtSobaGizmoFaceMaterial.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: NgtSobaGizmoFaceMaterial, selector: "ngt-soba-gizmo-face-material[hover][index]", inputs: { hover: "hover", index: "index" }, providers: [NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER, EnhancedRxState], ngImport: i0, template: `
    <ngt-mesh-lambert-material
      *ngIf="parameter$ | async as parameter"
      [parameters]="{
        map: parameter.texture,
        color: parameter.color,
        opacity: parameter.opacity,
        transparent: true
      }"
    ></ngt-mesh-lambert-material>
  `, isInline: true, directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i7.NgtMeshLambertMaterial, selector: "ngt-mesh-lambert-material", exportAs: ["ngtMeshLambertMaterial"] }], pipes: { "async": i3.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoFaceMaterial, decorators: [{
            type: Component,
            args: [{
                    selector: 'ngt-soba-gizmo-face-material[hover][index]',
                    template: `
    <ngt-mesh-lambert-material
      *ngIf="parameter$ | async as parameter"
      [parameters]="{
        map: parameter.texture,
        color: parameter.color,
        opacity: parameter.opacity,
        transparent: true
      }"
    ></ngt-mesh-lambert-material>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER, EnhancedRxState],
                }]
        }], ctorParameters: function () { return [{ type: GenericController, decorators: [{
                    type: Inject,
                    args: [NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER]
                }] }, { type: i1.EnhancedRxState }, { type: i1.NgtStore }, { type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; }, propDecorators: { hover: [{
                type: Input
            }], index: [{
                type: Input
            }] } });
export class NgtSobaGizmoViewcubeModule {
}
NgtSobaGizmoViewcubeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoViewcubeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtSobaGizmoViewcubeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoViewcubeModule, declarations: [GenericController, NgtSobaGizmoViewcube, NgtSobaGizmoEdgecube, NgtSobaGizmoFacecube, NgtSobaGizmoFaceMaterial], imports: [NgtGroupModule,
        NgtAmbientLightModule,
        NgtPointLightModule,
        NgtMeshLambertMaterialModule,
        CommonModule,
        NgtRepeatModule,
        NgtMeshBasicMaterialModule,
        NgtSobaBoxModule], exports: [NgtSobaGizmoViewcube, GenericController] });
NgtSobaGizmoViewcubeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoViewcubeModule, imports: [[
            NgtGroupModule,
            NgtAmbientLightModule,
            NgtPointLightModule,
            NgtMeshLambertMaterialModule,
            CommonModule,
            NgtRepeatModule,
            NgtMeshBasicMaterialModule,
            NgtSobaBoxModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaGizmoViewcubeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        GenericController,
                        NgtSobaGizmoViewcube,
                        NgtSobaGizmoEdgecube,
                        NgtSobaGizmoFacecube,
                        NgtSobaGizmoFaceMaterial,
                    ],
                    exports: [NgtSobaGizmoViewcube, GenericController],
                    imports: [
                        NgtGroupModule,
                        NgtAmbientLightModule,
                        NgtPointLightModule,
                        NgtMeshLambertMaterialModule,
                        CommonModule,
                        NgtRepeatModule,
                        NgtMeshBasicMaterialModule,
                        NgtSobaBoxModule,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,