var _NgtSobaOrthographicCameraStore_projectMatrixParams$, _NgtSobaOrthographicCameraStore_cameraParams$;
import { __classPrivateFieldGet } from "tslib";
import { EnhancedRxState, NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER, NGT_OBJECT_INPUTS_WATCHED_CONTROLLER, NgtObject3dInputsController, NgtObject3dInputsControllerModule, NgtSobaExtender, NgtStore, } from '@angular-three/core';
import { NgtOrthographicCameraModule } from '@angular-three/core/cameras';
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, Inject, Injectable, Input, NgModule, } from '@angular/core';
import { selectSlice } from '@rx-angular/state';
import { combineLatest, map, of, startWith } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@angular-three/core";
import * as i2 from "@angular/common";
import * as i3 from "@angular-three/core/cameras";
export class NgtSobaOrthographicCameraStore extends EnhancedRxState {
    constructor(store, objectInputsController) {
        super();
        this.store = store;
        this.objectInputsController = objectInputsController;
        _NgtSobaOrthographicCameraStore_projectMatrixParams$.set(this, combineLatest([
            this.store.select('size'),
            this.select(selectSlice(['near', 'far'])),
            this.objectInputsController.change$.pipe(startWith({})),
        ]).pipe(map(([size, { near, far }]) => ({ size, near, far }))));
        _NgtSobaOrthographicCameraStore_cameraParams$.set(this, combineLatest([
            this.store.select('camera'),
            this.select(selectSlice(['orthographicCamera', 'makeDefault'])),
        ]).pipe(map(([camera, { orthographicCamera, makeDefault }]) => ({
            camera,
            orthographicCamera,
            makeDefault,
        }))));
        this.vm$ = combineLatest([
            of(this.objectInputsController),
            this.store.select('size'),
            this.select(selectSlice(['near', 'far']), startWith({ near: undefined, far: undefined })),
        ]).pipe(map(([objectInputsController, size, { near, far }]) => ({
            left: size.width / -2,
            right: size.width / 2,
            top: size.height / 2,
            bottom: size.height / -2,
            objectInputsController,
            near,
            far,
        })));
        this.hold(__classPrivateFieldGet(this, _NgtSobaOrthographicCameraStore_projectMatrixParams$, "f"), () => {
            const { manual, orthographicCamera } = this.get();
            if (orthographicCamera && !manual) {
                orthographicCamera.updateProjectionMatrix();
            }
        });
        this.holdEffect(__classPrivateFieldGet(this, _NgtSobaOrthographicCameraStore_cameraParams$, "f"), ({ camera, orthographicCamera, makeDefault }) => {
            if (makeDefault && orthographicCamera) {
                this.store.set({ camera: orthographicCamera });
            }
            return () => {
                this.store.set({ camera });
            };
        });
    }
}
_NgtSobaOrthographicCameraStore_projectMatrixParams$ = new WeakMap(), _NgtSobaOrthographicCameraStore_cameraParams$ = new WeakMap();
NgtSobaOrthographicCameraStore.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaOrthographicCameraStore, deps: [{ token: i1.NgtStore }, { token: NGT_OBJECT_INPUTS_WATCHED_CONTROLLER }], target: i0.ɵɵFactoryTarget.Injectable });
NgtSobaOrthographicCameraStore.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaOrthographicCameraStore });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaOrthographicCameraStore, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.NgtStore }, { type: i1.NgtObject3dInputsController, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_INPUTS_WATCHED_CONTROLLER]
                }] }]; } });
export class NgtSobaOrthographicCamera extends NgtSobaExtender {
    constructor(sobaOrthographicCameraStore) {
        super();
        this.sobaOrthographicCameraStore = sobaOrthographicCameraStore;
        this.vm$ = this.sobaOrthographicCameraStore.vm$;
    }
    set makeDefault(makeDefault) {
        this.sobaOrthographicCameraStore.set({ makeDefault });
    }
    set manual(manual) {
        this.sobaOrthographicCameraStore.set({ manual });
    }
    set near(near) {
        this.sobaOrthographicCameraStore.set({ near });
    }
    set far(far) {
        this.sobaOrthographicCameraStore.set({ far });
    }
}
NgtSobaOrthographicCamera.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaOrthographicCamera, deps: [{ token: NgtSobaOrthographicCameraStore }], target: i0.ɵɵFactoryTarget.Component });
NgtSobaOrthographicCamera.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: NgtSobaOrthographicCamera, selector: "ngt-soba-orthographic-camera", inputs: { makeDefault: "makeDefault", manual: "manual", near: "near", far: "far" }, providers: [
        NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,
        NgtSobaOrthographicCameraStore,
        { provide: NgtSobaExtender, useExisting: NgtSobaOrthographicCamera },
    ], usesInheritance: true, ngImport: i0, template: `
    <ngt-orthographic-camera
      *ngIf="vm$ | async as vm"
      [args]="[vm.left, vm.right, vm.top, vm.bottom, vm.near, vm.far]"
      [object3dInputsController]="vm.objectInputsController"
      (ready)="object = $event"
    >
      <ng-content></ng-content>
    </ngt-orthographic-camera>
  `, isInline: true, directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgtOrthographicCamera, selector: "ngt-orthographic-camera", inputs: ["args"], exportAs: ["ngtOrthographicCamera"] }, { type: i1.NgtObject3dController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera  ", exportAs: ["ngtObject3dController"] }, { type: i1.NgtObject3dInputsController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-billboard,    ngt-soba-detailed,    ngt-soba-line,    ngt-soba-quadratic-bezier-line,    ngt-soba-cubic-bezier-line,    ngt-soba-orthographic-camera,    ngt-soba-gizmo-helper,    ngt-soba-gizmo-viewport,    ngt-soba-gizmo-axis-head,    ngt-soba-text  ", inputs: ["name", "position", "rotation", "quaternion", "scale", "color", "userData", "castShadow", "receiveShadow", "visible", "matrixAutoUpdate", "dispose", "raycast", "appendMode", "appendTo", "object3dInputsController"], outputs: ["click", "contextmenu", "dblclick", "pointerup", "pointerdown", "pointerover", "pointerout", "pointerenter", "pointerleave", "pointermove", "pointermissed", "pointercancel", "wheel"], exportAs: ["ngtObject3dInputsController"] }], pipes: { "async": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaOrthographicCamera, decorators: [{
            type: Component,
            args: [{
                    selector: 'ngt-soba-orthographic-camera',
                    template: `
    <ngt-orthographic-camera
      *ngIf="vm$ | async as vm"
      [args]="[vm.left, vm.right, vm.top, vm.bottom, vm.near, vm.far]"
      [object3dInputsController]="vm.objectInputsController"
      (ready)="object = $event"
    >
      <ng-content></ng-content>
    </ngt-orthographic-camera>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,
                        NgtSobaOrthographicCameraStore,
                        { provide: NgtSobaExtender, useExisting: NgtSobaOrthographicCamera },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: NgtSobaOrthographicCameraStore }]; }, propDecorators: { makeDefault: [{
                type: Input
            }], manual: [{
                type: Input
            }], near: [{
                type: Input
            }], far: [{
                type: Input
            }] } });
export class NgtSobaOrthographicCameraModule {
}
NgtSobaOrthographicCameraModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaOrthographicCameraModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtSobaOrthographicCameraModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaOrthographicCameraModule, declarations: [NgtSobaOrthographicCamera], imports: [CommonModule, NgtOrthographicCameraModule], exports: [NgtSobaOrthographicCamera, NgtObject3dInputsControllerModule] });
NgtSobaOrthographicCameraModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaOrthographicCameraModule, imports: [[CommonModule, NgtOrthographicCameraModule], NgtObject3dInputsControllerModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaOrthographicCameraModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtSobaOrthographicCamera],
                    exports: [NgtSobaOrthographicCamera, NgtObject3dInputsControllerModule],
                    imports: [CommonModule, NgtOrthographicCameraModule],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,