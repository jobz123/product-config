var _NgtSobaDetailedStore_updateLodChildrenParams$;
import { __classPrivateFieldGet } from "tslib";
import { EnhancedRxState, NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER, NGT_OBJECT_INPUTS_WATCHED_CONTROLLER, NgtObject3dController, NgtObject3dInputsController, NgtObject3dInputsControllerModule, NgtSobaExtender, } from '@angular-three/core';
import { NgtLodModule } from '@angular-three/core/lod';
import { ChangeDetectionStrategy, Component, ContentChildren, Inject, Injectable, Input, NgModule, QueryList, } from '@angular/core';
import { asapScheduler } from '@rx-angular/cdk/zone-less';
import { selectSlice } from '@rx-angular/state';
import { combineLatest, map, observeOn, startWith } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@angular-three/core/lod";
import * as i2 from "@angular-three/core";
export class NgtSobaDetailedStore extends EnhancedRxState {
    constructor() {
        super();
        _NgtSobaDetailedStore_updateLodChildrenParams$.set(this, this.select(selectSlice(['lod', 'children'])));
        this.set({ distances: [], children: [] });
        this.hold(__classPrivateFieldGet(this, _NgtSobaDetailedStore_updateLodChildrenParams$, "f"), ({ lod, children }) => {
            const distances = this.get('distances');
            if (!children.length)
                lod.levels.length = 0;
            children.forEach((object, index) => {
                lod.addLevel(object, distances[index]);
            });
        });
    }
}
_NgtSobaDetailedStore_updateLodChildrenParams$ = new WeakMap();
NgtSobaDetailedStore.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaDetailedStore, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
NgtSobaDetailedStore.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaDetailedStore });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaDetailedStore, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return []; } });
export class NgtSobaDetailed extends NgtSobaExtender {
    constructor(objectInputsController, detailedStore) {
        super();
        this.objectInputsController = objectInputsController;
        this.detailedStore = detailedStore;
    }
    set distances(v) {
        this.detailedStore.set({ distances: v });
    }
    ngAfterContentInit() {
        const children$ = combineLatest([
            this.extenders.changes.pipe(startWith(this.extenders), observeOn(asapScheduler)),
            this.children.changes.pipe(startWith(this.children), observeOn(asapScheduler)),
        ]).pipe(map(([extendersList, childrenList]) => [
            ...childrenList.map((child) => child.object3d),
            ...extendersList.map((extender) => extender.object),
        ]));
        this.detailedStore.connect('children', children$);
    }
    onLodAnimateReady({ camera }, lod) {
        lod.update(camera);
    }
    onLodReady(lod) {
        this.object = lod;
        this.detailedStore.set({ lod });
    }
}
NgtSobaDetailed.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaDetailed, deps: [{ token: NGT_OBJECT_INPUTS_WATCHED_CONTROLLER }, { token: NgtSobaDetailedStore }], target: i0.ɵɵFactoryTarget.Component });
NgtSobaDetailed.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: NgtSobaDetailed, selector: "ngt-soba-detailed", inputs: { distances: "distances" }, providers: [
        NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,
        NgtSobaDetailedStore,
        {
            provide: NgtSobaExtender,
            useExisting: NgtSobaDetailed,
        },
    ], queries: [{ propertyName: "children", predicate: NgtObject3dController, descendants: true }, { propertyName: "extenders", predicate: NgtSobaExtender, descendants: true }], usesInheritance: true, ngImport: i0, template: `
    <ngt-lod
      #lod="ngtLod"
      (ready)="onLodReady($event)"
      (animateReady)="onLodAnimateReady($event, lod.lod)"
      [object3dInputsController]="objectInputsController"
    ></ngt-lod>
    <ng-content></ng-content>
  `, isInline: true, directives: [{ type: i1.NgtLod, selector: "ngt-lod", outputs: ["ready"], exportAs: ["ngtLod"] }, { type: i2.NgtObject3dController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera  ", exportAs: ["ngtObject3dController"] }, { type: i2.NgtObject3dInputsController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-billboard,    ngt-soba-detailed,    ngt-soba-line,    ngt-soba-quadratic-bezier-line,    ngt-soba-cubic-bezier-line,    ngt-soba-orthographic-camera,    ngt-soba-gizmo-helper,    ngt-soba-gizmo-viewport,    ngt-soba-gizmo-axis-head,    ngt-soba-text  ", inputs: ["name", "position", "rotation", "quaternion", "scale", "color", "userData", "castShadow", "receiveShadow", "visible", "matrixAutoUpdate", "dispose", "raycast", "appendMode", "appendTo", "object3dInputsController"], outputs: ["click", "contextmenu", "dblclick", "pointerup", "pointerdown", "pointerover", "pointerout", "pointerenter", "pointerleave", "pointermove", "pointermissed", "pointercancel", "wheel"], exportAs: ["ngtObject3dInputsController"] }, { type: i2.NgtAnimationSubscriberController, selector: "[animateReady]", inputs: ["priority"], outputs: ["animateReady"], exportAs: ["ngtAnimationSubscriberController"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaDetailed, decorators: [{
            type: Component,
            args: [{
                    selector: 'ngt-soba-detailed',
                    template: `
    <ngt-lod
      #lod="ngtLod"
      (ready)="onLodReady($event)"
      (animateReady)="onLodAnimateReady($event, lod.lod)"
      [object3dInputsController]="objectInputsController"
    ></ngt-lod>
    <ng-content></ng-content>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,
                        NgtSobaDetailedStore,
                        {
                            provide: NgtSobaExtender,
                            useExisting: NgtSobaDetailed,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i2.NgtObject3dInputsController, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_INPUTS_WATCHED_CONTROLLER]
                }] }, { type: NgtSobaDetailedStore }]; }, propDecorators: { distances: [{
                type: Input
            }], children: [{
                type: ContentChildren,
                args: [NgtObject3dController, { descendants: true }]
            }], extenders: [{
                type: ContentChildren,
                args: [NgtSobaExtender, { descendants: true }]
            }] } });
export class NgtSobaDetailedModule {
}
NgtSobaDetailedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaDetailedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtSobaDetailedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaDetailedModule, declarations: [NgtSobaDetailed], imports: [NgtLodModule], exports: [NgtSobaDetailed, NgtObject3dInputsControllerModule] });
NgtSobaDetailedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaDetailedModule, imports: [[NgtLodModule], NgtObject3dInputsControllerModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaDetailedModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtSobaDetailed],
                    exports: [NgtSobaDetailed, NgtObject3dInputsControllerModule],
                    imports: [NgtLodModule],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,