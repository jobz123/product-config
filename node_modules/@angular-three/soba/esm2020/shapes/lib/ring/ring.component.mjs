// GENERATED
import { NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER, NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER, NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER, NGT_OBJECT_INPUTS_WATCHED_CONTROLLER, NgtContentMaterialController, NgtObject3dInputsController, NgtSobaExtender, NgtObject3dInputsControllerModule, NgtContentMaterialControllerModule, } from '@angular-three/core';
import { NgtRingGeometryModule } from '@angular-three/core/geometries';
import { NgtMeshModule } from '@angular-three/core/meshes';
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, Inject, Input, NgModule, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular-three/core/meshes";
import * as i2 from "@angular-three/core";
import * as i3 from "@angular/common";
import * as i4 from "@angular-three/core/geometries";
export class NgtSobaRing extends NgtSobaExtender {
    constructor(objectInputsController, contentMaterialController) {
        super();
        this.objectInputsController = objectInputsController;
        this.contentMaterialController = contentMaterialController;
    }
}
NgtSobaRing.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaRing, deps: [{ token: NGT_OBJECT_INPUTS_WATCHED_CONTROLLER }, { token: NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER }], target: i0.ɵɵFactoryTarget.Component });
NgtSobaRing.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: NgtSobaRing, selector: "ngt-soba-ring", inputs: { args: "args" }, providers: [
        NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,
        NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,
        { provide: NgtSobaExtender, useExisting: NgtSobaRing },
    ], usesInheritance: true, ngImport: i0, template: `
    <ngt-mesh
      (ready)="object = $event"
      [object3dInputsController]="objectInputsController"
      [contentMaterialController]="contentMaterialController"
    >
      <ngt-ring-geometry
        *ngIf="args; else withoutArgs"
        [args]="args"
      ></ngt-ring-geometry>
      <ng-template #withoutArgs>
        <ngt-ring-geometry></ngt-ring-geometry>
      </ng-template>
    </ngt-mesh>
    <ng-content></ng-content>
  `, isInline: true, directives: [{ type: i1.NgtMesh, selector: "ngt-mesh", exportAs: ["ngtMesh"] }, { type: i2.NgtMaterialGeometryController, selector: "    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-points  ", inputs: ["morphTargetInfluences", "morphTargetDictionary"], exportAs: ["ngtMaterialGeometryController"] }, { type: i2.NgtObject3dController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera  ", exportAs: ["ngtObject3dController"] }, { type: i2.NgtObject3dInputsController, selector: "    ngt-primitive,    ngt-bone,    ngt-group,    ngt-lod,    ngt-points,    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-audio,    ngt-positional-audio,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-light-probe,    ngt-ambient-light,    ngt-ambient-light-probe,    ngt-hemisphere-light,    ngt-hemisphere-light-probe,    ngt-directional-light,    ngt-point-light,    ngt-spot-light,    ngt-rect-area-light,    ngt-arrow-helper,    ngt-axes-helper,    ngt-box3-helper,    ngt-grid-helper,    ngt-plane-helper,    ngt-polar-grid-helper,    ngt-sprite,    ngt-camera,    ngt-perspective-camera,    ngt-orthographic-camera,    ngt-array-camera,    ngt-stereo-camera,    ngt-cube-camera,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-billboard,    ngt-soba-detailed,    ngt-soba-line,    ngt-soba-quadratic-bezier-line,    ngt-soba-cubic-bezier-line,    ngt-soba-orthographic-camera,    ngt-soba-gizmo-helper,    ngt-soba-gizmo-viewport,    ngt-soba-gizmo-axis-head,    ngt-soba-text  ", inputs: ["name", "position", "rotation", "quaternion", "scale", "color", "userData", "castShadow", "receiveShadow", "visible", "matrixAutoUpdate", "dispose", "raycast", "appendMode", "appendTo", "object3dInputsController"], outputs: ["click", "contextmenu", "dblclick", "pointerup", "pointerdown", "pointerover", "pointerout", "pointerenter", "pointerleave", "pointermove", "pointermissed", "pointercancel", "wheel"], exportAs: ["ngtObject3dInputsController"] }, { type: i2.NgtContentMaterialController, selector: "    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-soba-plane,    ngt-soba-box,    ngt-soba-cylinder,    ngt-soba-cone,    ngt-soba-circle,    ngt-soba-sphere,    ngt-soba-tube,    ngt-soba-torus,    ngt-soba-tetrahedron,    ngt-soba-ring,    ngt-soba-polyhedron,    ngt-soba-octahedron,    ngt-soba-dodecahedron,    ngt-soba-icosahedron,    ngt-soba-extrude,    ngt-soba-lathe,    ngt-soba-torus-knot,    ngt-soba-text,,    ngt-points  ", inputs: ["material", "isMaterialArray", "contentMaterialController"], exportAs: ["ngtContentMaterialController"] }, { type: i2.NgtContentGeometryController, selector: "    ngt-mesh,    ngt-instanced-mesh,    ngt-skinned-mesh,    ngt-line,    ngt-line-loop,    ngt-line-segments,    ngt-points  ", inputs: ["geometry", "contentGeometryController"], exportAs: ["ngtContentGeometryController"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgtRingGeometry, selector: "ngt-ring-geometry", inputs: ["args"], exportAs: ["ngtRingGeometry"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaRing, decorators: [{
            type: Component,
            args: [{
                    selector: 'ngt-soba-ring',
                    template: `
    <ngt-mesh
      (ready)="object = $event"
      [object3dInputsController]="objectInputsController"
      [contentMaterialController]="contentMaterialController"
    >
      <ngt-ring-geometry
        *ngIf="args; else withoutArgs"
        [args]="args"
      ></ngt-ring-geometry>
      <ng-template #withoutArgs>
        <ngt-ring-geometry></ngt-ring-geometry>
      </ng-template>
    </ngt-mesh>
    <ng-content></ng-content>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,
                        NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,
                        { provide: NgtSobaExtender, useExisting: NgtSobaRing },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i2.NgtObject3dInputsController, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_INPUTS_WATCHED_CONTROLLER]
                }] }, { type: i2.NgtContentMaterialController, decorators: [{
                    type: Inject,
                    args: [NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER]
                }] }]; }, propDecorators: { args: [{
                type: Input
            }] } });
export class NgtSobaRingModule {
}
NgtSobaRingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaRingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtSobaRingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaRingModule, declarations: [NgtSobaRing], imports: [NgtMeshModule, NgtRingGeometryModule, CommonModule], exports: [NgtSobaRing, NgtObject3dInputsControllerModule,
        NgtContentMaterialControllerModule] });
NgtSobaRingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaRingModule, imports: [[NgtMeshModule, NgtRingGeometryModule, CommonModule], NgtObject3dInputsControllerModule,
        NgtContentMaterialControllerModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: NgtSobaRingModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtSobaRing],
                    exports: [
                        NgtSobaRing,
                        NgtObject3dInputsControllerModule,
                        NgtContentMaterialControllerModule,
                    ],
                    imports: [NgtMeshModule, NgtRingGeometryModule, CommonModule],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9zb2JhL3NoYXBlcy9zcmMvbGliL3JpbmcvcmluZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTtBQUNaLE9BQU8sRUFDTCx3Q0FBd0MsRUFDeEMsdUNBQXVDLEVBQ3ZDLHFDQUFxQyxFQUNyQyxvQ0FBb0MsRUFDcEMsNEJBQTRCLEVBQzVCLDJCQUEyQixFQUMzQixlQUFlLEVBQ2YsaUNBQWlDLEVBQ2pDLGtDQUFrQyxHQUNuQyxNQUFNLHFCQUFxQixDQUFDO0FBQzdCLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsTUFBTSxFQUNOLEtBQUssRUFDTCxRQUFRLEdBQ1QsTUFBTSxlQUFlLENBQUM7Ozs7OztBQTRCdkIsTUFBTSxPQUFPLFdBQVksU0FBUSxlQUEyQjtJQUcxRCxZQUVTLHNCQUFtRCxFQUVuRCx5QkFBdUQ7UUFFOUQsS0FBSyxFQUFFLENBQUM7UUFKRCwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQTZCO1FBRW5ELDhCQUF5QixHQUF6Qix5QkFBeUIsQ0FBOEI7SUFHaEUsQ0FBQzs7d0dBVlUsV0FBVyxrQkFJWixvQ0FBb0MsYUFFcEMsdUNBQXVDOzRGQU50QyxXQUFXLGtFQU5YO1FBQ1QscUNBQXFDO1FBQ3JDLHdDQUF3QztRQUN4QyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRTtLQUN2RCxpREFyQlM7Ozs7Ozs7Ozs7Ozs7OztHQWVUOzJGQVFVLFdBQVc7a0JBekJ2QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxlQUFlO29CQUN6QixRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7OztHQWVUO29CQUNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxTQUFTLEVBQUU7d0JBQ1QscUNBQXFDO3dCQUNyQyx3Q0FBd0M7d0JBQ3hDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLGFBQWEsRUFBRTtxQkFDdkQ7aUJBQ0Y7OzBCQUtJLE1BQU07MkJBQUMsb0NBQW9DOzswQkFFM0MsTUFBTTsyQkFBQyx1Q0FBdUM7NENBTHhDLElBQUk7c0JBQVosS0FBSzs7QUFxQlIsTUFBTSxPQUFPLGlCQUFpQjs7OEdBQWpCLGlCQUFpQjsrR0FBakIsaUJBQWlCLGlCQXRCakIsV0FBVyxhQW9CWixhQUFhLEVBQUUscUJBQXFCLEVBQUUsWUFBWSxhQXBCakQsV0FBVyxFQWlCcEIsaUNBQWlDO1FBQ2pDLGtDQUFrQzsrR0FJekIsaUJBQWlCLFlBRm5CLENBQUMsYUFBYSxFQUFFLHFCQUFxQixFQUFFLFlBQVksQ0FBQyxFQUgzRCxpQ0FBaUM7UUFDakMsa0NBQWtDOzJGQUl6QixpQkFBaUI7a0JBVDdCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsV0FBVyxDQUFDO29CQUMzQixPQUFPLEVBQUU7d0JBQ1AsV0FBVzt3QkFDWCxpQ0FBaUM7d0JBQ2pDLGtDQUFrQztxQkFDbkM7b0JBQ0QsT0FBTyxFQUFFLENBQUMsYUFBYSxFQUFFLHFCQUFxQixFQUFFLFlBQVksQ0FBQztpQkFDOUQiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHRU5FUkFURURcbmltcG9ydCB7XG4gIE5HVF9DT05URU5UX01BVEVSSUFMX0NPTlRST0xMRVJfUFJPVklERVIsXG4gIE5HVF9DT05URU5UX01BVEVSSUFMX1dBVENIRURfQ09OVFJPTExFUixcbiAgTkdUX09CSkVDVF9JTlBVVFNfQ09OVFJPTExFUl9QUk9WSURFUixcbiAgTkdUX09CSkVDVF9JTlBVVFNfV0FUQ0hFRF9DT05UUk9MTEVSLFxuICBOZ3RDb250ZW50TWF0ZXJpYWxDb250cm9sbGVyLFxuICBOZ3RPYmplY3QzZElucHV0c0NvbnRyb2xsZXIsXG4gIE5ndFNvYmFFeHRlbmRlcixcbiAgTmd0T2JqZWN0M2RJbnB1dHNDb250cm9sbGVyTW9kdWxlLFxuICBOZ3RDb250ZW50TWF0ZXJpYWxDb250cm9sbGVyTW9kdWxlLFxufSBmcm9tICdAYW5ndWxhci10aHJlZS9jb3JlJztcbmltcG9ydCB7IE5ndFJpbmdHZW9tZXRyeU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyLXRocmVlL2NvcmUvZ2VvbWV0cmllcyc7XG5pbXBvcnQgeyBOZ3RNZXNoTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXItdGhyZWUvY29yZS9tZXNoZXMnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIEluamVjdCxcbiAgSW5wdXQsXG4gIE5nTW9kdWxlLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmd0LXNvYmEtcmluZycsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5ndC1tZXNoXG4gICAgICAocmVhZHkpPVwib2JqZWN0ID0gJGV2ZW50XCJcbiAgICAgIFtvYmplY3QzZElucHV0c0NvbnRyb2xsZXJdPVwib2JqZWN0SW5wdXRzQ29udHJvbGxlclwiXG4gICAgICBbY29udGVudE1hdGVyaWFsQ29udHJvbGxlcl09XCJjb250ZW50TWF0ZXJpYWxDb250cm9sbGVyXCJcbiAgICA+XG4gICAgICA8bmd0LXJpbmctZ2VvbWV0cnlcbiAgICAgICAgKm5nSWY9XCJhcmdzOyBlbHNlIHdpdGhvdXRBcmdzXCJcbiAgICAgICAgW2FyZ3NdPVwiYXJnc1wiXG4gICAgICA+PC9uZ3QtcmluZy1nZW9tZXRyeT5cbiAgICAgIDxuZy10ZW1wbGF0ZSAjd2l0aG91dEFyZ3M+XG4gICAgICAgIDxuZ3QtcmluZy1nZW9tZXRyeT48L25ndC1yaW5nLWdlb21ldHJ5PlxuICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICA8L25ndC1tZXNoPlxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByb3ZpZGVyczogW1xuICAgIE5HVF9PQkpFQ1RfSU5QVVRTX0NPTlRST0xMRVJfUFJPVklERVIsXG4gICAgTkdUX0NPTlRFTlRfTUFURVJJQUxfQ09OVFJPTExFUl9QUk9WSURFUixcbiAgICB7IHByb3ZpZGU6IE5ndFNvYmFFeHRlbmRlciwgdXNlRXhpc3Rpbmc6IE5ndFNvYmFSaW5nIH0sXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE5ndFNvYmFSaW5nIGV4dGVuZHMgTmd0U29iYUV4dGVuZGVyPFRIUkVFLk1lc2g+IHtcbiAgQElucHV0KCkgYXJncz86IENvbnN0cnVjdG9yUGFyYW1ldGVyczx0eXBlb2YgVEhSRUUuUmluZ0dlb21ldHJ5PjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KE5HVF9PQkpFQ1RfSU5QVVRTX1dBVENIRURfQ09OVFJPTExFUilcbiAgICBwdWJsaWMgb2JqZWN0SW5wdXRzQ29udHJvbGxlcjogTmd0T2JqZWN0M2RJbnB1dHNDb250cm9sbGVyLFxuICAgIEBJbmplY3QoTkdUX0NPTlRFTlRfTUFURVJJQUxfV0FUQ0hFRF9DT05UUk9MTEVSKVxuICAgIHB1YmxpYyBjb250ZW50TWF0ZXJpYWxDb250cm9sbGVyOiBOZ3RDb250ZW50TWF0ZXJpYWxDb250cm9sbGVyXG4gICkge1xuICAgIHN1cGVyKCk7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbTmd0U29iYVJpbmddLFxuICBleHBvcnRzOiBbXG4gICAgTmd0U29iYVJpbmcsXG4gICAgTmd0T2JqZWN0M2RJbnB1dHNDb250cm9sbGVyTW9kdWxlLFxuICAgIE5ndENvbnRlbnRNYXRlcmlhbENvbnRyb2xsZXJNb2R1bGUsXG4gIF0sXG4gIGltcG9ydHM6IFtOZ3RNZXNoTW9kdWxlLCBOZ3RSaW5nR2VvbWV0cnlNb2R1bGUsIENvbW1vbk1vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIE5ndFNvYmFSaW5nTW9kdWxlIHt9XG4iXX0=