{"version":3,"file":"angular-three-soba-abstractions.mjs","sources":["../../../../packages/soba/abstractions/src/billboard/billboard.component.ts","../../../../packages/soba/abstractions/src/text/text.component.ts","../../../../packages/soba/abstractions/src/image/image.component.ts","../../../../packages/soba/abstractions/src/line/line.component.ts","../../../../packages/soba/abstractions/src/quadratic-bezier-line/quadratic-bezier-line.component.ts","../../../../packages/soba/abstractions/src/positional-audio/positional-audio.component.ts","../../../../packages/soba/abstractions/src/gizmo-helper/gizmo-helper.store.ts","../../../../packages/soba/abstractions/src/gizmo-helper/gizmo-helper.component.ts","../../../../packages/soba/abstractions/src/gizmo-helper/gizmo-viewcube.component.ts","../../../../packages/soba/abstractions/src/gizmo-helper/gizmo-viewport.component.ts","../../../../packages/soba/abstractions/src/angular-three-soba-abstractions.ts"],"sourcesContent":["import {\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtObject3dInputsController,\n  NgtObject3dInputsControllerModule,\n  NgtRender,\n  NgtSobaExtender,\n} from '@angular-three/core';\nimport { NgtGroupModule } from '@angular-three/core/group';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'ngt-soba-billboard',\n  template: `\n    <ngt-group\n      #ngtGroup=\"ngtGroup\"\n      (ready)=\"onGroupReady($event)\"\n      (animateReady)=\"onGroupAnimate(ngtGroup.group!, $event)\"\n      [object3dInputsController]=\"objectInputsController\"\n    >\n      <ng-content></ng-content>\n    </ngt-group>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaBillboard },\n  ],\n})\nexport class NgtSobaBillboard extends NgtSobaExtender<THREE.Group> {\n  @Input() follow = true;\n  @Input() lockX = false;\n  @Input() lockY = false;\n  @Input() lockZ = false;\n\n  @ContentChild(NgtObject3dInputsController)\n  childInputsController?: NgtObject3dInputsController;\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController\n  ) {\n    super();\n  }\n\n  onGroupAnimate(group: THREE.Group, $event: NgtRender) {\n    if (!this.follow) return;\n\n    this.animateReady.emit($event);\n\n    // save previous rotation in case we're locking an axis\n    const prevRotation = group.rotation.clone();\n\n    // always face the camera\n    group.quaternion.copy($event.camera.quaternion);\n\n    // readjust any axis that is locked\n    if (this.lockX) group.rotation.x = prevRotation.x;\n    if (this.lockY) group.rotation.y = prevRotation.y;\n    if (this.lockZ) group.rotation.z = prevRotation.z;\n  }\n\n  onGroupReady(group: THREE.Group) {\n    this.object = group;\n    if (this.childInputsController) {\n      this.childInputsController.appendTo = group;\n    }\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaBillboard],\n  exports: [NgtSobaBillboard, NgtObject3dInputsControllerModule],\n  imports: [NgtGroupModule],\n})\nexport class NgtSobaBillboardModule {}\n","import {\n  applyProps,\n  NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n  NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtColor,\n  NgtContentMaterialController,\n  NgtContentMaterialControllerModule,\n  NgtLoopService,\n  NgtObject3dInputsController,\n  NgtObject3dInputsControllerModule,\n  NgtSobaExtender,\n  NgtVector4,\n} from '@angular-three/core';\nimport { NgtPrimitiveModule } from '@angular-three/core/primitive';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgModule,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { requestAnimationFrame } from '@rx-angular/cdk/zone-less';\n// @ts-ignore\nimport { Text as TextMeshImpl } from 'troika-three-text';\n\n@Component({\n  selector: 'ngt-soba-text',\n  template: `\n    <ng-container *ngIf=\"object\">\n      <ngt-primitive\n        [object]=\"$any(object)\"\n        [object3dInputsController]=\"objectInputsController\"\n        (ready)=\"onTroikaTextReady(object)\"\n      >\n      </ngt-primitive>\n    </ng-container>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NGT_CONTENT_MATERIAL_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaText },\n  ],\n})\nexport class NgtSobaText\n  extends NgtSobaExtender<TextMeshImpl>\n  implements OnInit, OnChanges, OnDestroy\n{\n  @Input() color?: NgtColor;\n  @Input() fontSize?: number;\n  @Input() maxWidth?: number;\n  @Input() lineHeight?: number;\n  @Input() letterSpacing?: number;\n  @Input() textAlign?: 'left' | 'right' | 'center' | 'justify';\n  @Input() font?: string;\n  @Input() anchorX: number | 'left' | 'center' | 'right' = 'center';\n  @Input() anchorY:\n    | number\n    | 'top'\n    | 'top-baseline'\n    | 'middle'\n    | 'bottom-baseline'\n    | 'bottom' = 'middle';\n  @Input() clipRect?: NgtVector4;\n  @Input() depthOffset?: number;\n  @Input() direction?: 'auto' | 'ltr' | 'rtl';\n  @Input() overflowWrap?: 'normal' | 'break-word';\n  @Input() whiteSpace?: 'normal' | 'overflowWrap' | 'overflowWrap';\n  @Input() outlineWidth?: number | string;\n  @Input() outlineOffsetX?: number | string;\n  @Input() outlineOffsetY?: number | string;\n  @Input() outlineBlur?: number | string;\n  @Input() outlineColor?: NgtColor;\n  @Input() outlineOpacity?: number;\n  @Input() strokeWidth?: number | string;\n  @Input() strokeColor?: NgtColor;\n  @Input() strokeOpacity?: number;\n  @Input() fillOpacity?: number;\n  @Input() debugSDF?: boolean;\n\n  @Output() sync = new EventEmitter<TextMeshImpl>();\n\n  #text = '';\n  get text(): string {\n    return this.#text;\n  }\n\n  set text(value: string) {\n    this.#text = value.trim();\n  }\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(NGT_CONTENT_MATERIAL_WATCHED_CONTROLLER)\n    private contentMaterialController: NgtContentMaterialController,\n    private elRef: ElementRef<HTMLElement>,\n    private ngZone: NgZone,\n    private loopService: NgtLoopService\n  ) {\n    super();\n    ngZone.runOutsideAngular(() => {\n      this.object = new TextMeshImpl();\n    });\n  }\n\n  ngOnChanges() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.object) {\n        this.object.sync(() => {\n          this.loopService.invalidate();\n          if (this.sync.observed) {\n            this.sync.emit(this.object);\n          }\n        });\n      }\n    });\n  }\n\n  ngOnInit() {\n    requestAnimationFrame(() => {\n      this.elRef.nativeElement.childNodes.forEach((childNode) => {\n        if (childNode instanceof Text) {\n          this.text += childNode.textContent;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.object) {\n      this.object.dispose();\n    }\n  }\n\n  onTroikaTextReady(troikaText: TextMeshImpl) {\n    requestAnimationFrame(() => {\n      troikaText.text = this.text;\n      if (this.contentMaterialController.material) {\n        troikaText.material = this.contentMaterialController.material;\n      }\n      applyProps(troikaText, {\n        color: this.color,\n        fontSize: this.fontSize,\n        maxWidth: this.maxWidth,\n        lineHeight: this.lineHeight,\n        letterSpacing: this.letterSpacing,\n        textAlign: this.textAlign,\n        font: this.font,\n        anchorX: this.anchorX,\n        anchorY: this.anchorY,\n        clipRect: this.clipRect,\n        depthOffset: this.depthOffset,\n        direction: this.direction,\n        overflowWrap: this.overflowWrap,\n        whiteSpace: this.whiteSpace,\n        outlineWidth: this.outlineWidth,\n        outlineOffsetX: this.outlineOffsetX,\n        outlineOffsetY: this.outlineOffsetY,\n        outlineBlur: this.outlineBlur,\n        outlineColor: this.outlineColor,\n        outlineOpacity: this.outlineOpacity,\n        strokeWidth: this.strokeWidth,\n        strokeColor: this.strokeColor,\n        strokeOpacity: this.strokeOpacity,\n        fillOpacity: this.fillOpacity,\n        debugSDF: this.debugSDF,\n      });\n    });\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaText],\n  exports: [\n    NgtSobaText,\n    NgtObject3dInputsControllerModule,\n    NgtContentMaterialControllerModule,\n  ],\n  imports: [CommonModule, NgtPrimitiveModule],\n})\nexport class NgtSobaTextModule {}\n","import {\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtColor,\n  NgtMaterial,\n  NgtObject3dInputsController,\n  NgtObject3dInputsControllerModule,\n  NgtSobaExtender,\n} from '@angular-three/core';\nimport { NgtPlaneGeometryModule } from '@angular-three/core/geometries';\nimport { NgtMeshModule } from '@angular-three/core/meshes';\nimport { shaderMaterial } from '@angular-three/soba';\nimport { NgtTextureLoaderService } from '@angular-three/soba/loaders';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  Inject,\n  Input,\n  NgModule,\n  OnChanges,\n} from '@angular/core';\nimport { Observable, tap } from 'rxjs';\nimport * as THREE from 'three';\n\nexport type NgtSobaImageShaderMaterialParameters =\n  THREE.ShaderMaterialParameters & {\n    scale?: number[];\n    imageBounds?: number[];\n    color?: NgtColor;\n    map: THREE.Texture;\n    zoom?: number;\n    grayscale?: number;\n  };\n\nexport const ImageShaderMaterial = shaderMaterial(\n  {\n    color: new THREE.Color('white'),\n    scale: [1, 1],\n    imageBounds: [1, 1],\n    map: null,\n    zoom: 1,\n    grayscale: 0,\n  },\n  // language=glsl\n  `\n  varying vec2 vUv;\n  void main() {\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n    vUv = uv;\n  }\n`,\n  // language=glsl\n  `\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\n  varying vec2 vUv;\n  uniform vec2 scale;\n  uniform vec2 imageBounds;\n  uniform vec3 color;\n  uniform sampler2D map;\n  uniform float zoom;\n  uniform float grayscale;\n  const vec3 luma = vec3(.299, 0.587, 0.114);\n  vec4 toGrayscale(vec4 color, float intensity) {\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\n  }\n  vec2 aspect(vec2 size) {\n    return size / min(size.x, size.y);\n  }\n  void main() {\n    vec2 s = aspect(scale);\n    vec2 i = aspect(imageBounds);\n    float rs = s.x / s.y;\n    float ri = i.x / i.y;\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n    vec2 uv = vUv * s / new + offset;\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, 1.0), grayscale);\n  }\n`\n);\n\n@Directive({\n  selector: 'ngt-soba-image-shader-material',\n  exportAs: 'ngtSobaImageShaderMaterial',\n  providers: [\n    { provide: NgtMaterial, useExisting: NgtSobaImageShaderMaterial },\n  ],\n})\nexport class NgtSobaImageShaderMaterial extends NgtMaterial<\n  NgtSobaImageShaderMaterialParameters,\n  typeof ImageShaderMaterial.prototype\n> {\n  static ngAcceptInputType_parameters:\n    | NgtSobaImageShaderMaterialParameters\n    | undefined;\n\n  materialType = ImageShaderMaterial;\n}\n\n@Component({\n  selector: 'ngt-soba-image[url]',\n  template: `\n    <ng-container *ngIf=\"texture$ | async as texture\">\n      <ngt-mesh\n        [scale]=\"scale\"\n        [object3dInputsController]=\"objectInputsController\"\n        (ready)=\"object = $event\"\n      >\n        <ngt-plane-geometry\n          [args]=\"[1, 1, segments, segments]\"\n        ></ngt-plane-geometry>\n        <ngt-soba-image-shader-material\n          [parameters]=\"{color, map: texture, zoom, grayscale, scale: planeBounds, imageBounds}\"\n        ></ngt-soba-image-shader-material>\n        <ng-content></ng-content>\n      </ngt-mesh>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaImage },\n  ],\n})\nexport class NgtSobaImage\n  extends NgtSobaExtender<THREE.Mesh>\n  implements OnChanges\n{\n  @Input() segments?: number;\n  @Input() scale?: number;\n  @Input() color?: NgtColor;\n  @Input() zoom?: number;\n  @Input() grayscale?: number;\n\n  @Input() set url(v: string) {\n    this.texture$ = this.textureLoaderService.load(v).pipe(\n      tap((texture) => {\n        this.imageBounds = [texture.image.width, texture.image.height];\n      })\n    );\n  }\n\n  planeBounds?: [number, number];\n  imageBounds?: [number, number];\n\n  texture$?: Observable<THREE.Texture>;\n\n  constructor(\n    private textureLoaderService: NgtTextureLoaderService,\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController\n  ) {\n    super();\n  }\n\n  ngOnChanges() {\n    this.planeBounds = Array.isArray(this.scale)\n      ? [this.scale[0], this.scale[1]]\n      : [this.scale, this.scale];\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaImage, NgtSobaImageShaderMaterial],\n  exports: [\n    NgtSobaImage,\n    NgtSobaImageShaderMaterial,\n    NgtObject3dInputsControllerModule,\n  ],\n  imports: [NgtMeshModule, NgtPlaneGeometryModule, CommonModule],\n})\nexport class NgtSobaImageModule {}\n","import {\n  Controller,\n  createControllerProviderFactory,\n  EnhancedRxState,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtColor,\n  NgtObject3dInputsController,\n  NgtObject3dInputsControllerModule,\n  NgtVector3,\n} from '@angular-three/core';\nimport { NgtPrimitiveModule } from '@angular-three/core/primitive';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  Inject,\n  Input,\n  NgModule,\n  NgZone,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { selectSlice } from '@rx-angular/state';\nimport { combineLatest, distinctUntilChanged, map, startWith } from 'rxjs';\nimport * as THREE from 'three';\nimport {\n  Line2,\n  LineGeometry,\n  LineMaterial,\n  LineMaterialParameters,\n} from 'three-stdlib';\n\n@Directive({\n  selector:\n    'ngt-soba-line,ngt-soba-quadratic-bezier-line,ngt-soba-cubic-bezier-line',\n  exportAs: 'ngtSobaLineInputsController',\n})\nexport class NgtSobaLineInputsController extends Controller {\n  @Input() color: NgtColor = 'black';\n  @Input() vertexColors?: Array<NgtColor>;\n  @Input() lineWidth?: LineMaterialParameters['linewidth'];\n  @Input() dashed?: LineMaterialParameters['dashed'];\n  @Input() parameters?: Omit<\n    LineMaterialParameters,\n    'vertexColors' | 'color' | 'linewidth' | 'dashed' | 'resolution'\n  > = {};\n\n  @Input() sobaLineInputsController?: NgtSobaLineInputsController;\n\n  get controller(): Controller | undefined {\n    return this.sobaLineInputsController;\n  }\n\n  get props(): string[] {\n    return ['color', 'vertexColors', 'lineWidth', 'dashed', 'parameters'];\n  }\n}\n\nexport const [\n  NGT_SOBA_LINE_INPUTS_WATCHED_CONTROLLER,\n  NGT_SOBA_LINE_INPUTS_CONTROLLER_PROVIDER,\n] = createControllerProviderFactory({\n  watchedControllerTokenName: 'Watched SobaLine Inputs Controller',\n  controller: NgtSobaLineInputsController,\n});\n\nexport interface NgtSobaLineState {\n  points: NgtVector3[];\n  line: Line2;\n  lineMaterial: LineMaterial;\n  lineGeometry: LineGeometry;\n}\n\n@Component({\n  selector: 'ngt-soba-line[points]',\n  template: `\n    <ngt-primitive\n      [object]=\"line\"\n      [object3dInputsController]=\"objectInputsController\"\n    ></ngt-primitive>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_SOBA_LINE_INPUTS_CONTROLLER_PROVIDER,\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  ],\n})\nexport class NgtSobaLine\n  extends EnhancedRxState<NgtSobaLineState>\n  implements OnInit\n{\n  @Input() set points(points: NgtVector3[]) {\n    this.set({ points });\n  }\n\n  #resolution = new THREE.Vector2(512, 512);\n  #sobaLineInputsController!: NgtSobaLineInputsController;\n\n  @Output() ready = this.select('line');\n\n  constructor(\n    @Inject(NGT_SOBA_LINE_INPUTS_WATCHED_CONTROLLER)\n    private sobaLineInputsController: NgtSobaLineInputsController,\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    private ngZone: NgZone\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.#sobaLineInputsController =\n      this.sobaLineInputsController.sobaLineInputsController ||\n      this.sobaLineInputsController;\n\n    this.set({\n      lineMaterial: new LineMaterial(),\n    });\n\n    const geometryChanges$ = combineLatest([\n      this.select('points'),\n      this.#sobaLineInputsController.change$.pipe(\n        map(() => this.#sobaLineInputsController.vertexColors),\n        distinctUntilChanged(),\n        startWith(undefined)\n      ),\n    ]);\n\n    const materialChanges$ = combineLatest([\n      this.select('lineMaterial'),\n      this.#sobaLineInputsController.change$.pipe(\n        map((changes) => {\n          return {\n            color: (changes.sobaLineInputsController\n              ? changes.sobaLineInputsController.currentValue\n              : this.#sobaLineInputsController\n            ).color,\n            vertexColors: Boolean(\n              (changes.sobaLineInputsController\n                ? changes.sobaLineInputsController.currentValue\n                : this.#sobaLineInputsController\n              ).vertexColors\n            ),\n            linewidth: (changes.sobaLineInputsController\n              ? changes.sobaLineInputsController.currentValue\n              : this.#sobaLineInputsController\n            ).lineWidth,\n            dashed: (changes.sobaLineInputsController\n              ? changes.sobaLineInputsController.currentValue\n              : this.#sobaLineInputsController\n            ).dashed,\n            parameters: (changes.sobaLineInputsController\n              ? changes.sobaLineInputsController.currentValue\n              : this.#sobaLineInputsController\n            ).parameters,\n          };\n        }),\n        startWith({\n          color: this.#sobaLineInputsController.color,\n          vertexColors: Boolean(this.#sobaLineInputsController.vertexColors),\n          linewidth: this.#sobaLineInputsController.lineWidth,\n          dashed: this.#sobaLineInputsController.dashed,\n          parameters: this.#sobaLineInputsController.parameters,\n        })\n      ),\n    ]);\n\n    this.hold(this.select(selectSlice(['line', 'points'])), ({ line }) => {\n      line.computeLineDistances();\n    });\n\n    this.hold(\n      materialChanges$,\n      ([\n        lineMaterial,\n        { dashed, parameters, vertexColors, color, linewidth },\n      ]) => {\n        const lineParameters = {\n          vertexColors,\n          color,\n          resolution: this.#resolution,\n          ...parameters,\n        } as LineMaterialParameters;\n\n        if (dashed !== undefined) {\n          lineParameters.dashed = dashed;\n        }\n\n        if (linewidth !== undefined) {\n          lineParameters.linewidth = linewidth;\n        }\n\n        lineMaterial.setValues(lineParameters);\n\n        if (dashed) {\n          lineMaterial.defines.USE_DASH = '';\n        } else {\n          // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\n          delete lineMaterial.defines.USE_DASH;\n        }\n\n        lineMaterial.needsUpdate = true;\n      }\n    );\n\n    this.connect(\n      'lineGeometry',\n      geometryChanges$,\n      (_, [points, vertexColors]) => {\n        return this.ngZone.runOutsideAngular(() => {\n          const lineGeometry = new LineGeometry();\n          const pValues = points.map((p) =>\n            p instanceof THREE.Vector3 ? p.toArray() : p\n          );\n          lineGeometry.setPositions((pValues as any).flat());\n\n          if (vertexColors) {\n            const cValues = (vertexColors as NgtColor[]).map((c) =>\n              c instanceof THREE.Color ? c.toArray() : c\n            );\n            lineGeometry.setColors((cValues as any).flat());\n          }\n\n          return lineGeometry;\n        });\n      }\n    );\n\n    this.holdEffect(this.select('lineGeometry'), (lineGeometry) => {\n      return () => {\n        lineGeometry.dispose();\n      };\n    });\n\n    this.holdEffect(this.select('lineMaterial'), (lineMaterial) => {\n      return () => {\n        lineMaterial.dispose();\n      };\n    });\n\n    this.hold(\n      this.select(selectSlice(['lineGeometry', 'lineMaterial'])),\n      ({ lineMaterial, lineGeometry }) => {\n        const line = this.get('line');\n        if (!line) {\n          this.set({ line: new Line2(lineGeometry, lineMaterial) });\n        } else {\n          line.geometry = lineGeometry;\n          line.computeLineDistances();\n        }\n      }\n    );\n  }\n\n  get line() {\n    return this.get('line');\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaLine, NgtSobaLineInputsController],\n  exports: [\n    NgtSobaLine,\n    NgtSobaLineInputsController,\n    NgtObject3dInputsControllerModule,\n  ],\n  imports: [NgtPrimitiveModule],\n})\nexport class NgtSobaLineModule {}\n","import {\n  EnhancedRxState,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtObject3dInputsController,\n  NgtObject3dInputsControllerModule,\n  NgtVector3,\n} from '@angular-three/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport { selectSlice } from '@rx-angular/state';\nimport * as THREE from 'three';\nimport { Line2 } from 'three-stdlib';\nimport {\n  NGT_SOBA_LINE_INPUTS_CONTROLLER_PROVIDER,\n  NGT_SOBA_LINE_INPUTS_WATCHED_CONTROLLER,\n  NgtSobaLineInputsController,\n  NgtSobaLineModule,\n} from '../line/line.component';\n\nexport interface NgtSobaQuadraticBezierLineState {\n  start: NgtVector3;\n  end: NgtVector3;\n  segments: number;\n  points: NgtVector3[];\n  curve: THREE.QuadraticBezierCurve3;\n  mid: NgtVector3 | null;\n}\n\n@Component({\n  selector: 'ngt-soba-quadratic-bezier-line[start][end]',\n  template: `\n    <ngt-soba-line\n      *ngIf=\"points\"\n      (ready)=\"onLineReady($any($event))\"\n      [points]=\"points\"\n      [sobaLineInputsController]=\"sobaLineInputsController\"\n      [object3dInputsController]=\"objectInputsController\"\n    ></ngt-soba-line>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_SOBA_LINE_INPUTS_CONTROLLER_PROVIDER,\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  ],\n})\nexport class NgtSobaQuadraticBezierLine extends EnhancedRxState<NgtSobaQuadraticBezierLineState> {\n  @Input() set start(start: NgtVector3) {\n    this.set({ start });\n  }\n\n  @Input() set end(end: NgtVector3) {\n    this.set({ end });\n  }\n\n  @Input() set mid(mid: NgtVector3) {\n    this.set({ mid });\n  }\n\n  @Input() set segments(segments: number) {\n    this.set({ segments });\n  }\n\n  v = new THREE.Vector3();\n\n  get points() {\n    return this.get('points');\n  }\n\n  constructor(\n    @Inject(NGT_SOBA_LINE_INPUTS_WATCHED_CONTROLLER)\n    public sobaLineInputsController: NgtSobaLineInputsController,\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController\n  ) {\n    super();\n    this.set({\n      start: [0, 0, 0],\n      end: [0, 0, 0],\n      segments: 20,\n      mid: null,\n      curve: new THREE.QuadraticBezierCurve3(\n        undefined as any,\n        undefined as any,\n        undefined as any\n      ),\n    });\n\n    this.connect(\n      'points',\n      this.select(selectSlice(['start', 'end', 'mid', 'segments'])),\n      (_, { segments, mid, end, start }) =>\n        this.#getPoints(start, end, mid, segments)\n    );\n  }\n\n  #getPoints(\n    start: NgtVector3,\n    end: NgtVector3,\n    mid: NgtVector3 | null,\n    segments = 20\n  ) {\n    const curve = this.get('curve');\n    if (start instanceof THREE.Vector3) curve.v0.copy(start);\n    else curve.v0.set(...(start as [number, number, number]));\n    if (end instanceof THREE.Vector3) curve.v2.copy(end);\n    else curve.v2.set(...(end as [number, number, number]));\n    if (mid instanceof THREE.Vector3) {\n      curve.v1.copy(mid);\n    } else {\n      curve.v1.copy(\n        curve.v0\n          .clone()\n          .add(curve.v2.clone().sub(curve.v0))\n          .add(this.v.set(0, curve.v0.y - curve.v2.y, 0))\n      );\n    }\n    return curve.getPoints(segments);\n  }\n\n  onLineReady(\n    line: Line2 & {\n      setPoints: (start: NgtVector3, end: NgtVector3, mid: NgtVector3) => void;\n    }\n  ) {\n    line.setPoints = (start, end, mid) => {\n      const points = this.#getPoints(start, end, mid);\n      if (line.geometry) {\n        // @ts-ignore\n        line.geometry.setPositions(points.map((p) => p.toArray()).flat());\n      }\n    };\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaQuadraticBezierLine],\n  exports: [\n    NgtSobaQuadraticBezierLine,\n    NgtSobaLineModule,\n    NgtObject3dInputsControllerModule,\n  ],\n  imports: [NgtSobaLineModule, CommonModule],\n})\nexport class NgtSobaQuadraticBezierLineModule {}\n","import {\n  EnhancedRxState,\n  NGT_AUDIO_CONTROLLER_PROVIDER,\n  NGT_AUDIO_WATCHED_CONTROLLER,\n  NgtAudioController,\n  NgtAudioControllerModule,\n  NgtLoaderService,\n  NgtSobaExtender,\n  NgtStore,\n  UnknownRecord,\n} from '@angular-three/core';\nimport { NgtPositionalAudioModule } from '@angular-three/core/audios';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Injectable,\n  Input,\n  NgModule,\n} from '@angular/core';\nimport { selectSlice } from '@rx-angular/state';\nimport {\n  combineLatest,\n  distinctUntilChanged,\n  map,\n  startWith,\n  switchMap,\n} from 'rxjs';\nimport * as THREE from 'three';\n\nexport interface NgtSobaPositionalAudioState {\n  url: string;\n  distance: number;\n  loop: boolean;\n  audio: THREE.PositionalAudio;\n  listener: THREE.AudioListener;\n  autoplay: boolean;\n}\n\n@Injectable()\nexport class NgtSobaPositionalAudioStore extends EnhancedRxState<NgtSobaPositionalAudioState> {\n  readonly buffer$ = this.select('url').pipe(\n    switchMap((url) => this.loaderService.use(THREE.AudioLoader, url))\n  );\n\n  readonly changes$ = combineLatest([\n    this.buffer$,\n    this.select(selectSlice(['distance', 'loop'])),\n  ]).pipe(map(([buffer, { loop, distance }]) => ({ buffer, loop, distance })));\n\n  constructor(\n    private loaderService: NgtLoaderService,\n    private store: NgtStore\n  ) {\n    super();\n    this.set({ listener: new THREE.AudioListener(), distance: 1, loop: true });\n    this.hold(this.changes$, ({ buffer, loop, distance }) => {\n      const { autoplay, audio } = this.get();\n      if (audio) {\n        audio.setBuffer(buffer);\n        audio.setRefDistance(distance);\n        audio.setLoop(loop);\n        if (autoplay && !audio.isPlaying) audio.play();\n      }\n    });\n\n    this.holdEffect(this.select('autoplay'), () => {\n      const { audio, listener } = this.get();\n      const camera = this.store.get('camera');\n      if (camera) {\n        camera.add(listener);\n      }\n\n      return () => {\n        if (camera) {\n          camera.remove(listener);\n        }\n        if (audio) {\n          if (audio.isPlaying) audio.stop();\n          if (\n            audio.source &&\n            (audio.source as unknown as UnknownRecord)._connected\n          ) {\n            audio.disconnect();\n          }\n        }\n      };\n    });\n  }\n}\n\n@Component({\n  selector: 'ngt-soba-positional-audio',\n  template: `\n    <ngt-positional-audio\n      *ngIf=\"listener$ | async as listener\"\n      (ready)=\"onPositionalAudioReady($event)\"\n      [listener]=\"listener\"\n      [audioController]=\"audioController\"\n    ></ngt-positional-audio>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_AUDIO_CONTROLLER_PROVIDER,\n    NgtSobaPositionalAudioStore,\n    { provide: NgtSobaExtender, useExisting: NgtSobaPositionalAudio },\n  ],\n})\nexport class NgtSobaPositionalAudio extends NgtSobaExtender<THREE.PositionalAudio> {\n  @Input() set url(url: string) {\n    this.sobaPositionalAudioStore.set({ url });\n  }\n\n  @Input() set distance(distance: number) {\n    this.sobaPositionalAudioStore.set({ distance });\n  }\n\n  @Input() set loop(loop: boolean) {\n    this.sobaPositionalAudioStore.set({ loop });\n  }\n\n  readonly listener$ = this.sobaPositionalAudioStore.select('listener');\n\n  constructor(\n    @Inject(NGT_AUDIO_WATCHED_CONTROLLER)\n    public audioController: NgtAudioController,\n    private sobaPositionalAudioStore: NgtSobaPositionalAudioStore\n  ) {\n    super();\n    sobaPositionalAudioStore.connect(\n      'autoplay',\n      audioController.change$.pipe(\n        map(() => audioController.autoplay || false),\n        startWith(audioController.autoplay || false),\n        distinctUntilChanged()\n      )\n    );\n  }\n\n  onPositionalAudioReady(audio: THREE.PositionalAudio) {\n    this.object = audio;\n    this.sobaPositionalAudioStore.set({ audio });\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaPositionalAudio],\n  exports: [NgtSobaPositionalAudio, NgtAudioControllerModule],\n  imports: [NgtPositionalAudioModule, CommonModule],\n})\nexport class NgtSobaPositionalAudioModule {}\n","import {\n  EnhancedRxState,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtAnimationFrameStore,\n  NgtLoopService,\n  NgtObject3dInputsController,\n  NgtStore,\n} from '@angular-three/core';\nimport { Inject, Injectable, NgZone } from '@angular/core';\nimport { selectSlice } from '@rx-angular/state';\nimport { combineLatest, filter, map } from 'rxjs';\nimport * as THREE from 'three';\n\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\nconst dummy = new THREE.Object3D();\nconst matrix = new THREE.Matrix4();\nconst [q1, q2] = [new THREE.Quaternion(), new THREE.Quaternion()];\nconst target = new THREE.Vector3();\nconst targetPosition = new THREE.Vector3();\n\ntype ControlsProto = { update(): void; target: THREE.Vector3 };\n\nexport interface NgtSobaGizmoHelperState {\n  alignment: 'top-left' | 'top-right' | 'bottom-right' | 'bottom-left';\n  margin: [number, number];\n  renderPriority: number;\n  virtualScene: THREE.Scene;\n  virtualCamera: THREE.Camera;\n  gizmo: THREE.Group;\n  raycast: THREE.Object3D['raycast'];\n  objectInputsController: NgtObject3dInputsController;\n}\n\n@Injectable()\nexport class NgtSobaGizmoHelperStore extends EnhancedRxState<\n  NgtSobaGizmoHelperState,\n  { init: void }\n> {\n  #animating = false;\n  #focusPoint = new THREE.Vector3();\n  #radius = 0;\n\n  actions = this.create();\n\n  readonly gizmoProps$ = combineLatest([\n    this.select(selectSlice(['margin', 'alignment', 'objectInputsController'])),\n    this.store.select('size'),\n  ]).pipe(\n    map(\n      ([\n        {\n          alignment,\n          margin: [marginX, marginY],\n          objectInputsController,\n        },\n        size,\n      ]) => {\n        const x = alignment.endsWith('-left')\n          ? -size.width / 2 + marginX\n          : size.width / 2 - marginX;\n        const y = alignment.startsWith('top-')\n          ? size.height / 2 - marginY\n          : -size.height / 2 + marginY;\n\n        objectInputsController.position = [x, y, 0];\n        return {\n          objectInputsController,\n          x,\n          y,\n        };\n      }\n    )\n  );\n\n  #ready$ = combineLatest([\n    this.actions.init$,\n    this.store.select('ready').pipe(filter((ready) => ready)),\n  ]);\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    objectInputsController: NgtObject3dInputsController,\n    animationFrameStore: NgtAnimationFrameStore,\n    ngZone: NgZone,\n    private store: NgtStore,\n    private loopService: NgtLoopService\n  ) {\n    super();\n\n    const virtualScene = new THREE.Scene();\n    objectInputsController.appendTo = virtualScene;\n\n    this.set({\n      alignment: 'bottom-right',\n      margin: [80, 80],\n      renderPriority: 0,\n      virtualScene,\n      objectInputsController,\n    });\n\n    this.holdEffect(this.#ready$, () => {\n      return ngZone.runOutsideAngular(() => {\n        let mainSceneBackground: THREE.Scene['background'];\n        const scene = this.store.get('scene');\n        const virtualScene = this.get('virtualScene');\n\n        if (scene.background) {\n          mainSceneBackground = scene.background;\n          scene.background = null;\n          virtualScene.background = mainSceneBackground;\n        }\n\n        return () => {\n          if (mainSceneBackground) {\n            scene.background = mainSceneBackground;\n          }\n        };\n      });\n    });\n\n    this.holdEffect(this.#ready$, () => {\n      return ngZone.runOutsideAngular(() => {\n        const priority = this.get('renderPriority');\n        const renderer = this.store.get('renderer');\n\n        const animationUuid = animationFrameStore.register({\n          callback: ({ delta }) => {\n            const { virtualScene, virtualCamera, gizmo } = this.get();\n            if (virtualCamera && gizmo) {\n              this.#animateStep(delta);\n              this.#beforeRender();\n              renderer.autoClear = false;\n              renderer.clearDepth();\n              renderer.render(virtualScene, virtualCamera);\n            }\n          },\n          priority,\n        });\n\n        return () => {\n          animationFrameStore.actions.unsubscriberUuid(animationUuid);\n        };\n      });\n    });\n\n    this.connect(\n      'raycast',\n      this.select('virtualCamera'),\n      (_, virtualCamera) => {\n        const mouse = this.store.get('mouse');\n        const raycaster = new THREE.Raycaster();\n\n        return function (this: THREE.Object3D, _, intersects) {\n          raycaster.setFromCamera(mouse, virtualCamera);\n          const rc = this.constructor.prototype.raycast.bind(this);\n          if (rc) {\n            rc(raycaster, intersects);\n          }\n        };\n      }\n    );\n  }\n\n  tweenCamera(direction: THREE.Vector3) {\n    const { controls: defaultControls, camera: mainCamera } = this.store.get();\n    this.#animating = true;\n\n    if (defaultControls) {\n      this.#focusPoint = (defaultControls as unknown as ControlsProto).target;\n    }\n    this.#radius = mainCamera.position.distanceTo(target);\n\n    // Rotate from current camera orientation\n    q1.copy(mainCamera.quaternion);\n\n    // To new current camera orientation\n    targetPosition.copy(direction).multiplyScalar(this.#radius).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n\n    this.loopService.invalidate();\n  }\n\n  #animateStep(delta: number) {\n    if (!this.#animating) return;\n\n    if (q1.angleTo(q2) < 0.01) {\n      this.#animating = false;\n      return;\n    }\n\n    const { controls: defaultControls, camera: mainCamera } = this.store.get();\n    const step = delta * turnRate;\n\n    // animate position by doing a lerp and then scaling the position on the unit sphere\n    q1.rotateTowards(q2, step);\n\n    // animate orientation\n    mainCamera.position\n      .set(0, 0, 1)\n      .applyQuaternion(q1)\n      .multiplyScalar(this.#radius)\n      .add(this.#focusPoint);\n    mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n    mainCamera.quaternion.copy(q1);\n\n    if (defaultControls) {\n      (defaultControls as unknown as ControlsProto).update();\n    }\n\n    this.loopService.invalidate();\n  }\n\n  #beforeRender() {\n    const mainCamera = this.store.get('camera');\n    const gizmo = this.get('gizmo');\n\n    // sync gizmo with main camera orientation\n    matrix.copy(mainCamera.matrix).invert();\n    gizmo?.quaternion.setFromRotationMatrix(matrix);\n  }\n}\n","import {\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NgtCoreModule,\n  NgtSobaExtender,\n} from '@angular-three/core';\nimport { NgtGroupModule } from '@angular-three/core/group';\nimport { NgtSobaOrthographicCameraModule } from '@angular-three/soba/cameras';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgModule,\n  OnInit,\n} from '@angular/core';\nimport * as THREE from 'three';\nimport { NgtSobaGizmoHelperStore } from './gizmo-helper.store';\n\n@Component({\n  selector: 'ngt-soba-gizmo-helper',\n  template: `\n    <ng-container *ngIf=\"virtualScene$ | async as virtualScene\">\n      <ngt-group\n        *ngIf=\"gizmoProps$ | async as gizmoProps\"\n        (ready)=\"onGizmoReady($event)\"\n        [appendTo]=\"virtualScene\"\n        [position]=\"[gizmoProps.x, gizmoProps.y, 0]\"\n        [object3dInputsController]=\"gizmoProps.objectInputsController\"\n      ></ngt-group>\n      <ngt-soba-orthographic-camera\n        [appendTo]=\"virtualScene\"\n        [makeDefault]=\"false\"\n        [position]=\"[0, 0, 200]\"\n        (ready)=\"onCameraReady($event)\"\n      ></ngt-soba-orthographic-camera>\n      <ng-content></ng-content>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    NgtSobaGizmoHelperStore,\n    {\n      provide: NgtSobaExtender,\n      useExisting: NgtSobaGizmoHelper,\n    },\n  ],\n})\nexport class NgtSobaGizmoHelper\n  extends NgtSobaExtender<THREE.Group>\n  implements OnInit\n{\n  @Input() set alignment(\n    alignment: 'top-left' | 'top-right' | 'bottom-right' | 'bottom-left'\n  ) {\n    this.sobaGizmoHelperStore.set({ alignment });\n  }\n\n  @Input() set margin(margin: [number, number]) {\n    this.sobaGizmoHelperStore.set({ margin });\n  }\n\n  @Input() set renderPriority(renderPriority: number) {\n    this.sobaGizmoHelperStore.set({ renderPriority });\n  }\n\n  readonly gizmoProps$ = this.sobaGizmoHelperStore.gizmoProps$;\n  readonly virtualScene$ = this.sobaGizmoHelperStore.select('virtualScene');\n\n  constructor(private sobaGizmoHelperStore: NgtSobaGizmoHelperStore) {\n    super();\n  }\n\n  ngOnInit() {\n    this.sobaGizmoHelperStore.actions.init();\n  }\n\n  onCameraReady(camera: THREE.OrthographicCamera) {\n    this.sobaGizmoHelperStore.set({ virtualCamera: camera });\n  }\n\n  onGizmoReady(gizmo: THREE.Group) {\n    this.sobaGizmoHelperStore.set({ gizmo });\n    this.object = gizmo;\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaGizmoHelper],\n  exports: [NgtSobaGizmoHelper],\n  imports: [\n    NgtCoreModule,\n    NgtGroupModule,\n    NgtSobaOrthographicCameraModule,\n    CommonModule,\n  ],\n})\nexport class NgtSobaGizmoHelperModule {}\n","import {\n  Controller,\n  createControllerProviderFactory,\n  EnhancedRxState,\n  NgtEvent,\n  NgtRepeatModule,\n  NgtSobaExtender,\n  NgtStore,\n} from '@angular-three/core';\nimport { NgtGroupModule } from '@angular-three/core/group';\nimport {\n  NgtAmbientLightModule,\n  NgtPointLightModule,\n} from '@angular-three/core/lights';\nimport {\n  NgtMeshBasicMaterialModule,\n  NgtMeshLambertMaterialModule,\n} from '@angular-three/core/materials';\nimport { NgtSobaBoxModule } from '@angular-three/soba/shapes';\nimport { CommonModule, DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgModule,\n  NgZone,\n  Output,\n} from '@angular/core';\nimport { selectSlice } from '@rx-angular/state';\nimport { combineLatest, map, Observable, startWith } from 'rxjs';\nimport * as THREE from 'three';\nimport { NgtSobaGizmoHelperStore } from './gizmo-helper.store';\n\ntype XYZ = [number, number, number];\ntype GenericProps = {\n  font: string;\n  opacity: number;\n  color: string;\n  hoverColor: string;\n  textColor: string;\n  strokeColor: string;\n  faces: string[];\n};\n\nconst colors = { bg: '#f0f0f0', hover: '#999', text: 'black', stroke: 'black' };\nconst defaultFaces = ['Right', 'Left', 'Top', 'Bottom', 'Front', 'Back'];\nconst makePositionVector = (xyz: number[]) =>\n  new THREE.Vector3(...xyz).multiplyScalar(0.38);\n\nconst corners: THREE.Vector3[] = [\n  [1, 1, 1],\n  [1, 1, -1],\n  [1, -1, 1],\n  [1, -1, -1],\n  [-1, 1, 1],\n  [-1, 1, -1],\n  [-1, -1, 1],\n  [-1, -1, -1],\n].map(makePositionVector);\n\nconst cornerDimensions: XYZ = [0.25, 0.25, 0.25];\n\nconst edges: THREE.Vector3[] = [\n  [1, 1, 0],\n  [1, 0, 1],\n  [1, 0, -1],\n  [1, -1, 0],\n  [0, 1, 1],\n  [0, 1, -1],\n  [0, -1, 1],\n  [0, -1, -1],\n  [-1, 1, 0],\n  [-1, 0, 1],\n  [-1, 0, -1],\n  [-1, -1, 0],\n].map(makePositionVector);\n\nconst edgeDimensions = edges.map(\n  (edge) =>\n    edge\n      .toArray()\n      .map((axis: number): number => (axis == 0 ? 0.5 : 0.25)) as XYZ\n);\n\n@Directive({\n  selector: `\n    ngt-soba-gizmo-viewcube,\n    ngt-soba-gizmo-edgecube,\n    ngt-soba-gizmo-facecube,\n    ngt-soba-gizmo-face-material\n  `,\n  providers: [EnhancedRxState],\n})\nexport class GenericController extends Controller {\n  get props(): string[] {\n    return [\n      'font',\n      'opacity',\n      'color',\n      'hoverColor',\n      'textColor',\n      'strokeColor',\n      'faces',\n      'click',\n    ];\n  }\n\n  get controller(): Controller | undefined {\n    return this.genericController;\n  }\n\n  @Input() genericController?: GenericController;\n\n  @Input() set font(font: string) {\n    this.state.set({ font });\n  }\n\n  @Input() set opacity(opacity: number) {\n    this.state.set({ opacity });\n  }\n\n  @Input() set color(color: string) {\n    this.state.set({ color });\n  }\n\n  @Input() set hoverColor(hoverColor: string) {\n    this.state.set({ hoverColor });\n  }\n\n  @Input() set textColor(textColor: string) {\n    this.state.set({ textColor });\n  }\n\n  @Input() set strokeColor(strokeColor: string) {\n    this.state.set({ strokeColor });\n  }\n\n  @Input() set faces(faces: string[]) {\n    this.state.set({ faces });\n  }\n\n  @Output() click = new EventEmitter<NgtEvent<MouseEvent>>();\n\n  constructor(ngZone: NgZone, private state: EnhancedRxState<GenericProps>) {\n    super(ngZone);\n    this.state.set({\n      font: '20px Inter var, Arial, sans-serif',\n      faces: defaultFaces,\n      color: colors.bg,\n      hoverColor: colors.hover,\n      textColor: colors.text,\n      strokeColor: colors.stroke,\n      opacity: 1,\n    });\n  }\n\n  get rxState(): EnhancedRxState<GenericProps> {\n    return this.genericController?.rxState || this.state;\n  }\n\n  get clickOutput(): EventEmitter<NgtEvent<MouseEvent>> {\n    return this.genericController?.click || this.click;\n  }\n}\n\nexport const [\n  NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER,\n  NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER,\n] = createControllerProviderFactory({\n  watchedControllerTokenName: 'Viewcube Generic Controller',\n  controller: GenericController,\n});\n\n@Component({\n  selector: 'ngt-soba-gizmo-viewcube',\n  template: `\n    <ngt-group\n      *ngIf=\"gizmo$ | async as gizmo\"\n      [appendTo]=\"gizmo\"\n      [scale]=\"[60, 60, 60]\"\n      (ready)=\"object = $event\"\n    >\n      <ngt-soba-gizmo-facecube\n        [genericController]=\"genericController\"\n      ></ngt-soba-gizmo-facecube>\n\n      <ngt-soba-gizmo-edgecube\n        *ngFor=\"let edge of edges; index as i\"\n        [position]=\"edge\"\n        [dimensions]=\"edgeDimensions[i]\"\n        [genericController]=\"genericController\"\n      ></ngt-soba-gizmo-edgecube>\n\n      <ngt-soba-gizmo-edgecube\n        *ngFor=\"let corner of corners\"\n        [position]=\"corner\"\n        [dimensions]=\"cornerDimensions\"\n        [genericController]=\"genericController\"\n      ></ngt-soba-gizmo-edgecube>\n\n      <ngt-ambient-light [intensity]=\"0.5\"></ngt-ambient-light>\n      <ngt-point-light\n        [intensity]=\"0.5\"\n        [position]=\"[10, 10, 10]\"\n      ></ngt-point-light>\n    </ngt-group>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER,\n    {\n      provide: NgtSobaExtender,\n      useExisting: NgtSobaGizmoViewcube,\n    },\n  ],\n})\nexport class NgtSobaGizmoViewcube extends NgtSobaExtender<THREE.Group> {\n  corners = corners;\n  edges = edges;\n  cornerDimensions = cornerDimensions;\n  edgeDimensions = edgeDimensions;\n\n  readonly gizmo$ = this.gizmoHelperStore.select('gizmo');\n\n  constructor(\n    @Inject(NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER)\n    public genericController: GenericController,\n    private gizmoHelperStore: NgtSobaGizmoHelperStore\n  ) {\n    super();\n  }\n}\n\n@Component({\n  selector: 'ngt-soba-gizmo-edgecube[dimensions][position]',\n  template: `\n    <ng-container *ngIf=\"vm$ | async as vm\">\n      <ngt-soba-box\n        [args]=\"vm.dimensions\"\n        [raycast]=\"raycast$ | async\"\n        [scale]=\"[1.01, 1.01, 1.01]\"\n        [position]=\"vm.position\"\n        (pointerover)=\"$event.stopPropagation(); hover = true\"\n        (pointerout)=\"$event.stopPropagation(); hover = false\"\n        (click)=\"onEdgeClick($event)\"\n      >\n        <ngt-mesh-basic-material\n          [parameters]=\"{\n            color: hover ? vm.hoverColor : 'white',\n            transparent: true,\n            opacity: 0.6,\n            visible: hover\n          }\"\n        ></ngt-mesh-basic-material>\n      </ngt-soba-box>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER,\n    EnhancedRxState,\n    {\n      provide: NgtSobaExtender,\n      useExisting: NgtSobaGizmoEdgecube,\n    },\n  ],\n})\nexport class NgtSobaGizmoEdgecube extends NgtSobaExtender<THREE.Mesh> {\n  @Input() set dimensions(dimensions: XYZ) {\n    this.state.set({ dimensions });\n  }\n\n  @Input() set position(position: THREE.Vector3) {\n    this.state.set({ position });\n  }\n\n  hover = false;\n  readonly raycast$ = this.gizmoHelperStore.select('raycast');\n\n  readonly vm$: Observable<{\n    dimensions: XYZ;\n    position: THREE.Vector3;\n    hoverColor: string;\n  }> = combineLatest([\n    this.state.select(selectSlice(['dimensions', 'position'])),\n    this.genericController.rxState\n      .select('hoverColor')\n      .pipe(startWith(this.genericController.rxState.get('hoverColor'))),\n  ]).pipe(\n    map(([{ dimensions, position }, hoverColor]) => ({\n      dimensions,\n      position,\n      hoverColor,\n    }))\n  );\n\n  constructor(\n    @Inject(NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER)\n    public genericController: GenericController,\n    private gizmoHelperStore: NgtSobaGizmoHelperStore,\n    private state: EnhancedRxState<{ dimensions: XYZ; position: THREE.Vector3 }>\n  ) {\n    super();\n  }\n\n  onEdgeClick($event: NgtEvent<MouseEvent>) {\n    if (this.genericController.clickOutput.observed) {\n      this.genericController.clickOutput.emit($event);\n    } else {\n      $event.stopPropagation();\n      this.gizmoHelperStore.tweenCamera(this.state.get('position'));\n    }\n  }\n}\n\n@Component({\n  selector: 'ngt-soba-gizmo-facecube',\n  template: `\n    <ngt-soba-box\n      [isMaterialArray]=\"true\"\n      [raycast]=\"raycast$ | async\"\n      (ready)=\"object = $event\"\n      (click)=\"onFaceClick($event)\"\n      (pointermove)=\"onFacePointerMove($event)\"\n      (pointerout)=\"onFacePointerOut($event)\"\n    >\n      <ngt-soba-gizmo-face-material\n        *repeat=\"let index of 6\"\n        [hover]=\"hover === index\"\n        [index]=\"index\"\n        [genericController]=\"genericController\"\n      ></ngt-soba-gizmo-face-material>\n    </ngt-soba-box>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER,\n    {\n      provide: NgtSobaExtender,\n      useExisting: NgtSobaGizmoFacecube,\n    },\n  ],\n})\nexport class NgtSobaGizmoFacecube extends NgtSobaExtender<THREE.Mesh> {\n  hover: number | null = null;\n\n  readonly raycast$ = this.gizmoHelperStore.select('raycast');\n\n  constructor(\n    @Inject(NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER)\n    public genericController: GenericController,\n    private gizmoHelperStore: NgtSobaGizmoHelperStore\n  ) {\n    super();\n  }\n\n  onFacePointerMove($event: NgtEvent<PointerEvent>) {\n    $event.stopPropagation();\n    this.hover = Math.floor($event.faceIndex! / 2);\n  }\n\n  onFacePointerOut($event: NgtEvent<PointerEvent>) {\n    $event.stopPropagation();\n    this.hover = null;\n  }\n\n  onFaceClick($event: NgtEvent<MouseEvent>) {\n    if (this.genericController.clickOutput.observed) {\n      this.genericController.clickOutput.emit($event);\n    } else {\n      $event.stopPropagation();\n      this.gizmoHelperStore.tweenCamera($event.face!.normal);\n    }\n  }\n}\n\n@Component({\n  selector: 'ngt-soba-gizmo-face-material[hover][index]',\n  template: `\n    <ngt-mesh-lambert-material\n      *ngIf=\"parameter$ | async as parameter\"\n      [parameters]=\"{\n        map: parameter.texture,\n        color: parameter.color,\n        opacity: parameter.opacity,\n        transparent: true\n      }\"\n    ></ngt-mesh-lambert-material>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [NGT_VIEWCUBE_GENERIC_CONTROLLER_PROVIDER, EnhancedRxState],\n})\nexport class NgtSobaGizmoFaceMaterial {\n  @Input() set hover(hover: boolean) {\n    this.state.set({ hover });\n  }\n\n  @Input() set index(index: number) {\n    this.state.set({ index });\n  }\n\n  readonly parameter$ = combineLatest([\n    this.state.select(selectSlice(['hover', 'index', 'texture'])),\n    this.genericController.rxState.select(\n      selectSlice(['hoverColor', 'opacity']),\n      startWith({\n        hoverColor: this.genericController.rxState.get('hoverColor'),\n        opacity: this.genericController.rxState.get('opacity'),\n      })\n    ),\n    this.store.select('renderer'),\n  ]).pipe(\n    map(([{ texture, hover }, { hoverColor, opacity }, renderer]) => {\n      texture.anisotropy = renderer.capabilities.getMaxAnisotropy() || 1;\n      return {\n        texture,\n        color: hover ? hoverColor : 'white',\n        opacity: opacity,\n      };\n    })\n  );\n\n  readonly #change$ = combineLatest([\n    this.state.select('index'),\n    this.genericController.rxState.select(\n      selectSlice(['font', 'color', 'textColor', 'strokeColor'])\n    ),\n  ]).pipe(\n    map(([index, { font, color, textColor, strokeColor }]) => ({\n      index,\n      font,\n      color,\n      textColor,\n      strokeColor,\n    }))\n  );\n\n  constructor(\n    @Inject(NGT_VIEWCUBE_GENERIC_WATCHED_CONTROLLER)\n    public genericController: GenericController,\n    private state: EnhancedRxState<{\n      hover: boolean;\n      index: number;\n      texture: THREE.CanvasTexture;\n    }>,\n    private store: NgtStore,\n    @Inject(DOCUMENT) document: Document\n  ) {\n    this.state.connect(\n      'texture',\n      this.#change$,\n      (_, { index, font, color, textColor, strokeColor }) => {\n        const faces = this.genericController.rxState.get('faces');\n        const canvas = document.createElement('canvas');\n        canvas.width = 128;\n        canvas.height = 128;\n\n        const context = canvas.getContext('2d')!;\n        context.fillStyle = color;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.strokeStyle = strokeColor;\n        context.strokeRect(0, 0, canvas.width, canvas.height);\n        context.font = font;\n        context.textAlign = 'center';\n        context.fillStyle = textColor;\n        context.fillText(faces[index].toUpperCase(), 64, 76);\n\n        return new THREE.CanvasTexture(canvas);\n      }\n    );\n  }\n}\n\n@NgModule({\n  declarations: [\n    GenericController,\n    NgtSobaGizmoViewcube,\n    NgtSobaGizmoEdgecube,\n    NgtSobaGizmoFacecube,\n    NgtSobaGizmoFaceMaterial,\n  ],\n  exports: [NgtSobaGizmoViewcube, GenericController],\n  imports: [\n    NgtGroupModule,\n    NgtAmbientLightModule,\n    NgtPointLightModule,\n    NgtMeshLambertMaterialModule,\n    CommonModule,\n    NgtRepeatModule,\n    NgtMeshBasicMaterialModule,\n    NgtSobaBoxModule,\n  ],\n})\nexport class NgtSobaGizmoViewcubeModule {}\n","import {\n  EnhancedRxState,\n  NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n  NGT_OBJECT_INPUTS_WATCHED_CONTROLLER,\n  NgtEvent,\n  NgtMathPipeModule,\n  NgtObject3dInputsController,\n  NgtSobaExtender,\n  NgtStore,\n} from '@angular-three/core';\nimport { NgtGroupModule } from '@angular-three/core/group';\nimport {\n  NgtAmbientLightModule,\n  NgtPointLightModule,\n} from '@angular-three/core/lights';\nimport {\n  NgtMeshBasicMaterialModule,\n  NgtSpriteMaterialModule,\n} from '@angular-three/core/materials';\nimport { NgtSpriteModule } from '@angular-three/core/sprites';\nimport { NgtSobaBoxModule } from '@angular-three/soba/shapes';\nimport { CommonModule, DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  NgModule,\n  Output,\n} from '@angular/core';\nimport { selectSlice } from '@rx-angular/state';\nimport { combineLatest, map } from 'rxjs';\nimport * as THREE from 'three';\nimport { NgtSobaGizmoHelperStore } from './gizmo-helper.store';\n\n@Component({\n  selector: 'ngt-soba-gizmo-viewport',\n  template: `\n    <ngt-group\n      *ngIf=\"gizmo$ | async as gizmo\"\n      (ready)=\"object = $event; object.scale.set(40, 40, 40)\"\n      [appendTo]=\"gizmo\"\n      [object3dInputsController]=\"objectInputsController\"\n    >\n      <ngt-soba-gizmo-axis\n        [color]=\"axisColors[0]\"\n        [rotation]=\"[0, 0, 0]\"\n        [scale]=\"axisScale\"\n      ></ngt-soba-gizmo-axis>\n      <ngt-soba-gizmo-axis\n        [color]=\"axisColors[1]\"\n        [rotation]=\"[0, 0, 0.5 | mathConst: 'PI']\"\n        [scale]=\"axisScale\"\n      ></ngt-soba-gizmo-axis>\n      <ngt-soba-gizmo-axis\n        [color]=\"axisColors[2]\"\n        [rotation]=\"[0, -0.5 | mathConst: 'PI', 0]\"\n        [scale]=\"axisScale\"\n      ></ngt-soba-gizmo-axis>\n      <ng-container *ngIf=\"!hideAxisHeads\">\n        <ng-container *ngIf=\"{ raycast: raycast$ | async } as vm\">\n          <ngt-soba-gizmo-axis-head\n            [arcStyle]=\"axisColors[0]\"\n            [position]=\"[1, 0, 0]\"\n            [label]=\"labels[0]\"\n            [font]=\"font\"\n            [disabled]=\"disabled\"\n            [labelColor]=\"labelColor\"\n            [raycast]=\"vm.raycast\"\n            [axisHeadScale]=\"axisHeadScale\"\n          ></ngt-soba-gizmo-axis-head>\n          <ngt-soba-gizmo-axis-head\n            [arcStyle]=\"axisColors[1]\"\n            [position]=\"[0, 1, 0]\"\n            [label]=\"labels[1]\"\n            [font]=\"font\"\n            [disabled]=\"disabled\"\n            [labelColor]=\"labelColor\"\n            [raycast]=\"vm.raycast\"\n            [axisHeadScale]=\"axisHeadScale\"\n          ></ngt-soba-gizmo-axis-head>\n          <ngt-soba-gizmo-axis-head\n            [arcStyle]=\"axisColors[2]\"\n            [position]=\"[0, 0, 1]\"\n            [label]=\"labels[2]\"\n            [font]=\"font\"\n            [disabled]=\"disabled\"\n            [labelColor]=\"labelColor\"\n            [raycast]=\"vm.raycast\"\n            [axisHeadScale]=\"axisHeadScale\"\n          ></ngt-soba-gizmo-axis-head>\n\n          <ng-container *ngIf=\"!hideNegativeAxes\">\n            <ngt-soba-gizmo-axis-head\n              [arcStyle]=\"axisColors[0]\"\n              [position]=\"[-1, 0, 0]\"\n              [font]=\"font\"\n              [disabled]=\"disabled\"\n              [labelColor]=\"labelColor\"\n              [raycast]=\"vm.raycast\"\n              [axisHeadScale]=\"axisHeadScale\"\n            ></ngt-soba-gizmo-axis-head>\n            <ngt-soba-gizmo-axis-head\n              [arcStyle]=\"axisColors[1]\"\n              [position]=\"[0, -1, 0]\"\n              [font]=\"font\"\n              [disabled]=\"disabled\"\n              [labelColor]=\"labelColor\"\n              [raycast]=\"vm.raycast\"\n              [axisHeadScale]=\"axisHeadScale\"\n            ></ngt-soba-gizmo-axis-head>\n            <ngt-soba-gizmo-axis-head\n              [arcStyle]=\"axisColors[2]\"\n              [position]=\"[0, 0, -1]\"\n              [font]=\"font\"\n              [disabled]=\"disabled\"\n              [labelColor]=\"labelColor\"\n              [raycast]=\"vm.raycast\"\n              [axisHeadScale]=\"axisHeadScale\"\n            ></ngt-soba-gizmo-axis-head>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n      <ngt-ambient-light [intensity]=\"0.5\"></ngt-ambient-light>\n      <ngt-point-light\n        [intensity]=\"0.5\"\n        [position]=\"[10, 10, 10]\"\n      ></ngt-point-light>\n    </ngt-group>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    { provide: NgtSobaExtender, useExisting: NgtSobaGizmoViewport },\n  ],\n})\nexport class NgtSobaGizmoViewport extends NgtSobaExtender<THREE.Group> {\n  @Input() axisColors: [string, string, string] = [\n    '#ff3653',\n    '#0adb50',\n    '#2c8fdf',\n  ];\n  @Input() labels: [string, string, string] = ['X', 'Y', 'Z'];\n  @Input() labelColor = '#000';\n  @Input() font = '18px Inter var, Arial, sans-serif';\n  @Input() axisHeadScale = 1;\n  @Input() hideNegativeAxes = false;\n  @Input() hideAxisHeads = false;\n  @Input() disabled = false;\n  @Input() axisScale?: [number, number, number];\n\n  @Output() click = new EventEmitter<NgtEvent<PointerEvent>>();\n\n  readonly gizmo$ = this.gizmoHelperStore.select('gizmo');\n  readonly raycast$ = this.gizmoHelperStore.select('raycast');\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    private gizmoHelperStore: NgtSobaGizmoHelperStore\n  ) {\n    super();\n  }\n}\n\n@Component({\n  selector: 'ngt-soba-gizmo-axis[color][rotation]',\n  template: `\n    <ngt-group (ready)=\"object = $event\" [rotation]=\"rotation\">\n      <ngt-soba-box [args]=\"scale\" [position]=\"[0.4, 0, 0]\">\n        <ngt-mesh-basic-material\n          [parameters]=\"{ color, toneMapped: false }\"\n        ></ngt-mesh-basic-material>\n      </ngt-soba-box>\n    </ngt-group>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: NgtSobaExtender, useExisting: NgtSobaGizmoAxis }],\n})\nexport class NgtSobaGizmoAxis extends NgtSobaExtender<THREE.Group> {\n  @Input() color!: string;\n  @Input() rotation!: [number, number, number];\n\n  @Input() set scale(v: [number, number, number] | undefined) {\n    this.#scale = v || this.#scale;\n  }\n\n  get scale() {\n    return this.#scale;\n  }\n\n  #scale: [number, number, number] = [0.8, 0.05, 0.05];\n}\n\n@Component({\n  selector: 'ngt-soba-gizmo-axis-head',\n  template: `\n    <ng-container *ngIf=\"vm$ | async as vm\">\n      <ngt-sprite-material\n        #spriteMaterial=\"ngtSpriteMaterial\"\n        [parameters]=\"{\n          map: vm.texture,\n          opacity: vm.opacity,\n          toneMapped: false,\n          alphaTest: 0.3\n        }\"\n      ></ngt-sprite-material>\n      <ngt-sprite\n        (ready)=\"object = $event\"\n        (pointerover)=\"onAxisHeadPointerOver($event)\"\n        (pointerout)=\"onAxisHeadPointerOut($event)\"\n        (pointerdown)=\"onAxisHeadPointerDown($event)\"\n        [scale]=\"vm.scale\"\n        [material]=\"spriteMaterial.material\"\n        [object3dInputsController]=\"objectInputsController\"\n      ></ngt-sprite>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NGT_OBJECT_INPUTS_CONTROLLER_PROVIDER,\n    EnhancedRxState,\n    { provide: NgtSobaExtender, useExisting: NgtSobaGizmoAxisHead },\n  ],\n})\nexport class NgtSobaGizmoAxisHead extends NgtSobaExtender<THREE.Sprite> {\n  @Input() set arcStyle(arcStyle: string) {\n    this.state.set({ arcStyle });\n  }\n\n  @Input() set label(label: string) {\n    this.state.set({ label });\n  }\n\n  @Input() set labelColor(labelColor: string) {\n    this.state.set({ labelColor });\n  }\n\n  @Input() set axisHeadScale(axisHeadScale: number) {\n    this.state.set({ axisHeadScale });\n  }\n\n  @Input() set disabled(disabled: boolean) {\n    this.state.set({ disabled: disabled || false });\n  }\n\n  @Input() set font(font: string) {\n    this.state.set({ font });\n  }\n\n  readonly #changes$ = this.state.select(\n    selectSlice(['arcStyle', 'label', 'labelColor', 'font'])\n  );\n\n  readonly vm$ = combineLatest([\n    this.state.select(\n      selectSlice(['active', 'label', 'axisHeadScale', 'texture'])\n    ),\n    this.store.select('renderer'),\n  ]).pipe(\n    map(([{ texture, label, active, axisHeadScale }, renderer]) => {\n      texture.anisotropy = renderer.capabilities.getMaxAnisotropy() || 1;\n      return {\n        texture,\n        scale: (label ? 1 : 0.75) * (active ? 1.2 : 1) * axisHeadScale,\n        opacity: label ? 1 : 0.75,\n      };\n    })\n  );\n\n  constructor(\n    @Inject(NGT_OBJECT_INPUTS_WATCHED_CONTROLLER)\n    public objectInputsController: NgtObject3dInputsController,\n    @Inject(DOCUMENT) document: Document,\n    private gizmoViewport: NgtSobaGizmoViewport,\n    private gizmoHelperStore: NgtSobaGizmoHelperStore,\n    private store: NgtStore,\n    private state: EnhancedRxState<{\n      arcStyle: string;\n      labelColor: string;\n      axisHeadScale: number;\n      disabled: boolean;\n      font: string;\n      texture: THREE.CanvasTexture;\n      active: boolean;\n      label: string;\n    }>\n  ) {\n    super();\n    this.state.set({\n      label: '',\n      active: false,\n      disabled: false,\n    });\n\n    this.state.connect(\n      'texture',\n      this.#changes$,\n      (_, { label, labelColor, arcStyle, font }) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = 64;\n        canvas.height = 64;\n\n        const context = canvas.getContext('2d')!;\n        context.beginPath();\n        context.arc(32, 32, 16, 0, 2 * Math.PI);\n        context.closePath();\n        context.fillStyle = arcStyle;\n        context.fill();\n\n        if (label) {\n          context.font = font;\n          context.textAlign = 'center';\n          context.fillStyle = labelColor;\n          context.fillText(label, 32, 41);\n        }\n\n        return new THREE.CanvasTexture(canvas);\n      }\n    );\n  }\n\n  onAxisHeadPointerOver($event: NgtEvent<PointerEvent>) {\n    if (!this.state.get('disabled')) {\n      $event.stopPropagation();\n      this.state.set({ active: true });\n    }\n  }\n\n  onAxisHeadPointerOut($event: NgtEvent<PointerEvent>) {\n    if (!this.state.get('disabled')) {\n      if (this.gizmoViewport.click.observed) {\n        this.gizmoViewport.click.emit($event);\n      } else {\n        $event.stopPropagation();\n        this.state.set({ active: false });\n      }\n    }\n  }\n\n  onAxisHeadPointerDown($event: NgtEvent<PointerEvent>) {\n    if (!this.state.get('disabled')) {\n      $event.stopPropagation();\n      this.gizmoHelperStore.tweenCamera($event.object.position);\n    }\n  }\n}\n\n@NgModule({\n  declarations: [NgtSobaGizmoViewport, NgtSobaGizmoAxis, NgtSobaGizmoAxisHead],\n  exports: [NgtSobaGizmoViewport],\n  imports: [\n    CommonModule,\n    NgtGroupModule,\n    NgtSobaBoxModule,\n    NgtMeshBasicMaterialModule,\n    NgtSpriteModule,\n    NgtSpriteMaterialModule,\n    NgtMathPipeModule,\n    NgtAmbientLightModule,\n    NgtPointLightModule,\n  ],\n})\nexport class NgtSobaGizmoViewportModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["TextMeshImpl"],"mappings":"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"}