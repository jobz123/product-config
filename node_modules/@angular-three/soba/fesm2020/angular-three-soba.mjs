import * as THREE from 'three';

function shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {
    return class extends THREE.ShaderMaterial {
        constructor() {
            const entries = Object.entries(uniforms);
            // Create unforms and shaders
            super({
                uniforms: entries.reduce((acc, [name, value]) => {
                    const uniform = THREE.UniformsUtils.clone({ [name]: { value } });
                    return {
                        ...acc,
                        ...uniform,
                    };
                }, {}),
                vertexShader,
                fragmentShader,
            });
            // Create getter/setters
            entries.forEach(([name]) => Object.defineProperty(this, name, {
                get: () => this.uniforms[name].value,
                set: (v) => (this.uniforms[name].value = v),
            }));
            if (onInit)
                onInit(this);
        }
    };
}

const presetsObj = {
    sunset: 'venice_sunset_1k.hdr',
    dawn: 'kiara_1_dawn_1k.hdr',
    night: 'dikhololo_night_1k.hdr',
    warehouse: 'empty_warehouse_01_1k.hdr',
    forest: 'forest_slope_1k.hdr',
    apartment: 'lebombo_1k.hdr',
    studio: 'studio_small_03_1k.hdr',
    city: 'potsdamer_platz_1k.hdr',
    park: 'rooitou_park_1k.hdr',
    lobby: 'st_fagans_interior_1k.hdr',
};

/**
 * Generated bundle index. Do not edit.
 */

export { presetsObj, shaderMaterial };
//# sourceMappingURL=angular-three-soba.mjs.map
