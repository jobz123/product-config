{"version":3,"file":"valuesComparer.util.js","sourceRoot":"","sources":["../../../../../../../libs/state/src/lib/transformation-helpers/_internals/valuesComparer.util.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAErC,MAAM,UAAU,cAAc,CAC5B,QAAW,EACX,QAAW,EACX,OAA2B;IAE3B,MAAM,cAAc,GAAG,CAAC,CAAI,EAAE,CAAI,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;IAE/C,IAAI,OAAO,CAAI,OAAO,CAAC,EAAE;QACvB,OAAO,QAAQ,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,OAAO,CAAC,CAAC;KAChD;IAED,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC1B,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAI,CAAC,CAAC,CAAC,CAAC;QAC3D,OAAO,CAAC,CAAC,aAAa,CAAC,MAAM;YAC3B,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,cAAc,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;KACxC;IAED,OAAO,CAAE,OAAwB,IAAI,cAAc,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAC3E,CAAC","sourcesContent":["import { CompareFn } from '../../rxjs/interfaces';\r\nimport { ComparableData } from '../interfaces/comparable-data-type';\r\nimport { isKeyOf } from '../../core';\r\n\r\nexport function valuesComparer<T>(\r\n  original: T,\r\n  incoming: T,\r\n  compare?: ComparableData<T>\r\n): boolean {\r\n  const defaultCompare = (a: T, b: T) => a === b;\r\n\r\n  if (isKeyOf<T>(compare)) {\r\n    return original[compare] === incoming[compare];\r\n  }\r\n\r\n  if (Array.isArray(compare)) {\r\n    const sanitizedKeys = compare.filter((k) => isKeyOf<T>(k));\r\n    return !!sanitizedKeys.length\r\n      ? sanitizedKeys.every((k) => original[k] === incoming[k])\r\n      : defaultCompare(original, incoming);\r\n  }\r\n\r\n  return ((compare as CompareFn<T>) || defaultCompare)(original, incoming);\r\n}\r\n"]}