{"version":3,"file":"only-keys-of-specific-type.js","sourceRoot":"","sources":["../../../../../../../libs/state/src/lib/transformation-helpers/interfaces/only-keys-of-specific-type.ts"],"names":[],"mappings":"","sourcesContent":["/**\r\n * @description\r\n * Allows to pass only keys which value is of specific type.\r\n *\r\n * @example\r\n *\r\n * interface Creature {\r\n *  id: number;\r\n *  type: string;\r\n *  name: string;\r\n * }\r\n *\r\n * const cat = {id: 1, type: 'cat', name: 'Fluffy'};\r\n *\r\n * function updateCreature<T>(creature: T, key: OnlyKeysOfSpecificType<T, string>, value: string) {\r\n *  // update logic\r\n * }\r\n *\r\n * // Valid key\r\n * updateCreature(cat, 'name', 'Luna');\r\n *\r\n * // Invalid key\r\n * updateCreature(cat, 'id', 3);\r\n *\r\n * @docsPage OnlyKeysOfSpecificType\r\n * @docsCategory interfaces\r\n */\r\nexport type OnlyKeysOfSpecificType<T, S> = {\r\n  [Key in keyof T]: S extends T[Key] ? Key : never;\r\n}[keyof T];\r\n"]}