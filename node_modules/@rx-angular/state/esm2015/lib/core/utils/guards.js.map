{"version":3,"file":"guards.js","sourceRoot":"","sources":["../../../../../../../libs/state/src/lib/core/utils/guards.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,cAAc,CAAI,KAAc;IAC9C,OAAO,CACL,CAAC,CAAC,KAAK;QACP,OAAa,KAAM,CAAC,SAAS,KAAK,UAAU;QAC5C,OAAQ,KAAa,CAAC,IAAI,KAAK,UAAU,CAC1C,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,qBAAqB,CACnC,EAAS;IAET,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;QACtB,OAAO,KAAK,CAAC;KACd;IACD,OAAO,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,CAAC;AACxE,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,EAAS;IAC1C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;QACtB,OAAO,KAAK,CAAC;KACd;IACD,OAAO,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC;AACtE,CAAC;AAED,MAAM,UAAU,eAAe,CAAI,GAAY;IAC7C,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;QACrC,OAAO,KAAK,CAAC;KACd;IACD,OAAO,OAAQ,GAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,UAAU,CAAC;AAC7D,CAAC;AAED,MAAM,UAAU,OAAO,CAAI,CAAU;IACnC,OAAO,CACL,CAAC,CAAC,CAAC;QACH,CAAC,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC,CAC1E,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,GAAY;IACxC,OAAO,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjE,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,GAAY;IACpC,OAAO,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,CAAC;AAC3C,CAAC","sourcesContent":["import { OperatorFunction } from 'rxjs';\r\n\r\nexport function isPromiseGuard<T>(value: unknown): value is Promise<T> {\r\n  return (\r\n    !!value &&\r\n    typeof (<any>value).subscribe !== 'function' &&\r\n    typeof (value as any).then === 'function'\r\n  );\r\n}\r\n\r\nexport function isOperateFnArrayGuard<T, R = T>(\r\n  op: any[]\r\n): op is OperatorFunction<T, R>[] {\r\n  if (!Array.isArray(op)) {\r\n    return false;\r\n  }\r\n  return op.length > 0 && op.every((i: any) => typeof i === 'function');\r\n}\r\n\r\nexport function isStringArrayGuard(op: any[]): op is string[] {\r\n  if (!Array.isArray(op)) {\r\n    return false;\r\n  }\r\n  return op.length > 0 && op.every((i: any) => typeof i === 'string');\r\n}\r\n\r\nexport function isIterableGuard<T>(obj: unknown): obj is Array<T> {\r\n  if (obj === null || obj === undefined) {\r\n    return false;\r\n  }\r\n  return typeof (obj as any)[Symbol.iterator] === 'function';\r\n}\r\n\r\nexport function isKeyOf<O>(k: unknown): k is keyof O {\r\n  return (\r\n    !!k &&\r\n    (typeof k === 'string' || typeof k === 'symbol' || typeof k === 'number')\r\n  );\r\n}\r\n\r\nexport function isObjectGuard(obj: unknown): obj is object {\r\n  return !!obj && typeof obj === 'object' && !Array.isArray(obj);\r\n}\r\n\r\nexport function isDefined(val: unknown): val is NonNullable<any> {\r\n  return val !== null && val !== undefined;\r\n}\r\n"]}