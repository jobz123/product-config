{"version":3,"file":"key-compare-map.js","sourceRoot":"","sources":["../../../../../../../libs/state/src/lib/rxjs/interfaces/key-compare-map.ts"],"names":[],"mappings":"","sourcesContent":["import { CompareFn } from './compare-fn';\r\n\r\n/**\r\n * @description\r\n * The `KeyCompareMap` is used to configure custom comparison for defined keys.\r\n *\r\n * @example\r\n * const keyCompareMap = {\r\n *    myKey: (o, n) => customCompare(o, n)\r\n *  };\r\n *  const o$ = of({\r\n *    myKey: 5,\r\n *    myOtherKey: 'bar'\r\n *  }).pipe(distinctUntilSomeChanged(['myKey', 'myOtherKey'], keyCompareMap));\r\n *\r\n *  //or\r\n *\r\n *  const o$ = of({\r\n *    myKey: 5,\r\n *    myOtherKey: 'bar'\r\n *  }).pipe(selectSlice(['myKey', 'myOtherKey'], keyCompareMap));\r\n *\r\n * @docsPage interfaces\r\n * @docsCategory operators\r\n */\r\nexport type KeyCompareMap<T extends object> = {\r\n  [K in keyof Partial<T>]: CompareFn<T[K]>;\r\n};\r\n"]}