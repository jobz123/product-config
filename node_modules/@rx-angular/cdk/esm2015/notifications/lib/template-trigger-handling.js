import { Subject } from 'rxjs';
import { mergeAll, share } from 'rxjs/operators';
import { coerceAllFactory } from '@rx-angular/cdk/coercing';
/**
 * @internal
 *
 * A factory function returning an object to handle the process of switching templates by Notification channel.
 * You can next a Observable of `RxNotification` multiple times and merge them into the Observable exposed under `trigger$`
 *
 */
export function templateTriggerHandling() {
    const hotFlattened = coerceAllFactory(() => new Subject(), mergeAll());
    return {
        next(templateName) {
            hotFlattened.next(templateName);
        },
        trigger$: hotFlattened.values$.pipe(share()),
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUtdHJpZ2dlci1oYW5kbGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY2RrL25vdGlmaWNhdGlvbnMvc3JjL2xpYi90ZW1wbGF0ZS10cmlnZ2VyLWhhbmRsaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBYyxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDM0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUk1RDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsdUJBQXVCO0lBSXJDLE1BQU0sWUFBWSxHQUFHLGdCQUFnQixDQUNuQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLE9BQU8sRUFBcUQsRUFDdEUsUUFBUSxFQUFFLENBQ1gsQ0FBQztJQUNGLE9BQU87UUFDTCxJQUFJLENBQUMsWUFBK0Q7WUFDbEUsWUFBWSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNsQyxDQUFDO1FBQ0QsUUFBUSxFQUFFLFlBQVksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0tBQzdDLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBtZXJnZUFsbCwgc2hhcmUgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5pbXBvcnQgeyBjb2VyY2VBbGxGYWN0b3J5IH0gZnJvbSAnQHJ4LWFuZ3VsYXIvY2RrL2NvZXJjaW5nJztcclxuXHJcbmltcG9ydCB7IFJ4Tm90aWZpY2F0aW9uIH0gZnJvbSAnLi9tb2RlbCc7XHJcblxyXG4vKipcclxuICogQGludGVybmFsXHJcbiAqXHJcbiAqIEEgZmFjdG9yeSBmdW5jdGlvbiByZXR1cm5pbmcgYW4gb2JqZWN0IHRvIGhhbmRsZSB0aGUgcHJvY2VzcyBvZiBzd2l0Y2hpbmcgdGVtcGxhdGVzIGJ5IE5vdGlmaWNhdGlvbiBjaGFubmVsLlxyXG4gKiBZb3UgY2FuIG5leHQgYSBPYnNlcnZhYmxlIG9mIGBSeE5vdGlmaWNhdGlvbmAgbXVsdGlwbGUgdGltZXMgYW5kIG1lcmdlIHRoZW0gaW50byB0aGUgT2JzZXJ2YWJsZSBleHBvc2VkIHVuZGVyIGB0cmlnZ2VyJGBcclxuICpcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0ZW1wbGF0ZVRyaWdnZXJIYW5kbGluZzxUPigpOiB7XHJcbiAgdHJpZ2dlciQ6IE9ic2VydmFibGU8UnhOb3RpZmljYXRpb248VD4+O1xyXG4gIG5leHQodGVtcGxhdGVOYW1lOiBPYnNlcnZhYmxlPFJ4Tm90aWZpY2F0aW9uPFQ+Pik6IHZvaWQ7XHJcbn0ge1xyXG4gIGNvbnN0IGhvdEZsYXR0ZW5lZCA9IGNvZXJjZUFsbEZhY3RvcnkoXHJcbiAgICAoKSA9PiBuZXcgU3ViamVjdDxPYnNlcnZhYmxlPFJ4Tm90aWZpY2F0aW9uPFQ+IHwgUnhOb3RpZmljYXRpb248VD4+PigpLFxyXG4gICAgbWVyZ2VBbGwoKVxyXG4gICk7XHJcbiAgcmV0dXJuIHtcclxuICAgIG5leHQodGVtcGxhdGVOYW1lOiBPYnNlcnZhYmxlPFJ4Tm90aWZpY2F0aW9uPFQ+IHwgUnhOb3RpZmljYXRpb248VD4+KSB7XHJcbiAgICAgIGhvdEZsYXR0ZW5lZC5uZXh0KHRlbXBsYXRlTmFtZSk7XHJcbiAgICB9LFxyXG4gICAgdHJpZ2dlciQ6IGhvdEZsYXR0ZW5lZC52YWx1ZXMkLnBpcGUoc2hhcmUoKSksXHJcbiAgfTtcclxufVxyXG4iXX0=