import { switchMap, take } from 'rxjs/operators';
import { Observable, of, throwError } from 'rxjs';
/**
 * @internal
 *
 * @param value
 * @param strategy
 * @param workFactory
 * @param options
 */
export function onStrategy(value, strategy, workFactory, options = {}) {
    let error;
    return new Observable(subscriber => {
        subscriber.next(value);
    }).pipe(strategy.behavior(() => {
        try {
            workFactory(value, strategy.work, options);
        }
        catch (e) {
            error = e;
        }
    }, options.scope || {}), switchMap(() => error ? throwError([error, value]) : of(value)), take(1));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib25TdHJhdGVneS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY2RrL3JlbmRlci1zdHJhdGVnaWVzL3NyYy9saWIvb25TdHJhdGVneS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUdsRDs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxVQUFVLFVBQVUsQ0FDeEIsS0FBUSxFQUNSLFFBQStCLEVBQy9CLFdBSVMsRUFDVCxVQUErQixFQUFFO0lBRWpDLElBQUksS0FBWSxDQUFDO0lBQ2pCLE9BQU8sSUFBSSxVQUFVLENBQUksVUFBVSxDQUFDLEVBQUU7UUFDcEMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ0wsUUFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUU7UUFDckIsSUFBSTtZQUNGLFdBQVcsQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztTQUM1QztRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YsS0FBSyxHQUFHLENBQUMsQ0FBQztTQUNYO0lBQ0gsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLEVBQ3ZCLFNBQVMsQ0FBQyxHQUFHLEVBQUUsQ0FDYixLQUFLLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQy9DLEVBQ0QsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUnhDb2FsZXNjaW5nT3B0aW9ucyB9IGZyb20gJ0ByeC1hbmd1bGFyL2Nkay9jb2FsZXNjaW5nJztcclxuaW1wb3J0IHsgc3dpdGNoTWFwLCB0YWtlIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiwgdGhyb3dFcnJvciB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBSeFJlbmRlcldvcmssIFJ4U3RyYXRlZ3lDcmVkZW50aWFscyB9IGZyb20gJy4vbW9kZWwnO1xyXG5cclxuLyoqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKlxyXG4gKiBAcGFyYW0gdmFsdWVcclxuICogQHBhcmFtIHN0cmF0ZWd5XHJcbiAqIEBwYXJhbSB3b3JrRmFjdG9yeVxyXG4gKiBAcGFyYW0gb3B0aW9uc1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG9uU3RyYXRlZ3k8VD4oXHJcbiAgdmFsdWU6IFQsXHJcbiAgc3RyYXRlZ3k6IFJ4U3RyYXRlZ3lDcmVkZW50aWFscyxcclxuICB3b3JrRmFjdG9yeTogKFxyXG4gICAgdmFsdWU6IFQsXHJcbiAgICB3b3JrOiBSeFJlbmRlcldvcmssXHJcbiAgICBvcHRpb25zOiBSeENvYWxlc2NpbmdPcHRpb25zXHJcbiAgKSA9PiB2b2lkLFxyXG4gIG9wdGlvbnM6IFJ4Q29hbGVzY2luZ09wdGlvbnMgPSB7fVxyXG4pOiBPYnNlcnZhYmxlPFQ+IHtcclxuICBsZXQgZXJyb3I6IEVycm9yO1xyXG4gIHJldHVybiBuZXcgT2JzZXJ2YWJsZTxUPihzdWJzY3JpYmVyID0+IHtcclxuICAgIHN1YnNjcmliZXIubmV4dCh2YWx1ZSk7XHJcbiAgfSkucGlwZShcclxuICAgIHN0cmF0ZWd5LmJlaGF2aW9yKCgpID0+IHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICB3b3JrRmFjdG9yeSh2YWx1ZSwgc3RyYXRlZ3kud29yaywgb3B0aW9ucyk7XHJcbiAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICBlcnJvciA9IGU7XHJcbiAgICAgIH1cclxuICAgIH0sIG9wdGlvbnMuc2NvcGUgfHwge30pLFxyXG4gICAgc3dpdGNoTWFwKCgpID0+XHJcbiAgICAgIGVycm9yID8gdGhyb3dFcnJvcihbZXJyb3IsIHZhbHVlXSkgOiBvZih2YWx1ZSlcclxuICAgICksXHJcbiAgICB0YWtlKDEpXHJcbiAgKTtcclxufVxyXG4iXX0=