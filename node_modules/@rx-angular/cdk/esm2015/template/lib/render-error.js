/** @internal **/
export function isRxRenderError(e) {
    return (e != null && Array.isArray(e) && e.length === 2 && e[0] instanceof Error);
}
/** @internal **/
export function createErrorHandler(_handler) {
    const _handleError = _handler
        ? (e) => _handler.handleError(e)
        : console.error;
    return {
        handleError: (error) => {
            if (isRxRenderError(error)) {
                _handleError(error[0]);
                console.error('additionalErrorContext', error[1]);
            }
            else {
                _handleError(error);
            }
        },
    };
}
/** @internal **/
export function toRenderError(e, context) {
    return [e, context];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLWVycm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jZGsvdGVtcGxhdGUvc3JjL2xpYi9yZW5kZXItZXJyb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0EsaUJBQWlCO0FBQ2pCLE1BQU0sVUFBVSxlQUFlLENBQUksQ0FBTTtJQUN2QyxPQUFPLENBQ0wsQ0FBQyxJQUFJLElBQUksSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxLQUFLLENBQ3pFLENBQUM7QUFDSixDQUFDO0FBRUQsaUJBQWlCO0FBQ2pCLE1BQU0sVUFBVSxrQkFBa0IsQ0FDaEMsUUFBdUI7SUFFdkIsTUFBTSxZQUFZLEdBQUcsUUFBUTtRQUMzQixDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ2hDLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO0lBQ2xCLE9BQU87UUFDTCxXQUFXLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRTtZQUNyQixJQUFJLGVBQWUsQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDMUIsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN2QixPQUFPLENBQUMsS0FBSyxDQUFDLHdCQUF3QixFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ25EO2lCQUFNO2dCQUNMLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNyQjtRQUNILENBQUM7S0FDRixDQUFDO0FBQ0osQ0FBQztBQUVELGlCQUFpQjtBQUNqQixNQUFNLFVBQVUsYUFBYSxDQUFJLENBQVEsRUFBRSxPQUFVO0lBQ25ELE9BQU8sQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDdEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVycm9ySGFuZGxlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuLyoqIEBpbnRlcm5hbCAqKi9cclxuZXhwb3J0IHR5cGUgUnhSZW5kZXJFcnJvcjxUPiA9IFtFcnJvciwgVF07XHJcblxyXG4vKiogQGludGVybmFsICoqL1xyXG5leHBvcnQgdHlwZSBSeFJlbmRlckVycm9yRmFjdG9yeTxULCBFPiA9IChcclxuICBlcnJvcjogRXJyb3IsXHJcbiAgdmFsdWU6IFRcclxuKSA9PiBSeFJlbmRlckVycm9yPEU+O1xyXG5cclxuLyoqIEBpbnRlcm5hbCAqKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzUnhSZW5kZXJFcnJvcjxUPihlOiBhbnkpOiBlIGlzIFJ4UmVuZGVyRXJyb3I8VD4ge1xyXG4gIHJldHVybiAoXHJcbiAgICBlICE9IG51bGwgJiYgQXJyYXkuaXNBcnJheShlKSAmJiBlLmxlbmd0aCA9PT0gMiAmJiBlWzBdIGluc3RhbmNlb2YgRXJyb3JcclxuICApO1xyXG59XHJcblxyXG4vKiogQGludGVybmFsICoqL1xyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXJyb3JIYW5kbGVyKFxyXG4gIF9oYW5kbGVyPzogRXJyb3JIYW5kbGVyXHJcbik6IEVycm9ySGFuZGxlciB7XHJcbiAgY29uc3QgX2hhbmRsZUVycm9yID0gX2hhbmRsZXJcclxuICAgID8gKGUpID0+IF9oYW5kbGVyLmhhbmRsZUVycm9yKGUpXHJcbiAgICA6IGNvbnNvbGUuZXJyb3I7XHJcbiAgcmV0dXJuIHtcclxuICAgIGhhbmRsZUVycm9yOiAoZXJyb3IpID0+IHtcclxuICAgICAgaWYgKGlzUnhSZW5kZXJFcnJvcihlcnJvcikpIHtcclxuICAgICAgICBfaGFuZGxlRXJyb3IoZXJyb3JbMF0pO1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ2FkZGl0aW9uYWxFcnJvckNvbnRleHQnLCBlcnJvclsxXSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgX2hhbmRsZUVycm9yKGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICB9O1xyXG59XHJcblxyXG4vKiogQGludGVybmFsICoqL1xyXG5leHBvcnQgZnVuY3Rpb24gdG9SZW5kZXJFcnJvcjxUPihlOiBFcnJvciwgY29udGV4dDogVCk6IFJ4UmVuZGVyRXJyb3I8VD4ge1xyXG4gIHJldHVybiBbZSwgY29udGV4dF07XHJcbn1cclxuIl19