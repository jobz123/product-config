{"version":3,"file":"cdk-state.js","sources":["../../../../libs/cdk/state/src/lib/accumulateObservables.ts","../../../../libs/cdk/state/src/cdk-state.ts"],"sourcesContent":["import { coalesceWith } from '@rx-angular/cdk/coalescing';\r\nimport { Promise } from '@rx-angular/cdk/zone-less';\r\nimport { combineLatest, from, Observable } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, shareReplay } from 'rxjs/operators';\r\nimport { ArrayReducerFn, ExtractObservableValue, NotEmpty, ObservableMap, PropName, PropType } from './model';\r\n\r\nconst resolvedPromise = Promise.resolve();\r\nconst resolvedPromise$ = from(resolvedPromise);\r\n\r\n/**\r\n * @internal\r\n *\r\n * Used for typing\r\n */\r\nfunction getEntriesToObjectReducerFn<T extends Record<string, any>>(\r\n  keys: PropName<T>[]\r\n): ArrayReducerFn<T> {\r\n  return (\r\n    accumulator: T,\r\n    currentValue?: PropType<T>,\r\n    currentIndex?: number\r\n  ): T => {\r\n    return {\r\n      ...accumulator,\r\n      [keys[currentIndex]]: currentValue\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * This Observable creation function helps to accumulate an object of key & Observable of values to\r\n * an Observable of objects of key & value.\r\n * This comes in handy if you quickly want to create subsets as objects/state-slices of different Observables.\r\n *\r\n * The resulting Observable filters out undefined values forwards only distinct values and shared the aggregated output.\r\n *\r\n * @example\r\n *\r\n * Default usage:\r\n *\r\n * const object$: Observable<{\r\n *   prop1: number,\r\n *   prop2: string,\r\n *   prop3: string\r\n * }> = accumulateObservables({\r\n *   prop1: interval(42),\r\n *   prop2: of('lorem'),\r\n *   prop3: 'test'\r\n * });\r\n *\r\n * Usage with custom duration selector:\r\n *\r\n * const object$: Observable<{\r\n *   prop1: number,\r\n *   prop2: string,\r\n *   prop3: string\r\n * }> = accumulateObservables({\r\n *   prop1: interval(42),\r\n *   prop2: of('lorem'),\r\n *   prop3: 'test'\r\n * }, timer(0, 20));\r\n *\r\n * @param obj - An object of key & Observable values pairs\r\n * @param durationSelector - An Observable determining the duration for the internal coalescing method\r\n */\r\nexport function accumulateObservables<T extends ObservableMap & NotEmpty<T>>(\r\n  // @TODO type static or Observable to enable mixing of imperative and reatctive values\r\n  obj: T,\r\n  durationSelector: Observable<any> = resolvedPromise$\r\n): Observable<{ [K in keyof T]: ExtractObservableValue<T[K]> }> {\r\n  const keys = Object.keys(obj) as (keyof T)[];\r\n  // @TODO better typing to enable static values => coerceObservable(obj[key])\r\n  const observables = keys.map((key) =>\r\n    obj[key].pipe(\r\n      // we avoid using the nullish operator later ;)\r\n      filter((v) => v !== undefined),\r\n      // state \"changes\" differ from each other, this operator ensures distinct values\r\n      distinctUntilChanged()\r\n    )\r\n  );\r\n  return combineLatest(observables).pipe(\r\n    // As combineLatest will emit multiple times for a change in multiple properties we coalesce those emissions\r\n    // together\r\n    coalesceWith(durationSelector),\r\n    // mapping array of values to object\r\n    map((values) =>\r\n      values.reduce(getEntriesToObjectReducerFn(keys), {} as any)\r\n    ),\r\n    // by using shareReplay we share the last composition work done to create the accumulated object\r\n    shareReplay(1)\r\n  );\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Promise"],"mappings":";;;;;AAMA,MAAM,eAAe,GAAGA,SAAO,CAAC,OAAO,EAAE,CAAC;AAC1C,MAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;AAE/C;;;;;AAKA,SAAS,2BAA2B,CAClC,IAAmB;IAEnB,OAAO,CACL,WAAc,EACd,YAA0B,EAC1B,YAAqB;QAErB,uCACK,WAAW,KACd,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,YAAY,IAClC;KACH,CAAC;AACJ,CAAC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAoCgB,qBAAqB;AACnC;AACA,GAAM,EACN,mBAAoC,gBAAgB;IAEpD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAgB,CAAC;;IAE7C,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAC/B,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI;;IAEX,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,SAAS,CAAC;;IAE9B,oBAAoB,EAAE,CACvB,CACF,CAAC;IACF,OAAO,aAAa,CAAC,WAAW,CAAC,CAAC,IAAI;;;IAGpC,YAAY,CAAC,gBAAgB,CAAC;;IAE9B,GAAG,CAAC,CAAC,MAAM,KACT,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,IAAI,CAAC,EAAE,EAAS,CAAC,CAC5D;;IAED,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;AACJ;;AC3FA;;;;;;"}