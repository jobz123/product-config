(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@rx-angular/cdk/zone-configurations', ['exports', '@angular/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['rx-angular'] = global['rx-angular'] || {}, global['rx-angular']['cdk-zone-configurations'] = {}), global.ng.core));
}(this, (function (exports, core) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    // Standard Events
    // Focus Events
    var focusEvents = ['blur', 'focus', 'focusin', 'focusout'];
    /**
     * Mouse Events
     * (MouseEvent)[https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent]
     */
    var mouseEvents = [
        'mousedown',
        'dblclick',
        'mouseenter',
        'mouseleave',
        'mousemove',
        'mouseout',
        'mouseover',
        'mouseup',
        'click',
    ];
    /**
     * Wheel Events
     * (WheelEvent)[https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent]
     */
    var wheelEvents = [
        // (WheelEvent)[https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent]
        'wheel',
        'mousewheel',
    ];
    // Input Events
    var inputEvents = [
        'input',
        'invalid',
        'change',
        'reset',
        'select',
        'submit',
    ];
    /**
     * @deprecated
     */
    var formControlsEvents = inputEvents;
    // [KeyboardEvent](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent)
    var keyboardEvents = ['keydown', 'keypress', 'keyup'];
    // [VR]()
    var vrEvents = [
        'vrdisplayactivate',
        'vrdisplayblur',
        'vrdisplayconnect',
        'vrdisplaydeactivate',
        'vrdisplaydisconnect',
        'vrdisplayfocus',
        'vrdisplaypointerrestricted',
        'vrdisplaypointerunrestricted',
        'vrdisplaypresentchange',
    ];
    // [MSGesture]()
    var mSGestureEvents = [
        'MSGestureChange',
        'MSGestureDoubleTap',
        'MSGestureEnd',
        'MSGestureHold',
        'MSGestureStart',
        'MSGestureTap',
        'MSInertiaStart',
        'MSPointerCancel',
        'MSPointerDown',
        'MSPointerEnter',
        'MSPointerLeave',
        'MSPointerMove',
        'MSPointerOut',
        'MSPointerOver',
        'MSPointerUp',
    ];
    // [xPrint](https://developer.mozilla.org/en-US/docs/Web/API/Window/afterprint_event)
    var printEvents = ['afterprint', 'beforeprint'];
    // [network]()
    var networkEvents = ['offline', 'online'];
    // [network]()
    var audioEvents = [
        'canplay',
        'canplaythrough',
        'pause',
        'play',
        'playing',
        'volumechange',
    ];
    // Composition Events
    var compositionEvents = [
        'compositionstart',
        'compositionupdate',
        'compositionend',
    ];
    /**
     * Touch Events
     * [PointerEvent](https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent)
     * [TouchEvent](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent)
     */
    var touchEvents = [
        // [PointerEvent](https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent)
        'pointerover',
        'pointerenter',
        'pointerdown',
        'pointermove',
        // 'pointerrawupdate',
        'pointerup',
        'pointercancel',
        'pointerout',
        'pointerleave',
        'gotpointercapture',
        'lostpointercapture',
        'pointerup',
        // [TouchEvent](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent)
        'touchstart',
        'touchend',
        'touchmove',
        'touchcancel',
        // [DragEvent](https://developer.mozilla.org/en-US/docs/Web/API/DragEvent)
        'drag',
        'dragend',
        'dragexit',
        'dragenter',
        'dragleave',
        'dragover',
        'dragstart',
        'drop',
    ];
    var globalEvents = [
        'contextmenu',
        'resize',
        'scroll',
        'abort',
        'load',
        'loadeddata',
        'loadedmetadata',
        'loadstart',
        'unload',
        'error',
    ];
    var websocketEvents = ['close', 'error', 'message', 'open'];
    /**
     * Basic XHR Events
     * [Load](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/load_event)
     * [Error](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/error_event)
     * There are more events you may want to unpatch https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest
     */
    // XHREvent (group is here to make it easier to target XHR in angular applications. It contains redundant events e.g. 'error')
    var xhrEvents = ['load', 'error'];
    // @TODO
    var windowEvents = [
        'compassneedscalibration',
        'durationchange',
        'emptied',
        'ended',
        'orientationchange',
        'ratechange',
        'seeked',
        'seeking',
        'stalled',
        'suspend',
        'timeupdate',
        'waiting',
    ];
    /**
     * All Events combined
     */
    var allEvents = Array.from(new Set(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(focusEvents)), __read(mouseEvents)), __read(wheelEvents)), __read(inputEvents)), __read(keyboardEvents)), __read(inputEvents)), __read(vrEvents)), __read(mSGestureEvents)), __read(printEvents)), __read(networkEvents)), __read(audioEvents)), __read(compositionEvents)), __read(touchEvents)), __read(globalEvents)), __read(websocketEvents)), __read(xhrEvents)), __read(windowEvents))));

    var zoneGlobalDisableConfigurationsKeys = [
        'EventEmitter',
        'fs',
        'node_timers',
        'nextTick',
        'crypto',
        'defineProperty',
        'registerElement',
        'EventTargetLegacy',
        'timers',
        'requestAnimationFrame',
        'blocking',
        'EventTarget',
        'FileReader',
        'MutationObserver',
        'IntersectionObserver',
        'on_property',
        'customElements',
        'XHR',
        'geolocation',
        'canvas',
        'ZoneAwarePromise',
    ];
    var zoneGlobalEventsConfigurationsKeys = ['UNPATCHED_EVENTS', 'PASSIVE_EVENTS'];
    var zoneGlobalSettingsConfigurationsKeys = ['DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION'];
    var zoneRuntimeConfigurationsKeys = [
        'ignoreConsoleErrorUncaughtError',
    ];
    var zoneTestDisableConfigurationsKeys = ['jasmine', 'mocha', 'jest'];
    var zoneTestSettingsConfigurationsKeys = [
        'fakeAsyncDisablePatchingClock',
        'fakeAsyncAutoFakeAsyncWhenClockPatched',
        'supportWaitUnResolvedChainedPromise',
    ];

    var convenienceMethods = function (config) { return ({
        unpatchXHR: function () {
            config.global.disable.XHR();
            config.events.disable.UNPATCHED_EVENTS(__spreadArray([], __read(xhrEvents)));
        },
        useUnpatchedPassiveScrollEvents: function () {
            config.events.disable.PASSIVE_EVENTS(['scroll']);
            config.events.disable.UNPATCHED_EVENTS(['scroll']);
        },
    }); };

    var zoneDisable = '__Zone_disable_';
    var zoneSymbol = '__zone_symbol__';
    /**
     * https://angular.io/guide/zone#setting-up-zonejs
     **/
    function assertZoneConfig() {
        if (window.Zone !== undefined) {
            // @TODO link to docs
            console.error('zone-flags file needs to get imported before zone.js');
        }
    }
    var addDisableFlag = function (prop) {
        var _a;
        return (_a = {},
            _a[prop] = function () {
                assertZoneConfig();
                return (window[zoneDisable + prop] = true);
            },
            _a);
    };
    var ɵ0 = addDisableFlag;
    var addSymbolFlag = function (prop) {
        var _a;
        return (_a = {},
            _a[prop] = function () {
                assertZoneConfig();
                return (window[zoneSymbol + prop] = true);
            },
            _a);
    };
    var ɵ1 = addSymbolFlag;
    var addArraySymbolFlag = function (prop) {
        var _a;
        return (_a = {},
            _a[prop] = function (eventNames) {
                assertZoneConfig();
                var w = window;
                return (w[zoneSymbol + prop] = __spreadArray(__spreadArray([], __read((Array.isArray(w[zoneSymbol + prop]) ? w[zoneSymbol + prop] : []))), __read(eventNames)));
            },
            _a);
    };
    var ɵ2 = addArraySymbolFlag;
    var reduceToObject = function (methodsArray) {
        return methodsArray.reduce(function (map, item) { return (Object.assign(Object.assign({}, map), item)); }, {});
    };
    var ɵ3 = reduceToObject;
    /**
     * factory function to create a `RxZoneConfig` object.
     *
     * @Example
     * import { globalEvents,xhrEvent, zoneConfig} from '@rx-angular/cdk/zone-flags';
     *
     * const zoneConfig = createZoneFlagsConfigurator();
     *
     * zoneConfig.global.disable.requestAnimationFrame();
     * zoneConfig.global.disable.timers();
     * zoneConfig.events.disable.UNPATCHED_EVENTS([...globalEvents, ...xhrEvent]);
     *
     */
    function createZoneFlagsConfigurator() {
        var cfg = core.ɵglobal;
        var configProps = __spreadArray(__spreadArray([], __read(__spreadArray(__spreadArray([], __read(zoneGlobalDisableConfigurationsKeys)), __read(zoneTestDisableConfigurationsKeys)).map(function (prop) { return zoneDisable + prop; }))), __read(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(zoneGlobalSettingsConfigurationsKeys)), __read(zoneTestSettingsConfigurationsKeys)), __read(zoneGlobalEventsConfigurationsKeys)), __read(zoneRuntimeConfigurationsKeys)).map(function (prop) { return zoneSymbol + prop; })));
        // append as global method for easy debugging
        cfg.__rxa_zone_config__log = function () {
            configProps.forEach(function (flag) {
                // tslint:disable-next-line:no-unused-expression
                cfg[flag] && console.log(flag, cfg[flag]);
            });
        };
        var zoneConfigObj = {
            global: {
                disable: reduceToObject(__spreadArray(__spreadArray([], __read(zoneGlobalDisableConfigurationsKeys.map(addDisableFlag))), __read(zoneGlobalSettingsConfigurationsKeys.map(addSymbolFlag)))),
            },
            test: {
                disable: reduceToObject(__spreadArray(__spreadArray([], __read(zoneTestDisableConfigurationsKeys.map(addDisableFlag))), __read(zoneTestSettingsConfigurationsKeys.map(addSymbolFlag)))),
            },
            events: {
                disable: reduceToObject(zoneGlobalEventsConfigurationsKeys.map(addArraySymbolFlag)),
            },
            runtime: {
                disable: reduceToObject(zoneRuntimeConfigurationsKeys.map(addSymbolFlag)),
            },
        };
        return Object.assign(Object.assign({}, zoneConfigObj), convenienceMethods(zoneConfigObj));
    }
    /**
     * An object for typed zone-flags configuration.
     *
     * @Example
     *
     * create file `zone-flags.ts` parallel to your `polyfills.ts` and insert following content:
     * ```typescript
     * import { globalEvents, xhrEvent, zoneConfig} from '@rx-angular/cdk/zone-flags';
     *
     * zoneConfig.global.disable.requestAnimationFrame();
     * zoneConfig.global.disable.timers();
     * zoneConfig.events.disable.UNPATCHED_EVENTS([...globalEvents, ...xhrEvent]);
     * ```
     * In `polyfills.ts` above the zone import, import `zone-flags.ts`
     *
     * ```typescript
     * import './zone-flags';
     * // Zone JS is required by default for Angular itself.
     * import 'zone.js';
     * ```
     *
     */
    var zoneConfig = createZoneFlagsConfigurator();

    /**
     * Generated bundle index. Do not edit.
     */

    exports.allEvents = allEvents;
    exports.audioEvents = audioEvents;
    exports.compositionEvents = compositionEvents;
    exports.focusEvents = focusEvents;
    exports.formControlsEvents = formControlsEvents;
    exports.globalEvents = globalEvents;
    exports.inputEvents = inputEvents;
    exports.keyboardEvents = keyboardEvents;
    exports.mSGestureEvents = mSGestureEvents;
    exports.mouseEvents = mouseEvents;
    exports.networkEvents = networkEvents;
    exports.printEvents = printEvents;
    exports.touchEvents = touchEvents;
    exports.vrEvents = vrEvents;
    exports.websocketEvents = websocketEvents;
    exports.wheelEvents = wheelEvents;
    exports.windowEvents = windowEvents;
    exports.xhrEvents = xhrEvents;
    exports.zoneConfig = zoneConfig;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=cdk-zone-configurations.umd.js.map
